{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"Overview\",\"depth\":2},{\"url\":\"#resource-apis\",\"depth\":2,\"text\":\"Resource APIs \"}]","content":"[[\"$r\",\"MaxWidth\",\"last\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"In addition to \",[\"$r\",\"a\",null,{\"href\":\"/reference/react\",\"children\":\"Hooks\"}],\" and \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/components\",\"children\":\"Components\"}],\", the \",[\"$r\",\"code\",null,{\"children\":\"react\"}],\" package exports a few other APIs that are useful for defining components. This page lists all the remaining modern React APIs.\"]}]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"/reference/react/createContext\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createContext\"}]}],\" lets you define and provide context to the child components. Used with \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useContext\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useContext\"}],\".\"]}]]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"/reference/react/forwardRef\",\"children\":[\"$r\",\"code\",null,{\"children\":\"forwardRef\"}]}],\" lets your component expose a DOM node as a ref to the parent. Used with \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useRef\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useRef\"}],\".\"]}]]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"/reference/react/lazy\",\"children\":[\"$r\",\"code\",null,{\"children\":\"lazy\"}]}],\" lets you defer loading a component’s code until it’s rendered for the first time.\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"/reference/react/memo\",\"children\":[\"$r\",\"code\",null,{\"children\":\"memo\"}]}],\" lets your component skip re-renders with same props. Used with \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useMemo\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useMemo\"}]}],\" and \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useCallback\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useCallback\"}],\".\"]}]]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"/reference/react/startTransition\",\"children\":[\"$r\",\"code\",null,{\"children\":\"startTransition\"}]}],\" lets you mark a state update as non-urgent. Similar to \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useTransition\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useTransition\"}],\".\"]}]]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"/reference/react/act\",\"children\":[\"$r\",\"code\",null,{\"children\":\"act\"}]}],\" lets you wrap renders and interactions in tests to ensure updates have processed before making assertions.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"resource-apis\",\"children\":\"Resource APIs \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"em\",null,{\"children\":\"Resources\"}],\" can be accessed by a component without having them as part of their state. For example, a component can read a message from a Promise or read styling information from a context.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"To read a value from a resource, use this API:\"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"/reference/react/use\",\"children\":[\"$r\",\"code\",null,{\"children\":\"use\"}]}],\" lets you read the value of a resource like a \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"Promise\"}],\" or \",[\"$r\",\"a\",null,{\"href\":\"/learn/passing-data-deeply-with-context\",\"children\":\"context\"}],\".\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function MessageComponent({ messagePromise }) {\\n  const message = use(messagePromise);\\n  const theme = use(ThemeContext);\\n  // ...\\n}\\n\"}]}]]}]]","meta":{"title":"Built-in React APIs"},"languages":null},"__N_SSG":true}