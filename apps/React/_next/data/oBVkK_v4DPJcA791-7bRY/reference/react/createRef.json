{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"Overview\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"Reference \"},{\"url\":\"#createref\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"createRef()\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"Usage \"},{\"url\":\"#declaring-a-ref-in-a-class-component\",\"depth\":3,\"text\":\"Declaring a ref in a class component \"},{\"url\":\"#alternatives\",\"depth\":2,\"text\":\"Alternatives \"},{\"url\":\"#migrating-from-a-class-with-createref-to-a-function-with-useref\",\"depth\":3,\"text\":[\"Migrating from a class with \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" to a function with \",[\"$r\",\"code\",null,{\"children\":\"useRef\"}],\" \"]}]","content":"[[\"$r\",\"MaxWidth\",\"44\",{\"children\":[[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" is mostly used for \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component\",\"children\":\"class components.\"}],\" Function components typically rely on \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useRef\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useRef\"}]}],\" instead.\"]}]}],\"\\n\",[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" creates a \",[\"$r\",\"a\",null,{\"href\":\"/learn/referencing-values-with-refs\",\"children\":\"ref\"}],\" object which can contain arbitrary value.\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"class MyInput extends Component {\\n  inputRef = createRef();\\n  // ...\\n}\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"Reference \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"createref\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef()\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Call \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" to declare a \",[\"$r\",\"a\",null,{\"href\":\"/learn/referencing-values-with-refs\",\"children\":\"ref\"}],\" inside a \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component\",\"children\":\"class component.\"}]]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { createRef, Component } from 'react';\\n\\nclass MyComponent extends Component {\\n  intervalRef = createRef();\\n  inputRef = createRef();\\n  // ...\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"See more examples below.\"}]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"Parameters \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" takes no parameters.\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"Returns \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" returns an object with a single property:\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"current\"}],\": Initially, it’s set to the \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\". You can later set it to something else. If you pass the ref object to React as a \",[\"$r\",\"code\",null,{\"children\":\"ref\"}],\" attribute to a JSX node, React will set its \",[\"$r\",\"code\",null,{\"children\":\"current\"}],\" property.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"Caveats \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" always returns a \",[\"$r\",\"em\",null,{\"children\":\"different\"}],\" object. It’s equivalent to writing \",[\"$r\",\"code\",null,{\"children\":\"{ current: null }\"}],\" yourself.\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"In a function component, you probably want \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useRef\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useRef\"}]}],\" instead which always returns the same object.\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"const ref = useRef()\"}],\" is equivalent to \",[\"$r\",\"code\",null,{\"children\":\"const [ref, _] = useState(() => createRef(null))\"}],\".\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"Usage \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"declaring-a-ref-in-a-class-component\",\"children\":\"Declaring a ref in a class component \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"To declare a ref inside a \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component\",\"children\":\"class component,\"}],\" call \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" and assign its result to a class field:\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{4}\",\"children\":\"import { Component, createRef } from 'react';\\n\\nclass Form extends Component {\\n  inputRef = createRef();\\n\\n  // ...\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"If you now pass \",[\"$r\",\"code\",null,{\"children\":\"ref={this.inputRef}\"}],\" to an \",[\"$r\",\"code\",null,{\"children\":\"<input>\"}],\" in your JSX, React will populate \",[\"$r\",\"code\",null,{\"children\":\"this.inputRef.current\"}],\" with the input DOM node. For example, here is how you make a button that focuses the input:\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { Component, createRef } from 'react';\\n\\nexport default class Form extends Component {\\n  inputRef = createRef();\\n\\n  handleClick = () => {\\n    this.inputRef.current.focus();\\n  }\\n\\n  render() {\\n    return (\\n      <>\\n        <input ref={this.inputRef} />\\n        <button onClick={this.handleClick}>\\n          Focus the input\\n        </button>\\n      </>\\n    );\\n  }\\n}\\n\"}]}]}],[\"$r\",\"MaxWidth\",\"56\",{\"children\":[\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" is mostly used for \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component\",\"children\":\"class components.\"}],\" Function components typically rely on \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useRef\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useRef\"}]}],\" instead.\"]}]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"alternatives\",\"children\":\"Alternatives \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"migrating-from-a-class-with-createref-to-a-function-with-useref\",\"children\":[\"Migrating from a class with \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" to a function with \",[\"$r\",\"code\",null,{\"children\":\"useRef\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"We recommend using function components instead of \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component\",\"children\":\"class components\"}],\" in new code. If you have some existing class components using \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\", here is how you can convert them. This is the original code:\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { Component, createRef } from 'react';\\n\\nexport default class Form extends Component {\\n  inputRef = createRef();\\n\\n  handleClick = () => {\\n    this.inputRef.current.focus();\\n  }\\n\\n  render() {\\n    return (\\n      <>\\n        <input ref={this.inputRef} />\\n        <button onClick={this.handleClick}>\\n          Focus the input\\n        </button>\\n      </>\\n    );\\n  }\\n}\\n\"}]}]}],[\"$r\",\"MaxWidth\",\"60\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"When you \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component#alternatives\",\"children\":\"convert this component from a class to a function,\"}],\" replace calls to \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" with calls to \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useRef\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useRef\"}],\":\"]}]]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { useRef } from 'react';\\n\\nexport default function Form() {\\n  const inputRef = useRef(null);\\n\\n  function handleClick() {\\n    inputRef.current.focus();\\n  }\\n\\n  return (\\n    <>\\n      <input ref={inputRef} />\\n      <button onClick={handleClick}>\\n        Focus the input\\n      </button>\\n    </>\\n  );\\n}\\n\"}]}]}]]","meta":{"title":"createRef"},"languages":null},"__N_SSG":true}