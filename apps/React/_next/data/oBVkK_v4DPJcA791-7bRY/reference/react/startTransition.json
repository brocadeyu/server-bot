{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"Overview\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"Reference \"},{\"url\":\"#starttransition\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"startTransition(action)\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"Usage \"},{\"url\":\"#marking-a-state-update-as-a-non-blocking-transition\",\"depth\":3,\"text\":\"Marking a state update as a non-blocking Transition \"}]","content":"[[\"$r\",\"MaxWidth\",\"last\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" lets you render a part of the UI in the background.\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"startTransition(action)\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"Reference \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"starttransition\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"startTransition(action)\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"The \",[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" function lets you mark a state update as a Transition.\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{7,9}\",\"children\":\"import { startTransition } from 'react';\\n\\nfunction TabContainer() {\\n  const [tab, setTab] = useState('about');\\n\\n  function selectTab(nextTab) {\\n    startTransition(() => {\\n      setTab(nextTab);\\n    });\\n  }\\n  // ...\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"See more examples below.\"}]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"Parameters \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"action\"}],\": A function that updates some state by calling one or more \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useState#setstate\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"set\"}],\" functions\"]}],\". React calls \",[\"$r\",\"code\",null,{\"children\":\"action\"}],\" immediately with no parameters and marks all state updates scheduled synchronously during the \",[\"$r\",\"code\",null,{\"children\":\"action\"}],\" function call as Transitions. Any async calls awaited in the \",[\"$r\",\"code\",null,{\"children\":\"action\"}],\" will be included in the transition, but currently require wrapping any \",[\"$r\",\"code\",null,{\"children\":\"set\"}],\" functions after the \",[\"$r\",\"code\",null,{\"children\":\"await\"}],\" in an additional \",[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" (see \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useTransition#react-doesnt-treat-my-state-update-after-await-as-a-transition\",\"children\":\"Troubleshooting\"}],\"). State updates marked as Transitions will be \",[\"$r\",\"a\",null,{\"href\":\"#marking-a-state-update-as-a-non-blocking-transition\",\"children\":\"non-blocking\"}],\" and \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useTransition#preventing-unwanted-loading-indicators\",\"children\":\"will not display unwanted loading indicators.\"}],\".\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"Returns \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" does not return anything.\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"Caveats \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" does not provide a way to track whether a Transition is pending. To show a pending indicator while the Transition is ongoing, you need \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useTransition\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useTransition\"}]}],\" instead.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"You can wrap an update into a Transition only if you have access to the \",[\"$r\",\"code\",null,{\"children\":\"set\"}],\" function of that state. If you want to start a Transition in response to some prop or a custom Hook return value, try \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useDeferredValue\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useDeferredValue\"}]}],\" instead.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"The function you pass to \",[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" is called immediately, marking all state updates that happen while it executes as Transitions. If you try to perform state updates in a \",[\"$r\",\"code\",null,{\"children\":\"setTimeout\"}],\", for example, they won’t be marked as Transitions.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"You must wrap any state updates after any async requests in another \",[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" to mark them as Transitions. This is a known limitation that we will fix in the future (see \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useTransition#react-doesnt-treat-my-state-update-after-await-as-a-transition\",\"children\":\"Troubleshooting\"}],\").\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":\"A state update marked as a Transition will be interrupted by other state updates. For example, if you update a chart component inside a Transition, but then start typing into an input while the chart is in the middle of a re-render, React will restart the rendering work on the chart component after handling the input state update.\"}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":\"Transition updates can’t be used to control text inputs.\"}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":\"If there are multiple ongoing Transitions, React currently batches them together. This is a limitation that may be removed in a future release.\"}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"Usage \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"marking-a-state-update-as-a-non-blocking-transition\",\"children\":\"Marking a state update as a non-blocking Transition \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"You can mark a state update as a \",[\"$r\",\"em\",null,{\"children\":\"Transition\"}],\" by wrapping it in a \",[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" call:\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{7,9}\",\"children\":\"import { startTransition } from 'react';\\n\\nfunction TabContainer() {\\n  const [tab, setTab] = useState('about');\\n\\n  function selectTab(nextTab) {\\n    startTransition(() => {\\n      setTab(nextTab);\\n    });\\n  }\\n  // ...\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"Transitions let you keep the user interface updates responsive even on slow devices.\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"With a Transition, your UI stays responsive in the middle of a re-render. For example, if the user clicks a tab but then change their mind and click another tab, they can do that without waiting for the first re-render to finish.\"}],\"\\n\",[\"$r\",\"Note\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" is very similar to \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useTransition\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useTransition\"}]}],\", except that it does not provide the \",[\"$r\",\"code\",null,{\"children\":\"isPending\"}],\" flag to track whether a Transition is ongoing. You can call \",[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" when \",[\"$r\",\"code\",null,{\"children\":\"useTransition\"}],\" is not available. For example, \",[\"$r\",\"code\",null,{\"children\":\"startTransition\"}],\" works outside components, such as from a data library.\"]}],[\"$r\",\"p\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/reference/react/useTransition\",\"children\":[\"Learn about Transitions and see examples on the \",[\"$r\",\"code\",null,{\"children\":\"useTransition\"}],\" page.\"]}]}]]}]]}]]","meta":{"title":"startTransition"},"languages":null},"__N_SSG":true}