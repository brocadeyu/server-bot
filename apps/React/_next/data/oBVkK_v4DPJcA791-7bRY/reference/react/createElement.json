{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"Overview\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"Reference \"},{\"url\":\"#createelement\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"createElement(type, props, ...children)\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"Usage \"},{\"url\":\"#creating-an-element-without-jsx\",\"depth\":3,\"text\":\"Creating an element without JSX \"}]","content":"[[\"$r\",\"MaxWidth\",\"58\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createElement\"}],\" lets you create a React element. It serves as an alternative to writing \",[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"JSX.\"}]]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"const element = createElement(type, props, ...children)\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"Reference \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"createelement\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"createElement(type, props, ...children)\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Call \",[\"$r\",\"code\",null,{\"children\":\"createElement\"}],\" to create a React element with the given \",[\"$r\",\"code\",null,{\"children\":\"type\"}],\", \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\", and \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\".\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { createElement } from 'react';\\n\\nfunction Greeting({ name }) {\\n  return createElement(\\n    'h1',\\n    { className: 'greeting' },\\n    'Hello'\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"See more examples below.\"}]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"Parameters \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"type\"}],\": The \",[\"$r\",\"code\",null,{\"children\":\"type\"}],\" argument must be a valid React component type. For example, it could be a tag name string (such as \",[\"$r\",\"code\",null,{\"children\":\"'div'\"}],\" or \",[\"$r\",\"code\",null,{\"children\":\"'span'\"}],\"), or a React component (a function, a class, or a special component like \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Fragment\",\"children\":[\"$r\",\"code\",null,{\"children\":\"Fragment\"}]}],\").\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"props\"}],\": The \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" argument must either be an object or \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\". If you pass \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\", it will be treated the same as an empty object. React will create an element with props matching the \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" you have passed. Note that \",[\"$r\",\"code\",null,{\"children\":\"ref\"}],\" and \",[\"$r\",\"code\",null,{\"children\":\"key\"}],\" from your \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" object are special and will \",[\"$r\",\"em\",null,{\"children\":\"not\"}],\" be available as \",[\"$r\",\"code\",null,{\"children\":\"element.props.ref\"}],\" and \",[\"$r\",\"code\",null,{\"children\":\"element.props.key\"}],\" on the returned \",[\"$r\",\"code\",null,{\"children\":\"element\"}],\". They will be available as \",[\"$r\",\"code\",null,{\"children\":\"element.ref\"}],\" and \",[\"$r\",\"code\",null,{\"children\":\"element.key\"}],\".\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"optional\"}],\" \",[\"$r\",\"code\",null,{\"children\":\"...children\"}],\": Zero or more child nodes. They can be any React nodes, including React elements, strings, numbers, \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/createPortal\",\"children\":\"portals\"}],\", empty nodes (\",[\"$r\",\"code\",null,{\"children\":\"null\"}],\", \",[\"$r\",\"code\",null,{\"children\":\"undefined\"}],\", \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\", and \",[\"$r\",\"code\",null,{\"children\":\"false\"}],\"), and arrays of React nodes.\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"Returns \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createElement\"}],\" returns a React element object with a few properties:\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"type\"}],\": The \",[\"$r\",\"code\",null,{\"children\":\"type\"}],\" you have passed.\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"props\"}],\": The \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" you have passed except for \",[\"$r\",\"code\",null,{\"children\":\"ref\"}],\" and \",[\"$r\",\"code\",null,{\"children\":\"key\"}],\".\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"ref\"}],\": The \",[\"$r\",\"code\",null,{\"children\":\"ref\"}],\" you have passed. If missing, \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\".\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"key\"}],\": The \",[\"$r\",\"code\",null,{\"children\":\"key\"}],\" you have passed, coerced to a string. If missing, \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\".\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"Usually, you’ll return the element from your component or make it a child of another element. Although you may read the element’s properties, it’s best to treat every element as opaque after it’s created, and only render it.\"}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"Caveats \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"You must \",[\"$r\",\"strong\",null,{\"children\":[\"treat React elements and their props as \",[\"$r\",\"a\",null,{\"href\":\"https://en.wikipedia.org/wiki/Immutable_object\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"immutable\"}]]}],\" and never change their contents after creation. In development, React will \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"freeze\"}],\" the returned element and its \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" property shallowly to enforce this.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"When you use JSX, \",[\"$r\",\"strong\",null,{\"children\":\"you must start a tag with a capital letter to render your own custom component.\"}],\" In other words, \",[\"$r\",\"code\",null,{\"children\":\"<Something />\"}],\" is equivalent to \",[\"$r\",\"code\",null,{\"children\":\"createElement(Something)\"}],\", but \",[\"$r\",\"code\",null,{\"children\":\"<something />\"}],\" (lowercase) is equivalent to \",[\"$r\",\"code\",null,{\"children\":\"createElement('something')\"}],\" (note it’s a string, so it will be treated as a built-in HTML tag).\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"You should only \",[\"$r\",\"strong\",null,{\"children\":[\"pass children as multiple arguments to \",[\"$r\",\"code\",null,{\"children\":\"createElement\"}],\" if they are all statically known,\"]}],\" like \",[\"$r\",\"code\",null,{\"children\":\"createElement('h1', {}, child1, child2, child3)\"}],\". If your children are dynamic, pass the entire array as the third argument: \",[\"$r\",\"code\",null,{\"children\":\"createElement('ul', {}, listItems)\"}],\". This ensures that React will \",[\"$r\",\"a\",null,{\"href\":\"/learn/rendering-lists#keeping-list-items-in-order-with-key\",\"children\":[\"warn you about missing \",[\"$r\",\"code\",null,{\"children\":\"key\"}],\"s\"]}],\" for any dynamic lists. For static lists this is not necessary because they never reorder.\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"Usage \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"creating-an-element-without-jsx\",\"children\":\"Creating an element without JSX \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"If you don’t like \",[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"JSX\"}],\" or can’t use it in your project, you can use \",[\"$r\",\"code\",null,{\"children\":\"createElement\"}],\" as an alternative.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"To create an element without JSX, call \",[\"$r\",\"code\",null,{\"children\":\"createElement\"}],\" with some \",[\"$r\",\"CodeStep\",null,{\"step\":1,\"children\":\"type\"}],\", \",[\"$r\",\"CodeStep\",null,{\"step\":2,\"children\":\"props\"}],\", and \",[\"$r\",\"CodeStep\",null,{\"step\":3,\"children\":\"children\"}],\":\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 5, \\\"'h1'\\\"], [2, 6, \\\"{ className: 'greeting' }\\\"], [3, 7, \\\"'Hello ',\\\"], [3, 8, \\\"createElement('i', null, name),\\\"], [3, 9, \\\"'. Welcome!'\\\"]]\",\"children\":\"import { createElement } from 'react';\\n\\nfunction Greeting({ name }) {\\n  return createElement(\\n    'h1',\\n    { className: 'greeting' },\\n    'Hello ',\\n    createElement('i', null, name),\\n    '. Welcome!'\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"The \",[\"$r\",\"CodeStep\",null,{\"step\":3,\"children\":\"children\"}],\" are optional, and you can pass as many as you need (the example above has three children). This code will display a \",[\"$r\",\"code\",null,{\"children\":\"<h1>\"}],\" header with a greeting. For comparison, here is the same example rewritten with JSX:\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 3, \\\"h1\\\"], [2, 3, \\\"className=\\\\\\\"greeting\\\\\\\"\\\"], [3, 4, \\\"Hello <i>{name}</i>. Welcome!\\\"], [1, 5, \\\"h1\\\"]]\",\"children\":\"function Greeting({ name }) {\\n  return (\\n    <h1 className=\\\"greeting\\\">\\n      Hello <i>{name}</i>. Welcome!\\n    </h1>\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"To render your own React component, pass a function like \",[\"$r\",\"code\",null,{\"children\":\"Greeting\"}],\" as the \",[\"$r\",\"CodeStep\",null,{\"step\":1,\"children\":\"type\"}],\" instead of a string like \",[\"$r\",\"code\",null,{\"children\":\"'h1'\"}],\":\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 2, \\\"Greeting\\\"], [2, 2, \\\"{ name: 'Taylor' }\\\"]]\",\"children\":\"export default function App() {\\n  return createElement(Greeting, { name: 'Taylor' });\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"With JSX, it would look like this:\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 2, \\\"Greeting\\\"], [2, 2, \\\"name=\\\\\\\"Taylor\\\\\\\"\\\"]]\",\"children\":\"export default function App() {\\n  return <Greeting name=\\\"Taylor\\\" />;\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Here is a complete example written with \",[\"$r\",\"code\",null,{\"children\":\"createElement\"}],\":\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { createElement } from 'react';\\n\\nfunction Greeting({ name }) {\\n  return createElement(\\n    'h1',\\n    { className: 'greeting' },\\n    'Hello ',\\n    createElement('i', null, name),\\n    '. Welcome!'\\n  );\\n}\\n\\nexport default function App() {\\n  return createElement(\\n    Greeting,\\n    { name: 'Taylor' }\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".greeting {\\n  color: darkgreen;\\n  font-family: Georgia;\\n}\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"62\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":\"And here is the same example written using JSX:\"}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Greeting({ name }) {\\n  return (\\n    <h1 className=\\\"greeting\\\">\\n      Hello <i>{name}</i>. Welcome!\\n    </h1>\\n  );\\n}\\n\\nexport default function App() {\\n  return <Greeting name=\\\"Taylor\\\" />;\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".greeting {\\n  color: darkgreen;\\n  font-family: Georgia;\\n}\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"last\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Both coding styles are fine, so you can use whichever one you prefer for your project. The main benefit of using JSX compared to \",[\"$r\",\"code\",null,{\"children\":\"createElement\"}],\" is that it’s easy to see which closing tag corresponds to which opening tag.\"]}],\"\\n\",[\"$r\",\"DeepDive\",null,{\"children\":[[\"$r\",\"h4\",null,{\"id\":\"what-is-a-react-element-exactly\",\"children\":\"What is a React element, exactly? \"}],[\"$r\",\"p\",null,{\"children\":[\"An element is a lightweight description of a piece of the user interface. For example, both \",[\"$r\",\"code\",null,{\"children\":\"<Greeting name=\\\"Taylor\\\" />\"}],\" and \",[\"$r\",\"code\",null,{\"children\":\"createElement(Greeting, { name: 'Taylor' })\"}],\" produce an object like this:\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"// Slightly simplified\\n{\\n  type: Greeting,\\n  props: {\\n    name: 'Taylor'\\n  },\\n  key: null,\\n  ref: null,\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":[\"$r\",\"strong\",null,{\"children\":[\"Note that creating this object does not render the \",[\"$r\",\"code\",null,{\"children\":\"Greeting\"}],\" component or create any DOM elements.\"]}]}],[\"$r\",\"p\",null,{\"children\":[\"A React element is more like a description—an instruction for React to later render the \",[\"$r\",\"code\",null,{\"children\":\"Greeting\"}],\" component. By returning this object from your \",[\"$r\",\"code\",null,{\"children\":\"App\"}],\" component, you tell React what to do next.\"]}],[\"$r\",\"p\",null,{\"children\":\"Creating elements is extremely cheap so you don’t need to try to optimize or avoid it.\"}]]}]]}]]","meta":{"title":"createElement"},"languages":null},"__N_SSG":true}