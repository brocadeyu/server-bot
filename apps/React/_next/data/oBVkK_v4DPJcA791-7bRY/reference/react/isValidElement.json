{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"Overview\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"Reference \"},{\"url\":\"#isvalidelement\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"isValidElement(value)\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"Usage \"},{\"url\":\"#checking-if-something-is-a-react-element\",\"depth\":3,\"text\":\"Checking if something is a React element \"}]","content":"[[\"$r\",\"MaxWidth\",\"last\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" checks whether a value is a React element.\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"const isElement = isValidElement(value)\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"Reference \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"isvalidelement\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"isValidElement(value)\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Call \",[\"$r\",\"code\",null,{\"children\":\"isValidElement(value)\"}],\" to check whether \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" is a React element.\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { isValidElement, createElement } from 'react';\\n\\n// ✅ React elements\\nconsole.log(isValidElement(<p />)); // true\\nconsole.log(isValidElement(createElement('p'))); // true\\n\\n// ❌ Not React elements\\nconsole.log(isValidElement(25)); // false\\nconsole.log(isValidElement('Hello')); // false\\nconsole.log(isValidElement({ age: 42 })); // false\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"See more examples below.\"}]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"Parameters \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"value\"}],\": The \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" you want to check. It can be any a value of any type.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"Returns \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" returns \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\" if the \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" is a React element. Otherwise, it returns \",[\"$r\",\"code\",null,{\"children\":\"false\"}],\".\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"Caveats \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":[\"Only \",[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"JSX tags\"}],\" and objects returned by \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/createElement\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createElement\"}]}],\" are considered to be React elements.\"]}],\" For example, even though a number like \",[\"$r\",\"code\",null,{\"children\":\"42\"}],\" is a valid React \",[\"$r\",\"em\",null,{\"children\":\"node\"}],\" (and can be returned from a component), it is not a valid React element. Arrays and portals created with \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/createPortal\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createPortal\"}]}],\" are also \",[\"$r\",\"em\",null,{\"children\":\"not\"}],\" considered to be React elements.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"Usage \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"checking-if-something-is-a-react-element\",\"children\":\"Checking if something is a React element \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Call \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" to check if some value is a \",[\"$r\",\"em\",null,{\"children\":\"React element.\"}]]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"React elements are:\"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"Values produced by writing a \",[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"JSX tag\"}]]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"Values produced by calling \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/createElement\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createElement\"}]}]]}],\"\\n\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"For React elements, \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" returns \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\":\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { isValidElement, createElement } from 'react';\\n\\n// ✅ JSX tags are React elements\\nconsole.log(isValidElement(<p />)); // true\\nconsole.log(isValidElement(<MyComponent />)); // true\\n\\n// ✅ Values returned by createElement are React elements\\nconsole.log(isValidElement(createElement('p'))); // true\\nconsole.log(isValidElement(createElement(MyComponent))); // true\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"Any other values, such as strings, numbers, or arbitrary objects and arrays, are not React elements.\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"For them, \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" returns \",[\"$r\",\"code\",null,{\"children\":\"false\"}],\":\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"// ❌ These are *not* React elements\\nconsole.log(isValidElement(null)); // false\\nconsole.log(isValidElement(25)); // false\\nconsole.log(isValidElement('Hello')); // false\\nconsole.log(isValidElement({ age: 42 })); // false\\nconsole.log(isValidElement([<div />, <div />])); // false\\nconsole.log(isValidElement(MyComponent)); // false\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"It is very uncommon to need \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\". It’s mostly useful if you’re calling another API that \",[\"$r\",\"em\",null,{\"children\":\"only\"}],\" accepts elements (like \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/cloneElement\",\"children\":[\"$r\",\"code\",null,{\"children\":\"cloneElement\"}]}],\" does) and you want to avoid an error when your argument is not a React element.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Unless you have some very specific reason to add an \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" check, you probably don’t need it.\"]}],\"\\n\",[\"$r\",\"DeepDive\",null,{\"children\":[[\"$r\",\"h4\",null,{\"id\":\"react-elements-vs-react-nodes\",\"children\":\"React elements vs React nodes \"}],[\"$r\",\"p\",null,{\"children\":[\"When you write a component, you can return any kind of \",[\"$r\",\"em\",null,{\"children\":\"React node\"}],\" from it:\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function MyComponent() {\\n  // ... you can return any React node ...\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":\"A React node can be:\"}],[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"A React element created like \",[\"$r\",\"code\",null,{\"children\":\"<div />\"}],\" or \",[\"$r\",\"code\",null,{\"children\":\"createElement('div')\"}]]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"A portal created with \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/createPortal\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createPortal\"}]}]]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"A string\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"A number\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"true\"}],\", \",[\"$r\",\"code\",null,{\"children\":\"false\"}],\", \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\", or \",[\"$r\",\"code\",null,{\"children\":\"undefined\"}],\" (which are not displayed)\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"An array of other React nodes\"}],\"\\n\"]}],[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":[\"Note \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" checks whether the argument is a \",[\"$r\",\"em\",null,{\"children\":\"React element,\"}],\" not whether it’s a React node.\"]}],\" For example, \",[\"$r\",\"code\",null,{\"children\":\"42\"}],\" is not a valid React element. However, it is a perfectly valid React node:\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function MyComponent() {\\n  return 42; // It's ok to return a number from component\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":[\"This is why you shouldn’t use \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" as a way to check whether something can be rendered.\"]}]]}]]}]]","meta":{"title":"isValidElement"},"languages":null},"__N_SSG":true}