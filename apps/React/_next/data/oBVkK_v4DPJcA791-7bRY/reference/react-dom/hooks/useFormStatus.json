{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"Overview\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"Reference \"},{\"url\":\"#use-form-status\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus()\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"Usage \"},{\"url\":\"#display-a-pending-state-during-form-submission\",\"depth\":3,\"text\":\"Display a pending state during form submission \"},{\"url\":\"#read-form-data-being-submitted\",\"depth\":3,\"text\":\"Read the form data being submitted \"},{\"url\":\"#troubleshooting\",\"depth\":2,\"text\":\"Troubleshooting \"},{\"url\":\"#pending-is-never-true\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"status.pending\"}],\" is never \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\" \"]}]","content":"[[\"$r\",\"MaxWidth\",\"46\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" is a Hook that gives you status information of the last form submission.\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"const { pending, data, method, action } = useFormStatus();\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"Reference \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"use-form-status\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus()\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"The \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" Hook provides status information of the last form submission.\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{5},[[1, 6, \\\"status.pending\\\"]]\",\"children\":\"import { useFormStatus } from \\\"react-dom\\\";\\nimport action from './actions';\\n\\nfunction Submit() {\\n  const status = useFormStatus();\\n  return <button disabled={status.pending}>Submit</button>\\n}\\n\\nexport default function App() {\\n  return (\\n    <form action={action}>\\n      <Submit />\\n    </form>\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"To get status information, the \",[\"$r\",\"code\",null,{\"children\":\"Submit\"}],\" component must be rendered within a \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\". The Hook returns information like the \",[\"$r\",\"CodeStep\",null,{\"step\":1,\"children\":[\"$r\",\"code\",null,{\"children\":\"pending\"}]}],\" property which tells you if the form is actively submitting.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"In the above example, \",[\"$r\",\"code\",null,{\"children\":\"Submit\"}],\" uses this information to disable \",[\"$r\",\"code\",null,{\"children\":\"<button>\"}],\" presses while the form is submitting.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"See more examples below.\"}]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"Parameters \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" does not take any parameters.\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"Returns \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"A \",[\"$r\",\"code\",null,{\"children\":\"status\"}],\" object with the following properties:\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"pending\"}],\": A boolean. If \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\", this means the parent \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" is pending submission. Otherwise, \",[\"$r\",\"code\",null,{\"children\":\"false\"}],\".\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"data\"}],\": An object implementing the \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/API/FormData\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"FormData interface\"}]}],\" that contains the data the parent \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" is submitting. If there is no active submission or no parent \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\", it will be \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\".\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"method\"}],\": A string value of either \",[\"$r\",\"code\",null,{\"children\":\"'get'\"}],\" or \",[\"$r\",\"code\",null,{\"children\":\"'post'\"}],\". This represents whether the parent \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" is submitting with either a \",[\"$r\",\"code\",null,{\"children\":\"GET\"}],\" or \",[\"$r\",\"code\",null,{\"children\":\"POST\"}],\" \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"HTTP method\"}],\". By default, a \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" will use the \",[\"$r\",\"code\",null,{\"children\":\"GET\"}],\" method and can be specified by the \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#method\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"method\"}]}],\" property.\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"action\"}],\": A reference to the function passed to the \",[\"$r\",\"code\",null,{\"children\":\"action\"}],\" prop on the parent \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\". If there is no parent \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\", the property is \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\". If there is a URI value provided to the \",[\"$r\",\"code\",null,{\"children\":\"action\"}],\" prop, or no \",[\"$r\",\"code\",null,{\"children\":\"action\"}],\" prop specified, \",[\"$r\",\"code\",null,{\"children\":\"status.action\"}],\" will be \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\".\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"Caveats \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"The \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" Hook must be called from a component that is rendered inside a \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\".\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" will only return status information for a parent \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\". It will not return status information for any \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" rendered in that same component or children components.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"Usage \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"display-a-pending-state-during-form-submission\",\"children\":\"Display a pending state during form submission \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"To display a pending state while a form is submitting, you can call the \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" Hook in a component rendered in a \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" and read the \",[\"$r\",\"code\",null,{\"children\":\"pending\"}],\" property returned.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Here, we use the \",[\"$r\",\"code\",null,{\"children\":\"pending\"}],\" property to indicate the form is submitting.\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { useFormStatus } from \\\"react-dom\\\";\\nimport { submitForm } from \\\"./actions.js\\\";\\n\\nfunction Submit() {\\n  const { pending } = useFormStatus();\\n  return (\\n    <button type=\\\"submit\\\" disabled={pending}>\\n      {pending ? \\\"Submitting...\\\" : \\\"Submit\\\"}\\n    </button>\\n  );\\n}\\n\\nfunction Form({ action }) {\\n  return (\\n    <form action={action}>\\n      <Submit />\\n    </form>\\n  );\\n}\\n\\nexport default function App() {\\n  return <Form action={submitForm} />;\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/actions.js hidden\",\"children\":\"export async function submitForm(query) {\\n    await new Promise((res) => setTimeout(res, 1000));\\n}\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"56\",{\"children\":[\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[[\"$r\",\"h5\",null,{\"id\":\"useformstatus-will-not-return-status-information-for-a-form-rendered-in-the-same-component\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" will not return status information for a \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" rendered in the same component. \"]}],[\"$r\",\"p\",null,{\"children\":[\"The \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" Hook only returns status information for a parent \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" and not for any \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" rendered in the same component calling the Hook, or child components.\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Form() {\\n  // ðŸš© `pending` will never be true\\n  // useFormStatus does not track the form rendered in this component\\n  const { pending } = useFormStatus();\\n  return <form action={submit}></form>;\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":[\"Instead call \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" from inside a component that is located inside \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\".\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Submit() {\\n  // âœ… `pending` will be derived from the form that wraps the Submit component\\n  const { pending } = useFormStatus(); \\n  return <button disabled={pending}>...</button>;\\n}\\n\\nfunction Form() {\\n  // This is the <form> `useFormStatus` tracks\\n  return (\\n    <form action={submit}>\\n      <Submit />\\n    </form>\\n  );\\n}\\n\"}]}]]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"read-form-data-being-submitted\",\"children\":\"Read the form data being submitted \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"You can use the \",[\"$r\",\"code\",null,{\"children\":\"data\"}],\" property of the status information returned from \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" to display what data is being submitted by the user.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Here, we have a form where users can request a username. We can use \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" to display a temporary status message confirming what username they have requested.\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/UsernameForm.js active\",\"children\":\"import {useState, useMemo, useRef} from 'react';\\nimport {useFormStatus} from 'react-dom';\\n\\nexport default function UsernameForm() {\\n  const {pending, data} = useFormStatus();\\n\\n  return (\\n    <div>\\n      <h3>Request a Username: </h3>\\n      <input type=\\\"text\\\" name=\\\"username\\\" disabled={pending}/>\\n      <button type=\\\"submit\\\" disabled={pending}>\\n        Submit\\n      </button>\\n      <br />\\n      <p>{data ? `Requesting ${data?.get(\\\"username\\\")}...`: ''}</p>\\n    </div>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import UsernameForm from './UsernameForm';\\nimport { submitForm } from \\\"./actions.js\\\";\\nimport {useRef} from 'react';\\n\\nexport default function App() {\\n  const ref = useRef(null);\\n  return (\\n    <form ref={ref} action={async (formData) => {\\n      await submitForm(formData);\\n      ref.current.reset();\\n    }}>\\n      <UsernameForm />\\n    </form>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/actions.js hidden\",\"children\":\"export async function submitForm(query) {\\n    await new Promise((res) => setTimeout(res, 2000));\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"p {\\n    height: 14px;\\n    padding: 0;\\n    margin: 2px 0 0 0 ;\\n    font-size: 14px\\n}\\n\\nbutton {\\n    margin-left: 2px;\\n}\\n\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"last\",{\"children\":[\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"troubleshooting\",\"children\":\"Troubleshooting \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"pending-is-never-true\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"status.pending\"}],\" is never \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" will only return status information for a parent \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\".\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"If the component that calls \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" is not nested in a \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\", \",[\"$r\",\"code\",null,{\"children\":\"status.pending\"}],\" will always return \",[\"$r\",\"code\",null,{\"children\":\"false\"}],\". Verify \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" is called in a component that is a child of a \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" element.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" will not track the status of a \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" rendered in the same component. See \",[\"$r\",\"a\",null,{\"href\":\"#useformstatus-will-not-return-status-information-for-a-form-rendered-in-the-same-component\",\"children\":\"Pitfall\"}],\" for more details.\"]}]]}]]","meta":{"title":"useFormStatus"},"languages":null},"__N_SSG":true}