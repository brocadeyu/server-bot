{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"Overview\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"Reference \"},{\"url\":\"#title\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"Usage \"},{\"url\":\"#set-the-document-title\",\"depth\":3,\"text\":\"Set the document title \"},{\"url\":\"#use-variables-in-the-title\",\"depth\":3,\"text\":\"Use variables in the title \"}]","content":"[[\"$r\",\"MaxWidth\",\"last\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[\"The \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"built-in browser \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" component\"]}],\" lets you specify the title of the document.\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"<title>My Blog</title>\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"Reference \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"title\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"To specify the title of the document, render the \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"built-in browser \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" component\"]}],\". You can render \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" from any component and React will always place the corresponding DOM element in the document head.\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"<title>My Blog</title>\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"See more examples below.\"}]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"props\",\"children\":\"Props \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" supports all \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/components/common#props\",\"children\":\"common element props.\"}]]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"children\"}],\": \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" accepts only text as a child. This text will become the title of the document. You can also pass your own components as long as they only render text.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"special-rendering-behavior\",\"children\":\"Special rendering behavior \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"React will always place the DOM element corresponding to the \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" component within the documentâ€™s \",[\"$r\",\"code\",null,{\"children\":\"<head>\"}],\", regardless of where in the React tree it is rendered. The \",[\"$r\",\"code\",null,{\"children\":\"<head>\"}],\" is the only valid place for \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" to exist within the DOM, yet itâ€™s convenient and keeps things composable if a component representing a specific page can render its \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" itself.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"There are two exception to this:\"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"If \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" is within an \",[\"$r\",\"code\",null,{\"children\":\"<svg>\"}],\" component, then there is no special behavior, because in this context it doesnâ€™t represent the documentâ€™s title but rather is an \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"accessibility annotation for that SVG graphic\"}],\".\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"If the \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" has an \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"itemProp\"}]}],\" prop, there is no special behavior, because in this case it doesnâ€™t represent the documentâ€™s title but rather metadata about a specific part of the page.\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"Only render a single \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" at a time. If more than one component renders a \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" tag at the same time, React will place all of those titles in the document head. When this happens, the behavior of browsers and search engines is undefined.\"]}]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"Usage \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"set-the-document-title\",\"children\":\"Set the document title \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Render the \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" component from any component with text as its children. React will put a \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" DOM node in the document \",[\"$r\",\"code\",null,{\"children\":\"<head>\"}],\".\"]}],\"\\n\",[\"$r\",\"SandpackWithHTMLOutput\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js active\",\"children\":\"import ShowRenderedHTML from './ShowRenderedHTML.js';\\n\\nexport default function ContactUsPage() {\\n  return (\\n    <ShowRenderedHTML>\\n      <title>My Site: Contact Us</title>\\n      <h1>Contact Us</h1>\\n      <p>Email us at support@example.com</p>\\n    </ShowRenderedHTML>\\n  );\\n}\\n\"}]}]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"use-variables-in-the-title\",\"children\":\"Use variables in the title \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"The children of the \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" component must be a single string of text. (Or a single number or a single object with a \",[\"$r\",\"code\",null,{\"children\":\"toString\"}],\" method.) It might not be obvious, but using JSX curly braces like this:\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"<title>Results page {pageNumber}</title> // ðŸ”´ Problem: This is not a single string\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"â€¦ actually causes the \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" component to get a two-element array as its children (the string \",[\"$r\",\"code\",null,{\"children\":\"\\\"Results page\\\"\"}],\" and the value of \",[\"$r\",\"code\",null,{\"children\":\"pageNumber\"}],\"). This will cause an error. Instead, use string interpolation to pass \",[\"$r\",\"code\",null,{\"children\":\"<title>\"}],\" a single string:\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"<title>{`Results page ${pageNumber}`}</title>\\n\"}]}]]}]]","meta":{"title":"<title>"},"languages":null},"__N_SSG":true}