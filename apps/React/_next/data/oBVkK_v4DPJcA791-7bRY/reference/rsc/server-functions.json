{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"Overview\",\"depth\":2},{\"url\":\"#usage\",\"depth\":2,\"text\":\"Usage \"},{\"url\":\"#creating-a-server-function-from-a-server-component\",\"depth\":3,\"text\":\"Creating a Server Function from a Server Component \"},{\"url\":\"#importing-server-functions-from-client-components\",\"depth\":3,\"text\":\"Importing Server Functions from Client Components \"},{\"url\":\"#server-functions-with-actions\",\"depth\":3,\"text\":\"Server Functions with Actions \"},{\"url\":\"#using-server-functions-with-form-actions\",\"depth\":3,\"text\":\"Server Functions with Form Actions \"},{\"url\":\"#server-functions-with-use-action-state\",\"depth\":3,\"text\":[\"Server Functions with \",[\"$r\",\"code\",null,{\"children\":\"useActionState\"}],\" \"]},{\"url\":\"#progressive-enhancement-with-useactionstate\",\"depth\":3,\"text\":[\"Progressive enhancement with \",[\"$r\",\"code\",null,{\"children\":\"useActionState\"}],\" \"]}]","content":"[[\"$r\",\"MaxWidth\",\"last\",{\"children\":[[\"$r\",\"RSC\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[\"Server Functions are for use in \",[\"$r\",\"a\",null,{\"href\":\"/learn/start-a-new-react-project#bleeding-edge-react-frameworks\",\"children\":\"React Server Components\"}],\".\"]}],[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"Note:\"}],\" Until September 2024, we referred to all Server Functions as “Server Actions”. If a Server Function is passed to an action prop or called from inside an action then it is a Server Action, but not all Server Functions are Server Actions. The naming in this documentation has been updated to reflect that Server Functions can be used for multiple purposes.\"]}]]}],\"\\n\",[\"$r\",\"Intro\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":\"Server Functions allow Client Components to call async functions executed on the server.\"}]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"Note\",null,{\"children\":[[\"$r\",\"h4\",null,{\"id\":\"how-do-i-build-support-for-server-functions\",\"children\":\"How do I build support for Server Functions? \"}],[\"$r\",\"p\",null,{\"children\":\"While Server Functions in React 19 are stable and will not break between minor versions, the underlying APIs used to implement Server Functions in a React Server Components bundler or framework do not follow semver and may break between minors in React 19.x.\"}],[\"$r\",\"p\",null,{\"children\":\"To support Server Functions as a bundler or framework, we recommend pinning to a specific React version, or using the Canary release. We will continue working with bundlers and frameworks to stabilize the APIs used to implement Server Functions in the future.\"}]]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"When a Server Functions is defined with the \",[\"$r\",\"a\",null,{\"href\":\"/reference/rsc/use-server\",\"children\":[\"$r\",\"code\",null,{\"children\":\"\\\"use server\\\"\"}]}],\" directive, your framework will automatically create a reference to the server function, and pass that reference to the Client Component. When that function is called on the client, React will send a request to the server to execute the function, and return the result.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"Server Functions can be created in Server Components and passed as props to Client Components, or they can be imported and used in Client Components.\"}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"Usage \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"creating-a-server-function-from-a-server-component\",\"children\":\"Creating a Server Function from a Server Component \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Server Components can define Server Functions with the \",[\"$r\",\"code\",null,{\"children\":\"\\\"use server\\\"\"}],\" directive:\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[2, 7, \\\"'use server'\\\"], [1, 5, \\\"createNoteAction\\\"], [1, 12, \\\"createNoteAction\\\"]]\",\"children\":\"// Server Component\\nimport Button from './Button';\\n\\nfunction EmptyNote () {\\n  async function createNoteAction() {\\n    // Server Function\\n    'use server';\\n    \\n    await db.notes.create();\\n  }\\n\\n  return <Button onClick={createNoteAction}/>;\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"When React renders the \",[\"$r\",\"code\",null,{\"children\":\"EmptyNote\"}],\" Server Function, it will create a reference to the \",[\"$r\",\"code\",null,{\"children\":\"createNoteAction\"}],\" function, and pass that reference to the \",[\"$r\",\"code\",null,{\"children\":\"Button\"}],\" Client Component. When the button is clicked, React will send a request to the server to execute the \",[\"$r\",\"code\",null,{\"children\":\"createNoteAction\"}],\" function with the reference provided:\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{5}\",\"children\":\"\\\"use client\\\";\\n\\nexport default function Button({onClick}) { \\n  console.log(onClick); \\n  // {$$typeof: Symbol.for(\\\"react.server.reference\\\"), $$id: 'createNoteAction'}\\n  return <button onClick={() => onClick()}>Create Empty Note</button>\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"For more, see the docs for \",[\"$r\",\"a\",null,{\"href\":\"/reference/rsc/use-server\",\"children\":[\"$r\",\"code\",null,{\"children\":\"\\\"use server\\\"\"}]}],\".\"]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"importing-server-functions-from-client-components\",\"children\":\"Importing Server Functions from Client Components \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Client Components can import Server Functions from files that use the \",[\"$r\",\"code\",null,{\"children\":\"\\\"use server\\\"\"}],\" directive:\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 3, \\\"createNote\\\"]]\",\"children\":\"\\\"use server\\\";\\n\\nexport async function createNote() {\\n  await db.notes.create();\\n}\\n\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"When the bundler builds the \",[\"$r\",\"code\",null,{\"children\":\"EmptyNote\"}],\" Client Component, it will create a reference to the \",[\"$r\",\"code\",null,{\"children\":\"createNoteAction\"}],\" function in the bundle. When the \",[\"$r\",\"code\",null,{\"children\":\"button\"}],\" is clicked, React will send a request to the server to execute the \",[\"$r\",\"code\",null,{\"children\":\"createNoteAction\"}],\" function using the reference provided:\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 2, \\\"createNote\\\"], [1, 5, \\\"createNote\\\"], [1, 7, \\\"createNote\\\"]]\",\"children\":\"\\\"use client\\\";\\nimport {createNote} from './actions';\\n\\nfunction EmptyNote() {\\n  console.log(createNote);\\n  // {$$typeof: Symbol.for(\\\"react.server.reference\\\"), $$id: 'createNoteAction'}\\n  <button onClick={() => createNote()} />\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"For more, see the docs for \",[\"$r\",\"a\",null,{\"href\":\"/reference/rsc/use-server\",\"children\":[\"$r\",\"code\",null,{\"children\":\"\\\"use server\\\"\"}]}],\".\"]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"server-functions-with-actions\",\"children\":\"Server Functions with Actions \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"Server Functions can be called from Actions on the client:\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 3, \\\"updateName\\\"]]\",\"children\":\"\\\"use server\\\";\\n\\nexport async function updateName(name) {\\n  if (!name) {\\n    return {error: 'Name is required'};\\n  }\\n  await db.users.updateName(name);\\n}\\n\"}]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 3, \\\"updateName\\\"], [1, 13, \\\"updateName\\\"], [2, 11, \\\"submitAction\\\"],  [2, 23, \\\"submitAction\\\"]]\",\"children\":\"\\\"use client\\\";\\n\\nimport {updateName} from './actions';\\n\\nfunction UpdateName() {\\n  const [name, setName] = useState('');\\n  const [error, setError] = useState(null);\\n\\n  const [isPending, startTransition] = useTransition();\\n\\n  const submitAction = async () => {\\n    startTransition(async () => {\\n      const {error} = await updateName(name);\\n      if (!error) {\\n        setError(error);\\n      } else {\\n        setName('');\\n      }\\n    })\\n  }\\n  \\n  return (\\n    <form action={submitAction}>\\n      <input type=\\\"text\\\" name=\\\"name\\\" disabled={isPending}/>\\n      {state.error && <span>Failed: {state.error}</span>}\\n    </form>\\n  )\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"This allows you to access the \",[\"$r\",\"code\",null,{\"children\":\"isPending\"}],\" state of the Server Function by wrapping it in an Action on the client.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"For more, see the docs for \",[\"$r\",\"a\",null,{\"href\":\"/reference/rsc/use-server#calling-a-server-function-outside-of-form\",\"children\":[\"Calling a Server Function outside of \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}]]}]]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"using-server-functions-with-form-actions\",\"children\":\"Server Functions with Form Actions \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"Server Functions work with the new Form features in React 19.\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"You can pass a Server Function to a Form to automatically submit the form to the server:\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 3, \\\"updateName\\\"], [1, 7, \\\"updateName\\\"]]\",\"children\":\"\\\"use client\\\";\\n\\nimport {updateName} from './actions';\\n\\nfunction UpdateName() {\\n  return (\\n    <form action={updateName}>\\n      <input type=\\\"text\\\" name=\\\"name\\\" />\\n    </form>\\n  )\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"When the Form submission succeeds, React will automatically reset the form. You can add \",[\"$r\",\"code\",null,{\"children\":\"useActionState\"}],\" to access the pending state, last response, or to support progressive enhancement.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"For more, see the docs for \",[\"$r\",\"a\",null,{\"href\":\"/reference/rsc/use-server#server-functions-in-forms\",\"children\":\"Server Functions in Forms\"}],\".\"]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"server-functions-with-use-action-state\",\"children\":[\"Server Functions with \",[\"$r\",\"code\",null,{\"children\":\"useActionState\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"You can call Server Functions with \",[\"$r\",\"code\",null,{\"children\":\"useActionState\"}],\" for the common case where you just need access to the action pending state and last returned response:\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 3, \\\"updateName\\\"], [1, 6, \\\"updateName\\\"], [2, 6, \\\"submitAction\\\"], [2, 9, \\\"submitAction\\\"]]\",\"children\":\"\\\"use client\\\";\\n\\nimport {updateName} from './actions';\\n\\nfunction UpdateName() {\\n  const [state, submitAction, isPending] = useActionState(updateName, {error: null});\\n\\n  return (\\n    <form action={submitAction}>\\n      <input type=\\\"text\\\" name=\\\"name\\\" disabled={isPending}/>\\n      {state.error && <span>Failed: {state.error}</span>}\\n    </form>\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"When using \",[\"$r\",\"code\",null,{\"children\":\"useActionState\"}],\" with Server Functions, React will also automatically replay form submissions entered before hydration finishes. This means users can interact with your app even before the app has hydrated.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"For more, see the docs for \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/hooks/useFormState\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useActionState\"}]}],\".\"]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"progressive-enhancement-with-useactionstate\",\"children\":[\"Progressive enhancement with \",[\"$r\",\"code\",null,{\"children\":\"useActionState\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Server Functions also support progressive enhancement with the third argument of \",[\"$r\",\"code\",null,{\"children\":\"useActionState\"}],\".\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 3, \\\"updateName\\\"], [1, 6, \\\"updateName\\\"], [2, 6, \\\"/name/update\\\"], [3, 6, \\\"submitAction\\\"], [3, 9, \\\"submitAction\\\"]]\",\"children\":\"\\\"use client\\\";\\n\\nimport {updateName} from './actions';\\n\\nfunction UpdateName() {\\n  const [, submitAction] = useActionState(updateName, null, `/name/update`);\\n\\n  return (\\n    <form action={submitAction}>\\n      ...\\n    </form>\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"When the \",[\"$r\",\"CodeStep\",null,{\"step\":2,\"children\":\"permalink\"}],\" is provided to \",[\"$r\",\"code\",null,{\"children\":\"useActionState\"}],\", React will redirect to the provided URL if the form is submitted before the JavaScript bundle loads.\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"For more, see the docs for \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/hooks/useFormState\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useActionState\"}]}],\".\"]}]]}]]","meta":{"title":"Server Functions"},"languages":null},"__N_SSG":true}