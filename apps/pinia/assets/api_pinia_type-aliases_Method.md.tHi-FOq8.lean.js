import{_ as e,c as t,a2 as s,o as i}from"./chunks/framework.DS4GivxB.js";const k=JSON.parse('{"title":"_Method()","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/type-aliases/Method.md","filePath":"api/pinia/type-aliases/Method.md"}'),n={name:"api/pinia/type-aliases/Method.md"};function r(o,a,h,l,p,d){return i(),t("div",null,a[0]||(a[0]=[s('<p><a href="./../../">@pinia/root</a> / <a href="./../">pinia</a> / _Method</p><h1 id="-Method-" tabindex="-1">_Method() <a class="header-anchor" href="#-Method-" aria-label="Permalink to &quot;\\_Method()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">type</span><span style="--shiki-dark:#97E1F1;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;"> _Method</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#393A34;">: (...args) </span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">=</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#393A34;">&gt; </span><span style="--shiki-dark:#97E1F1;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;">any</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">;</span></span></code></pre></div><p>Generic type for a function that can infer arguments and return type</p><p>For internal use <strong>only</strong></p><h2 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• ...<strong>args</strong>: <code>any</code>[]</p><h2 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>any</code></p>',9)]))}const u=e(n,[["render",r]]);export{k as __pageData,u as default};
