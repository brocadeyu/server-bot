import{_ as a,c as s,a2 as e,o as t}from"./chunks/framework.DS4GivxB.js";const k=JSON.parse('{"title":"disposePinia()","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/functions/disposePinia.md","filePath":"api/pinia/functions/disposePinia.md"}'),n={name:"api/pinia/functions/disposePinia.md"};function p(o,i,r,l,d,h){return t(),s("div",null,i[0]||(i[0]=[e('<p><a href="./../../">@pinia/root</a> / <a href="./../">pinia</a> / disposePinia</p><h1 id="disposePinia-" tabindex="-1">disposePinia() <a class="header-anchor" href="#disposePinia-" aria-label="Permalink to &quot;disposePinia()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#62E884;--shiki-light:#59873A;"> disposePinia</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">(</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#B07D48;--shiki-light-font-style:inherit;">pinia</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">)</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#97E1F1;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;"> void</span></span></code></pre></div><p>Dispose a Pinia instance by stopping its effectScope and removing the state, plugins and stores. This is mostly useful in tests, with both a testing pinia or a regular pinia and in applications that use multiple pinia instances. Once disposed, the pinia instance cannot be used anymore.</p><h2 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>pinia</strong>: <a href="./../interfaces/Pinia.html"><code>Pinia</code></a></p><p>pinia instance</p><h2 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>void</code></p>',9)]))}const u=a(n,[["render",p]]);export{k as __pageData,u as default};
