import{_ as t,c as a,a2 as i,o as s}from"./chunks/framework.DS4GivxB.js";const k=JSON.parse('{"title":"_MapWritableStateObjectReturn<S, G, KeyMapper>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/type-aliases/MapWritableStateObjectReturn.md","filePath":"api/pinia/type-aliases/MapWritableStateObjectReturn.md"}'),r={name:"api/pinia/type-aliases/MapWritableStateObjectReturn.md"};function n(p,e,l,h,o,d){return s(),a("div",null,e[0]||(e[0]=[i('<p><a href="./../../">@pinia/root</a> / <a href="./../">pinia</a> / _MapWritableStateObjectReturn</p><h1 id="-MapWritableStateObjectReturn-S-G-KeyMapper-" tabindex="-1">_MapWritableStateObjectReturn&lt;S, G, KeyMapper&gt; <a class="header-anchor" href="#-MapWritableStateObjectReturn-S-G-KeyMapper-" aria-label="Permalink to &quot;\\_MapWritableStateObjectReturn\\&lt;S, G, KeyMapper\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">type</span><span style="--shiki-dark:#97E1F1;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;"> _MapWritableStateObjectReturn</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;">S</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;"> G</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#2E8F82;--shiki-light-font-style:inherit;"> KeyMapper</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#393A34;">: { [key in keyof KeyMapper]: Object }</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">;</span></span></code></pre></div><p>For internal use <strong>only</strong></p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>S</strong> <em>extends</em> <a href="./StateTree.html"><code>StateTree</code></a></p><p>• <strong>G</strong></p><p>• <strong>KeyMapper</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>_MapWritableStateKeys</code>&lt;<code>S</code>, <code>G</code>&gt;&gt;</p>',8)]))}const y=t(r,[["render",n]]);export{k as __pageData,y as default};
