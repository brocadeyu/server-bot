"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["1563"],{65075:function(e,n,s){s.r(n),s.d(n,{default:function(){return d}});var i=s(55367),r=s(26971);function l(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",pre:"pre",p:"p",h2:"h2",div:"div"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"toolslightningcssloader",children:["tools.lightningcssLoader",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#toolslightningcssloader",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"类型："})," ",(0,i.jsx)(n.code,{children:"Rspack.LightningcssLoaderOptions | Function | boolean"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"默认值："})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const defaultOptions = {\n  // 使用当前项目的 browserslist 配置\n  targets: browserslist,\n  // 在生产模式，且 output.injectStyles 为 true 时，minify 会被启用\n  minify: config.mode === 'production' && config.output.injectStyles,\n};\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"版本："})," ",(0,i.jsx)(n.code,{children:">= 1.0.0"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["通过 ",(0,i.jsx)(n.code,{children:"tools.lightningcssLoader"})," 可以设置 ",(0,i.jsx)(n.a,{href:"https://rspack.dev/guide/features/builtin-lightningcss-loader",target:"_blank",rel:"noopener noreferrer",children:"builtin:lightningcss-loader"})," 的选项。"]}),"\n",(0,i.jsxs)(n.h2,{id:"object-类型",children:["Object 类型",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#object-类型",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["当 ",(0,i.jsx)(n.code,{children:"tools.lightningcssLoader"})," 是一个 object 时，它会与默认配置通过 ",(0,i.jsx)(n.code,{children:"Object.assign"})," 合并。"]}),"\n",(0,i.jsxs)(n.p,{children:["比如，你可以通过 ",(0,i.jsx)(n.code,{children:"tools.lightningcssLoader.exclude"})," 来关闭 vendor prefixes 的添加，此时你可以使用 PostCSS 的 autoprefixer 插件来添加 vendor prefixes。"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"export default {\n  tools: {\n    lightningcssLoader: {\n      exclude: {\n        vendorPrefixes: false,\n      },\n    },\n  },\n};\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"function-类型",children:["Function 类型",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#function-类型",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["当 ",(0,i.jsx)(n.code,{children:"tools.lightningcssLoader"})," 是一个 function 时，默认选项会作为第一个参数传入，你可以直接修改这个对象，也可以返回一个新的对象作为最终使用的选项。比如："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"export default {\n  tools: {\n    lightningcssLoader: (config) => {\n      config.exclude = {\n        vendorPrefixes: false,\n      };\n      return config;\n    },\n  },\n};\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"禁用-loader",children:["禁用 loader",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#禁用-loader",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["将 ",(0,i.jsx)(n.code,{children:"tools.lightningcssLoader"})," 设置为 ",(0,i.jsx)(n.code,{children:"false"}),"，可以禁用 Rsbuild 内置的 ",(0,i.jsx)(n.code,{children:"lightningcss-loader"}),"："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"export default {\n  tools: {\n    lightningcssLoader: false,\n  },\n};\n"})}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,i.jsx)(n.div,{className:"rspress-directive-content",children:(0,i.jsxs)(n.p,{children:["将 ",(0,i.jsx)(n.code,{children:"tools.lightningcssLoader"})," 设置为 ",(0,i.jsx)(n.code,{children:"false"})," 仅用于禁用 ",(0,i.jsx)(n.code,{children:"lightningcss-loader"}),"。如果你需要禁用 Lightning CSS 完整功能，请参考 ",(0,i.jsx)(n.a,{href:"/guide/basic/css-usage#%E7%A6%81%E7%94%A8-lightning-css",children:"禁用 Lightning CSS"}),"。\n"]})})]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}let d=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["zh%2Fconfig%2Ftools%2Flightningcss-loader.mdx"]={toc:[{text:"Object 类型",id:"object-类型",depth:2},{text:"Function 类型",id:"function-类型",depth:2},{text:"禁用 loader",id:"禁用-loader",depth:2}],title:"tools.lightningcssLoader",frontmatter:{}}}}]);