"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["8272"],{71639:function(e,n,r){r.r(n),r.d(n,{default:function(){return c}});var t=r(55367),s=r(26971),l=r(38146);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",code:"code",pre:"pre",div:"div",h3:"h3",ol:"ol",li:"li",blockquote:"blockquote",ul:"ul"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"react",children:["React",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#react",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"在这篇文档中，你可以了解到如何基于 Rsbuild 来构建一个 React 应用。"}),"\n",(0,t.jsxs)(n.h2,{id:"创建-react-项目",children:["创建 React 项目",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#创建-react-项目",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["你可以使用 ",(0,t.jsx)(n.code,{children:"create-rsbuild"})," 来创建一个 Rsbuild + React 的项目，调用以下命令："]}),"\n","\n",(0,t.jsx)(l.PackageManagerTabs,{command:{npm:"npm create rsbuild@latest",yarn:"yarn create rsbuild",pnpm:"pnpm create rsbuild@latest",bun:"bun create rsbuild@latest"}}),"\n",(0,t.jsxs)(n.p,{children:["然后在 ",(0,t.jsx)(n.code,{children:"Select framework"})," 时选择 ",(0,t.jsx)(n.code,{children:"React"})," 即可。"]}),"\n",(0,t.jsxs)(n.h2,{id:"在已有项目中使用-react",children:["在已有项目中使用 React",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#在已有项目中使用-react",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["为了能够编译 React，你需要注册 Rsbuild 的 ",(0,t.jsx)(n.a,{href:"/plugins/list/plugin-react",children:"React 插件"}),"，插件会自动添加 React 构建所需的配置。"]}),"\n",(0,t.jsxs)(n.p,{children:["例如，在 ",(0,t.jsx)(n.code,{children:"rsbuild.config.ts"})," 中注册："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginReact } from '@rsbuild/plugin-react';\n\nexport default defineConfig({\n  plugins: [pluginReact()],\n});\n"})}),"\n",(0,t.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,t.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,t.jsx)(n.div,{className:"rspress-directive-content",children:(0,t.jsxs)(n.p,{children:["对于使用 Create React App 的项目，可以参考 ",(0,t.jsx)(n.a,{href:"/guide/migration/cra",children:"CRA 迁移指南"}),"。\n"]})})]}),"\n",(0,t.jsxs)(n.h2,{id:"使用-svgr",children:["使用 SVGR",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-svgr",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Rsbuild 支持调用 ",(0,t.jsx)(n.a,{href:"https://react-svgr.com/",target:"_blank",rel:"noopener noreferrer",children:"SVGR"}),"，将 SVG 图片转换为一个 React 组件使用。"]}),"\n",(0,t.jsxs)(n.p,{children:["如果你需要使用 SVGR，需要注册 Rsbuild 的 ",(0,t.jsx)(n.a,{href:"/plugins/list/plugin-svgr",children:"SVGR 插件"}),"。"]}),"\n",(0,t.jsxs)(n.h2,{id:"react-fast-refresh",children:["React Fast Refresh",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#react-fast-refresh",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Rsbuild 使用 React 官方的 ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/react-refresh",target:"_blank",rel:"noopener noreferrer",children:"Fast Refresh"})," 能力来进行组件热更新。"]}),"\n",(0,t.jsxs)(n.p,{children:["注意 React Refresh 要求组件按照规范的方式编写，否则热更新可能无效，你可以使用 ",(0,t.jsx)(n.a,{href:"https://github.com/ArnaudBarre/eslint-plugin-react-refresh",target:"_blank",rel:"noopener noreferrer",children:"eslint-plugin-react-refresh"})," 进行校验。"]}),"\n",(0,t.jsx)(n.p,{children:"比如，如果 React 组件的热更新无法生效，或者是热更新后 React 组件的 state 丢失，这通常是因为你的 React 组件使用了匿名函数。在 React Fast Refresh 的官方实践中，要求组件不能为匿名函数，否则热更新后无法保留 React 组件的 state。"}),"\n",(0,t.jsx)(n.p,{children:"以下是一些错误用法的例子："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// 错误写法 1\nexport default function () {\n  return <div>Hello World</div>;\n}\n\n// 错误写法 2\nexport default () => <div>Hello World</div>;\n"})}),"\n",(0,t.jsx)(n.p,{children:"正确用法是给每个组件函数声明一个名称："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// 正确写法 1\nexport default function MyComponent() {\n  return <div>Hello World</div>;\n}\n\n// 正确写法 2\nconst MyComponent = () => <div>Hello World</div>;\n\nexport default MyComponent;\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"react-compiler",children:["React Compiler",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#react-compiler",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"React Compiler 是 React 19 引入的一个实验性编译器，它可以自动优化你的 React 代码。"}),"\n",(0,t.jsxs)(n.p,{children:["在开始使用 React Compiler 之前，建议阅读 ",(0,t.jsx)(n.a,{href:"https://zh-hans.react.dev/learn/react-compiler",target:"_blank",rel:"noopener noreferrer",children:"React Compiler 文档"}),"，以了解 React Compiler 的功能、当前状态和使用方法。"]}),"\n",(0,t.jsxs)(n.h3,{id:"如何使用",children:["如何使用",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#如何使用",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"在 Rsbuild 中使用 React Compiler 的步骤如下："}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["升级 ",(0,t.jsx)(n.code,{children:"react"})," 和 ",(0,t.jsx)(n.code,{children:"react-dom"})," 版本到 19。如果你暂时无法升级，可以在 React 17 或 18 项目中安装 ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/react-compiler-runtime",target:"_blank",rel:"noopener noreferrer",children:"react-compiler-runtime"}),"，以允许编译后的代码在 19 之前的版本上运行。"]}),"\n",(0,t.jsxs)(n.li,{children:["目前 React Compiler 仅提供了 Babel 插件，你需要安装 ",(0,t.jsx)(n.a,{href:"/plugins/list/plugin-babel",children:"@rsbuild/plugin-babel"})," 和 ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/babel-plugin-react-compiler",target:"_blank",rel:"noopener noreferrer",children:"babel-plugin-react-compiler"}),"。"]}),"\n",(0,t.jsx)(n.li,{children:"在你的 Rsbuild 配置文件中注册 Babel 插件："}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginBabel } from '@rsbuild/plugin-babel';\nimport { pluginReact } from '@rsbuild/plugin-react';\n\nexport default defineConfig({\n  plugins: [\n    pluginReact(),\n    pluginBabel({\n      include: /\\.(?:jsx|tsx)$/,\n      babelLoaderOptions(opts) {\n        opts.plugins?.unshift('babel-plugin-react-compiler');\n      },\n    }),\n  ],\n});\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["你也可以参考 ",(0,t.jsx)(n.a,{href:"https://github.com/rspack-contrib/rspack-examples/tree/main/rsbuild/react-compiler-babel",target:"_blank",rel:"noopener noreferrer",children:"示例项目"}),"。"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"配置",children:["配置",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"通过以下方式来传入 React Compiler 的配置："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginBabel } from '@rsbuild/plugin-babel';\nimport { pluginReact } from '@rsbuild/plugin-react';\n\nconst ReactCompilerConfig = {\n  /* ... */\n};\n\nexport default defineConfig({\n  plugins: [\n    pluginReact(),\n    pluginBabel({\n      include: /\\.(?:jsx|tsx)$/,\n      babelLoaderOptions(opts) {\n        opts.plugins?.unshift([\n          'babel-plugin-react-compiler',\n          ReactCompilerConfig,\n        ]);\n      },\n    }),\n  ],\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["对于 React 17 和 18 的项目，除了安装 ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/react-compiler-runtime",target:"_blank",rel:"noopener noreferrer",children:"react-compiler-runtime"}),"，还需要指定 ",(0,t.jsx)(n.code,{children:"target"}),"："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"const ReactCompilerConfig = {\n  target: '18', // '17' | '18' | '19'\n};\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"router",children:["Router",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#router",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"tanstack-router",children:["TanStack Router",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tanstack-router",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://tanstack.com/router/",target:"_blank",rel:"noopener noreferrer",children:"TanStack Router"})," 是一个类型安全的 React 路由，内置数据获取、缓存和一流的 search-param API。"]}),"\n",(0,t.jsxs)(n.p,{children:["TanStack Router 提供了 ",(0,t.jsx)(n.code,{children:"@tanstack/router-plugin"})," 来与 Rsbuild 集成，该插件支持基于文件的路由，详见："]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://tanstack.com/router/latest/docs/framework/react/guide/file-based-routing",target:"_blank",rel:"noopener noreferrer",children:"File-Based Routing 文档"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/TanStack/router/tree/main/examples/react/quickstart-rspack-file-based",target:"_blank",rel:"noopener noreferrer",children:"TanStack Router + Rsbuild 示例"})}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"css-in-js",children:["CSS-in-JS",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#css-in-js",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"使用-styled-components",children:["使用 styled-components",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-styled-components",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Rsbuild 支持编译 ",(0,t.jsx)(n.a,{href:"https://github.com/styled-components/styled-components",target:"_blank",rel:"noopener noreferrer",children:"styled-components"}),"，优化调试体验，并对 styled-components 添加服务器端渲染支持。"]}),"\n",(0,t.jsxs)(n.p,{children:["如果你需要使用 styled-components, 我们推荐使用 ",(0,t.jsx)(n.a,{href:"https://github.com/rsbuild-contrib/rsbuild-plugin-styled-components",target:"_blank",rel:"noopener noreferrer",children:"@rsbuild/plugin-styled-components"}),"。"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["你可以参考这个示例：",(0,t.jsx)(n.a,{href:"https://github.com/rspack-contrib/rspack-examples/tree/main/rsbuild/styled-components",target:"_blank",rel:"noopener noreferrer",children:"styled-components"}),"。"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"使用-emotion",children:["使用 Emotion",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-emotion",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Rsbuild 支持编译 ",(0,t.jsx)(n.a,{href:"https://github.com/emotion-js/emotion",target:"_blank",rel:"noopener noreferrer",children:"Emotion"}),"，你可以添加以下配置来使用："]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/plugins/list/plugin-react#swcreactoptions",children:"swcReactOptions.importSource"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/@swc/plugin-emotion",target:"_blank",rel:"noopener noreferrer",children:"@swc/plugin-emotion"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginReact } from '@rsbuild/plugin-react';\n\nexport default defineConfig({\n  plugins: [\n    pluginReact({\n      swcReactOptions: {\n        importSource: '@emotion/react',\n      },\n    }),\n  ],\n  tools: {\n    swc: {\n      jsc: {\n        experimental: {\n          plugins: [['@swc/plugin-emotion', {}]],\n        },\n      },\n    },\n  },\n});\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["你可以参考这个示例：",(0,t.jsx)(n.a,{href:"https://github.com/rspack-contrib/rspack-examples/tree/main/rsbuild/emotion",target:"_blank",rel:"noopener noreferrer",children:"emotion"}),"。"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"使用-styled-jsx",children:["使用 styled-jsx",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-styled-jsx",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["你可以通过 ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/@swc/plugin-styled-jsx",target:"_blank",rel:"noopener noreferrer",children:"@swc/plugin-styled-jsx"})," 来使用 ",(0,t.jsx)(n.a,{href:"https://github.com/vercel/styled-jsx",target:"_blank",rel:"noopener noreferrer",children:"styled-jsx"}),"："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginReact } from '@rsbuild/plugin-react';\n\nexport default defineConfig({\n  plugins: [pluginReact()],\n  tools: {\n    swc: {\n      jsc: {\n        experimental: {\n          plugins: [['@swc/plugin-styled-jsx', {}]],\n        },\n      },\n    },\n  },\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["请注意，你需要选择和当前 ",(0,t.jsx)(n.code,{children:"@swc/core"})," 版本匹配的 SWC 插件，才能使 SWC 正常执行，详见 ",(0,t.jsx)(n.a,{href:"/config/tools/swc",children:"tools.swc"}),"。"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["你可以参考这个示例：",(0,t.jsx)(n.a,{href:"https://github.com/rspack-contrib/rspack-examples/tree/main/rsbuild/styled-jsx",target:"_blank",rel:"noopener noreferrer",children:"styled-jsx"}),"。"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"使用-vanilla-extract",children:["使用 vanilla-extract",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-vanilla-extract",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Rsbuild 支持使用 ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/@vanilla-extract/webpack-plugin",target:"_blank",rel:"noopener noreferrer",children:"@vanilla-extract/webpack-plugin"})," 插件，你可以添加以下配置来使用 ",(0,t.jsx)(n.a,{href:"https://github.com/vanilla-extract-css/vanilla-extract",target:"_blank",rel:"noopener noreferrer",children:"vanilla-extract"}),"："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginReact } from '@rsbuild/plugin-react';\nimport { VanillaExtractPlugin } from '@vanilla-extract/webpack-plugin';\n\nexport default defineConfig({\n  plugins: [\n    pluginReact({\n      reactRefreshOptions: {\n        exclude: [/\\.css\\.ts$/],\n      },\n    }),\n  ],\n  tools: {\n    rspack: {\n      plugins: [new VanillaExtractPlugin()],\n    },\n  },\n});\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["你可以参考这个示例：",(0,t.jsx)(n.a,{href:"https://github.com/rspack-contrib/rspack-examples/tree/main/rsbuild/vanilla-extract",target:"_blank",rel:"noopener noreferrer",children:"vanilla-extract"}),"。"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"使用-stylex",children:["使用 StyleX",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-stylex",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["你可以通过 ",(0,t.jsx)(n.a,{href:"https://github.com/eryue0220/unplugin-stylex",target:"_blank",rel:"noopener noreferrer",children:"unplugin-stylex"})," 来使用 ",(0,t.jsx)(n.a,{href:"https://github.com/facebook/stylex",target:"_blank",rel:"noopener noreferrer",children:"StyleX"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginReact } from '@rsbuild/plugin-react';\nimport stylexPlugin from 'unplugin-stylex/rspack';\n\nexport default defineConfig({\n  plugins: [pluginReact()],\n  tools: {\n    rspack: {\n      plugins: [stylexPlugin()],\n    },\n  },\n});\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["你可以参考这个示例：",(0,t.jsx)(n.a,{href:"https://github.com/rspack-contrib/rspack-examples/tree/main/rsbuild/stylex",target:"_blank",rel:"noopener noreferrer",children:"stylex"}),"。"]}),"\n"]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}let c=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["zh%2Fguide%2Fframework%2Freact.mdx"]={toc:[{text:"创建 React 项目",id:"创建-react-项目",depth:2},{text:"在已有项目中使用 React",id:"在已有项目中使用-react",depth:2},{text:"使用 SVGR",id:"使用-svgr",depth:2},{text:"React Fast Refresh",id:"react-fast-refresh",depth:2},{text:"React Compiler",id:"react-compiler",depth:2},{text:"如何使用",id:"如何使用",depth:3},{text:"配置",id:"配置",depth:3},{text:"Router",id:"router",depth:2},{text:"TanStack Router",id:"tanstack-router",depth:3},{text:"CSS-in-JS",id:"css-in-js",depth:2},{text:"使用 styled-components",id:"使用-styled-components",depth:3},{text:"使用 Emotion",id:"使用-emotion",depth:3},{text:"使用 styled-jsx",id:"使用-styled-jsx",depth:3},{text:"使用 vanilla-extract",id:"使用-vanilla-extract",depth:3},{text:"使用 StyleX",id:"使用-stylex",depth:3}],title:"React",frontmatter:{}}}}]);