"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["2139"],{19206:function(e,n,r){r.r(n),r.d(n,{default:function(){return h}});var s=r(55367),t=r(26971);function c(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",pre:"pre",p:"p",h2:"h2",h3:"h3"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"performanceprefetch",children:["performance.prefetch",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#performanceprefetch",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type:"})," ",(0,s.jsx)(n.code,{children:"undefined | true | PrefetchOption"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type IncludeType = 'async-chunks' | 'initial' | 'all-assets' | 'all-chunks';\n\ntype Filter = Array<string | RegExp> | ((filename: string) => boolean);\n\ninterface PrefetchOption {\n  type?: IncludeType;\n  include?: Filter;\n  exclude?: Filter;\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Default:"})," ",(0,s.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Inject the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/prefetch",target:"_blank",rel:"noopener noreferrer",children:(0,s.jsx)(n.code,{children:'<link rel="prefetch">'})})," tags for the static assets generated by Rsbuild."]}),"\n",(0,s.jsxs)(n.h2,{id:"what-is-prefetch",children:["What is prefetch",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#what-is-prefetch",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["The prefetch keyword for the rel attribute of the ",(0,s.jsx)(n.code,{children:"<link>"})," element provides a hint to browsers that the user is likely to need the target resource for future navigation, and therefore the browser can likely improve the user experience by preemptively fetching and caching the resource."]}),"\n",(0,s.jsxs)(n.h2,{id:"enable-prefetch",children:["Enable prefetch",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#enable-prefetch",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["When ",(0,s.jsx)(n.code,{children:"performance.prefetch"})," is set to ",(0,s.jsx)(n.code,{children:"true"}),", Rsbuild will use the following default options to prefetch resources. This means prefetching all asynchronous resources on the current page, including asynchronous JS and its associated CSS, image, font, and other resources."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const defaultOptions = {\n  type: 'async-chunks',\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"For example, if you dynamically import other modules in the entry file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:'title="index.js"',children:"import('./foo');\nimport('./bar');\n"})}),"\n",(0,s.jsx)(n.p,{children:"The tags injected in HTML are as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<html>\n  <head>\n    <title>Rsbuild App</title>\n    <script defer src="/static/js/index.js"><\/script>\n    \x3c!-- Generated prefetch tags --\x3e\n    <link href="/static/js/async/src_bar_js.js" rel="prefetch" />\n    <link href="/static/js/async/src_foo_js.js" rel="prefetch" />\n  </head>\n</html>\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"inject-manually",children:["Inject Manually",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#inject-manually",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"performance.prefetch"})," can only inject the prefetch tags for static resources generated by Rsbuild. If you need to prefetch other resources, you can manually add tags through ",(0,s.jsx)(n.a,{href:"/config/html/tags",children:"html.tags"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:'title="rsbuild.config.ts"',children:"export default {\n  html: {\n    tags: [\n      {\n        tag: 'link',\n        attrs: {\n          rel: 'prefetch',\n          href: 'https://example.com/some-script.js',\n        },\n      },\n    ],\n  },\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"The injected HTML tag is as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<link rel="prefetch" href="https://example.com/some-script.js" />\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"options",children:["Options",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#options",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["When the value of ",(0,s.jsx)(n.code,{children:"performance.prefetch"})," is ",(0,s.jsx)(n.code,{children:"object"})," type, the Rsbuild will enable the prefetch capability for the specified resource according to the current options."]}),"\n",(0,s.jsxs)(n.h3,{id:"prefetchtype",children:["prefetch.type",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#prefetchtype",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"type"})," field controls which resources will be pre-fetched, and supports secondary filtering of specified resources through ",(0,s.jsx)(n.code,{children:"include"})," and ",(0,s.jsx)(n.code,{children:"exclude"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Currently supported resource types are as follows:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"async-chunks"}),": prefetch all asynchronous resources (on the current page), including asynchronous JS and its associated CSS, image, font and other resources."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"initial"}),": prefetch all non-async resources (on the current page). It should be noted that if the current script has been added to the HTML template, no additional pre-fetching will be performed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"all-chunks"}),": prefetch all resources (on the current page), including all asynchronous and non-asynchronous resources."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"all-assets"}),": prefetch all resources, and resources of other pages will be included in the MPA scenario."]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"example",children:["Example",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#example",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"When you want to prefetch all image resources in png format on the current page, you can configure it as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  performance: {\n    prefetch: {\n      type: 'all-chunks',\n      include: [/.*\\.png$/],\n    },\n  },\n};\n"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}let h=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["en%2Fconfig%2Fperformance%2Fprefetch.mdx"]={toc:[{text:"What is prefetch",id:"what-is-prefetch",depth:2},{text:"Enable prefetch",id:"enable-prefetch",depth:2},{text:"Inject Manually",id:"inject-manually",depth:2},{text:"Options",id:"options",depth:2},{text:"prefetch.type",id:"prefetchtype",depth:3},{text:"Example",id:"example",depth:3}],title:"performance.prefetch",frontmatter:{}}}}]);