"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["2338"],{10898:function(e,n,r){r.r(n),r.d(n,{default:function(){return l}});var s=r(55367),i=r(26971);function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",strong:"strong",h2:"h2",h3:"h3",pre:"pre",code:"code",blockquote:"blockquote"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"提升构建性能",children:["提升构建性能",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#提升构建性能",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Rsbuild 默认对构建性能进行了充分优化，但是随着使用场景变复杂、项目代码量变大，你可能会遇到一些构建性能的问题。"}),"\n",(0,s.jsxs)(n.p,{children:["本文档提供了一些可选的提速方法，",(0,s.jsx)(n.strong,{children:"开发者可以根据实际场景选取其中的部分方法"}),"，从而进一步提升构建速度。"]}),"\n",(0,s.jsxs)(n.h2,{id:"性能分析",children:["性能分析",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#性能分析",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"进行构建性能分析可以帮助你确定项目中的性能瓶颈，从而采取针对性的优化。"}),"\n",(0,s.jsxs)(n.p,{children:["请参考 ",(0,s.jsx)(n.a,{href:"/guide/debug/build-profiling",children:"构建性能分析"})," 章节了解更多。"]}),"\n",(0,s.jsxs)(n.h2,{id:"通用优化",children:["通用优化",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#通用优化",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"以下是一些通用的优化方法，对开发模式和生产模式均有提速效果。"}),"\n",(0,s.jsxs)(n.h3,{id:"减少模块",children:["减少模块",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#减少模块",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["对应用引用的模块数量进行优化，可以减少产物体积并提升构建性能，请阅读 ",(0,s.jsx)(n.a,{href:"/guide/optimization/optimize-bundle",children:"优化产物体积"})," 章节来了解一些优化方法。"]}),"\n",(0,s.jsxs)(n.h2,{id:"开发模式优化",children:["开发模式优化",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#开发模式优化",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"以下是针对开发构建进行提速的方法。"}),"\n",(0,s.jsxs)(n.h2,{id:"启动-lazy-compilation",children:["启动 Lazy Compilation",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#启动-lazy-compilation",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"启用 lazy compilation 可以显著减少开发启动时编译的模块数量，从而提升启动时间。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  dev: {\n    lazyCompilation: true,\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["请参考 ",(0,s.jsx)(n.a,{href:"/config/dev/lazy-compilation",children:"dev.lazyCompilation"})," 了解更多。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"source-map-格式",children:["Source Map 格式",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#source-map-格式",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["为了提供良好的调试体验，Rsbuild 在开发模式下默认使用 ",(0,s.jsx)(n.code,{children:"cheap-module-source-map"})," 格式 source map，这是一种高质量的 source map 格式，会带来一定的性能开销。"]}),"\n",(0,s.jsxs)(n.p,{children:["你可以通过 ",(0,s.jsx)(n.a,{href:"/config/output/source-map",children:"output.sourceMap"})," 调整开发时的 source map 格式，从而提升构建速度。"]}),"\n",(0,s.jsx)(n.p,{children:"比如禁用 source map："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  output: {\n    sourceMap: {\n      js: false,\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["或是把开发模式的 source map 格式设置为开销最小的 ",(0,s.jsx)(n.code,{children:"eval"})," 格式："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  output: {\n    sourceMap: {\n      js: process.env.NODE_ENV === 'development' ? 'eval' : false,\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["关于不同 source map 格式之间的详细差异，请查看 ",(0,s.jsx)(n.a,{href:"https://rspack.dev/zh/config/devtool",target:"_blank",rel:"noopener noreferrer",children:"Rspack - devtool"}),"。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"browserslist-范围",children:["Browserslist 范围",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#browserslist-范围",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["这项优化的原理与",(0,s.jsx)(n.a,{href:"/guide/optimization/optimize-bundle#adjust-browserslist",children:"「提升 Browserslist 范围」"}),"类似，区别在于，我们可以为开发模式和生产模式设置不同的 browserslist，从而减少开发模式下的编译开销。"]}),"\n",(0,s.jsxs)(n.p,{children:["比如，你可以在 ",(0,s.jsx)(n.code,{children:".browserslistrc"})," 中添加以下配置，表示在开发模式下只兼容最新的浏览器，在生产模式下兼容实际需要的浏览器："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",meta:'title=".browserslistrc"',children:"[production]\nchrome >= 87\nedge >= 88\nfirefox >= 78\nsafari >= 14\n\n[development]\nlast 1 chrome version\nlast 1 firefox version\nlast 1 safari version\n"})}),"\n",(0,s.jsx)(n.p,{children:"注意，这项优化方法会导致开发模式与生产模式的构建产物存在一定差异。"})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}let l=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["zh%2Fguide%2Foptimization%2Fbuild-performance.mdx"]={toc:[{text:"性能分析",id:"性能分析",depth:2},{text:"通用优化",id:"通用优化",depth:2},{text:"减少模块",id:"减少模块",depth:3},{text:"开发模式优化",id:"开发模式优化",depth:2},{text:"启动 Lazy Compilation",id:"启动-lazy-compilation",depth:2},{text:"Source Map 格式",id:"source-map-格式",depth:3},{text:"Browserslist 范围",id:"browserslist-范围",depth:3}],title:"提升构建性能",frontmatter:{}}}}]);