"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["1356"],{71057:function(e,r,n){n.r(r),n.d(r,{default:function(){return d}});var s=n(55367),t=n(26971);function l(e){let r=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",h2:"h2",h3:"h3",img:"img",div:"div"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.h1,{id:"devclient",children:["dev.client",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#devclient",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"配置 Rsbuild 在开发过程中注入的 client 代码，可以用于设置热更新对应的 WebSocket URL。"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"类型："})}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:"type Client = {\n  // WebSocket 请求的协议名称\n  protocol?: 'ws' | 'wss';\n  // WebSocket 请求的路径\n  path?: string;\n  // WebSocket 请求的端口号\n  port?: string | number;\n  // WebSocket 请求的 host\n  host?: string;\n  // WebSocket 请求断开后的最大重连次数\n  reconnect?: number;\n  // 当出现编译错误时，是否在浏览器中显示 error overlay\n  overlay?: boolean;\n};\n"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"默认值："})}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"const defaultConfig = {\n  path: '/rsbuild-hmr',\n  // 默认为 \"location.port\"\n  port: '',\n  // 默认为 \"location.hostname\"\n  host: '',\n  // 默认为 \"location.protocol === 'https:' ? 'wss' : 'ws'\"\"\n  protocol: undefined,\n  reconnect: 100,\n  overlay: true,\n};\n"})}),"\n",(0,s.jsxs)(r.h2,{id:"配置-websocket-url",children:["配置 WebSocket URL",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#配置-websocket-url",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["默认情况下，当你启动 dev server，并访问 ",(0,s.jsx)(r.code,{children:"http://localhost:3000/"})," 时，页面上会发起一个 WebSocket 请求，指向 ",(0,s.jsx)(r.code,{children:"ws://localhost:3000/rsbuild-hmr"}),"，使页面与开发服务器建立连接。"]}),"\n",(0,s.jsx)(r.p,{children:"在某些开发场景下，你可能需要调整 WebSocket URL，来保证 WebSocket 请求能够正确连接。"}),"\n",(0,s.jsxs)(r.p,{children:["比如当你使用代理工具进行开发时，实际访问的可能是一个线上域名，此时你可以手动配置 ",(0,s.jsx)(r.code,{children:"dev.client"}),"，将 WebSocket URL 指向本地的开发服务器。下面是一个示例，WebSocket 请求的地址为 ",(0,s.jsx)(r.code,{children:"ws://127.0.0.1:3000/rsbuild-hmr"}),"："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"export default {\n  dev: {\n    client: {\n      protocol: 'ws',\n      // 通常使用 `127.0.0.1`，可以避免跨域请求被浏览器拦截\n      host: '127.0.0.1',\n      port: 3000,\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(r.h3,{id:"端口号占位符",children:["端口号占位符",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#端口号占位符",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"Rsbuild server 监听的端口号可能会发生变更。比如，当端口被占用时，Rsbuild 会自动递增端口号，直至找到一个可用端口。"}),"\n",(0,s.jsxs)(r.p,{children:["为了避免端口变化导致 ",(0,s.jsx)(r.code,{children:"client.port"})," 失效，你可以使用以下方法之一："]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["开启 ",(0,s.jsx)(r.a,{href:"/config/server/strict-port",children:"server.strictPort"}),"。"]}),"\n",(0,s.jsxs)(r.li,{children:["使用 ",(0,s.jsx)(r.code,{children:"<port>"})," 占位符来指代当前端口号，Rsbuild 会将占位符替换为实际监听的端口号。"]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",meta:'title="rsbuild.config.ts"',children:"export default {\n  dev: {\n    client: {\n      port: '<port>',\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(r.h2,{id:"hot-update-文件",children:["hot-update 文件",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#hot-update-文件",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["在热更新过程中，页面会发起 GET 请求来获取 hot-update 文件，包括 ",(0,s.jsx)(r.code,{children:"*.hot-update.json"})," 和 ",(0,s.jsx)(r.code,{children:"*.hot-update.js"}),"。这些文件包含了热更新所需的信息，比如被更新的模块、模块的代码等。"]}),"\n",(0,s.jsxs)(r.p,{children:["hot-update 文件属于静态资源，如果你需要配置 hot-update 文件的 URL，请使用 ",(0,s.jsx)(r.a,{href:"/config/dev/asset-prefix",children:"dev.assetPrefix"})," 选项。"]}),"\n",(0,s.jsxs)(r.h2,{id:"error-overlay",children:["Error overlay",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#error-overlay",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["通过 ",(0,s.jsx)(r.code,{children:"dev.client.overlay"})," 选项，可以选择是否启用 error overlay。"]}),"\n",(0,s.jsx)(r.p,{children:"默认情况下，当编译发生错误时，Rsbuild会在浏览器中显示 error overlay，并提供错误信息和错误堆栈："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{src:"https://assets.rspack.dev/rsbuild/assets/rsbuild-error-overlay.png",alt:"error overlay"})}),"\n",(0,s.jsxs)(r.p,{children:["如果需要禁用 error overlay，可以将其设置为 ",(0,s.jsx)(r.code,{children:"false"}),"："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"export default {\n  dev: {\n    client: {\n      overlay: false,\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(r.div,{className:"rspress-directive tip",children:[(0,s.jsx)(r.div,{className:"rspress-directive-title",children:"TIP"}),(0,s.jsx)(r.div,{className:"rspress-directive-content",children:(0,s.jsxs)(r.p,{children:["Error overlay 功能需要当前浏览器版本支持 ",(0,s.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_components",target:"_blank",rel:"noopener noreferrer",children:"Web Components"}),"。在不支持的浏览器中，overlay 不会展示。\n"]})})]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,t.ah)(),e.components);return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}let d=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["zh%2Fconfig%2Fdev%2Fclient.mdx"]={toc:[{text:"配置 WebSocket URL",id:"配置-websocket-url",depth:2},{text:"端口号占位符",id:"端口号占位符",depth:3},{text:"hot-update 文件",id:"hot-update-文件",depth:2},{text:"Error overlay",id:"error-overlay",depth:2}],title:"dev.client",frontmatter:{}}}}]);