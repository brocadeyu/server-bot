"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["2357"],{79453:function(e,s,n){n.r(s),n.d(s,{default:function(){return d}});var r=n(55367),c=n(26971);function i(e){let s=Object.assign({h1:"h1",a:"a",p:"p",code:"code",pre:"pre",ul:"ul",li:"li",h2:"h2",div:"div",h3:"h3"},(0,c.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h1,{id:"路径别名",children:["路径别名",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#路径别名",children:"#"})]}),"\n",(0,r.jsx)(s.p,{children:"路径别名（alias）允许开发者为模块定义别名，以便于在代码中更方便的引用它们。当你想要使用一个简短、易于记忆的名称来代替冗长复杂的路径时，这将非常有用。"}),"\n",(0,r.jsxs)(s.p,{children:["例如，假如你在项目中经常引用 ",(0,r.jsx)(s.code,{children:"src/common/request.ts"})," 模块，你可以为它定义一个别名 ",(0,r.jsx)(s.code,{children:"@request"}),"，然后在代码中通过 ",(0,r.jsx)(s.code,{children:"import request from '@request'"})," 来引用它，而不需要每次都写出完整的相对路径。这也允许你将模块移动到不同的位置，而不需要更新代码中的所有 import 语法。"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",meta:'title="src/index.ts"',children:"import request from '@request'; // 解析为 `src/common/request.ts`\n"})}),"\n",(0,r.jsx)(s.p,{children:"在 Rsbuild 中，你有两种方式可以设置路径别名:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["使用 ",(0,r.jsx)(s.a,{href:"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html",target:"_blank",rel:"noopener noreferrer",children:"tsconfig.json"})," 中的 ",(0,r.jsx)(s.code,{children:"paths"})," 选项。"]}),"\n",(0,r.jsxs)(s.li,{children:["使用 ",(0,r.jsx)(s.a,{href:"/config/resolve/alias",children:"resolve.alias"})," 配置。"]}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"tsconfigjson-的-paths-选项",children:[(0,r.jsx)(s.code,{children:"tsconfig.json"})," 的 ",(0,r.jsx)(s.code,{children:"paths"})," 选项",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson-的-paths-选项",children:"#"})]}),"\n",(0,r.jsxs)(s.p,{children:["你可以通过 ",(0,r.jsx)(s.code,{children:"tsconfig.json"})," 中的 ",(0,r.jsx)(s.code,{children:"paths"})," 来配置别名，这是我们在 TypeScript 项目中推荐使用的方式，因为它可以解决路径别名的 TS 类型问题。"]}),"\n",(0,r.jsx)(s.p,{children:"比如："}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n  "compilerOptions": {\n    "paths": {\n      "@common/*": ["./src/common/*"]\n    }\n  }\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["以上配置完成后，如果你在代码中引用 ",(0,r.jsx)(s.code,{children:"@common/Foo.tsx"}),", 则会映射到 ",(0,r.jsx)(s.code,{children:"<project>/src/common/Foo.tsx"})," 路径上。"]}),"\n",(0,r.jsxs)(s.div,{className:"rspress-directive tip",children:[(0,r.jsx)(s.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(s.div,{className:"rspress-directive-content",children:(0,r.jsxs)(s.p,{children:["你可以阅读 ",(0,r.jsx)(s.a,{href:"https://typescriptlang.org/tsconfig#paths",target:"_blank",rel:"noopener noreferrer",children:"TypeScript - paths"})," 文档来了解更多用法。\n"]})})]}),"\n",(0,r.jsxs)(s.h2,{id:"jsconfigjson",children:["jsconfig.json",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#jsconfigjson",children:"#"})]}),"\n",(0,r.jsxs)(s.p,{children:["在非 TypeScript 项目中，如果你需要通过 ",(0,r.jsx)(s.a,{href:"https://code.visualstudio.com/docs/languages/jsconfig",target:"_blank",rel:"noopener noreferrer",children:"jsconfig.json"})," 中的 ",(0,r.jsx)(s.code,{children:"paths"})," 字段来设置路径别名，可以使用 ",(0,r.jsx)(s.a,{href:"/config/source/tsconfig-path",children:"source.tsconfigPath"})," 选项来设置。"]}),"\n",(0,r.jsxs)(s.p,{children:["添加以下配置后，Rsbuild 会识别 ",(0,r.jsx)(s.code,{children:"jsconfig.json"})," 中的 ",(0,r.jsx)(s.code,{children:"paths"})," 字段。"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",meta:'title="rsbuild.config.mjs"',children:"export default {\n  source: {\n    tsconfigPath: './jsconfig.json',\n  },\n};\n"})}),"\n",(0,r.jsxs)(s.h2,{id:"resolvealias-配置",children:[(0,r.jsx)(s.code,{children:"resolve.alias"})," 配置",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#resolvealias-配置",children:"#"})]}),"\n",(0,r.jsxs)(s.p,{children:["Rsbuild 提供了 ",(0,r.jsx)(s.a,{href:"/config/resolve/alias",children:"resolve.alias"})," 配置项，对应 Rspack 原生的 ",(0,r.jsx)(s.a,{href:"https://rspack.dev/zh/config/resolve#resolvealias",target:"_blank",rel:"noopener noreferrer",children:"resolve.alias"})," 配置，你可以通过对象或者函数的方式来配置这个选项。"]}),"\n",(0,r.jsxs)(s.h3,{id:"使用场景",children:["使用场景",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#使用场景",children:"#"})]}),"\n",(0,r.jsxs)(s.p,{children:["由于 ",(0,r.jsx)(s.code,{children:"tsconfig.json"})," 的 ",(0,r.jsx)(s.code,{children:"paths"})," 配置是写在静态 JSON 文件里的，因此它不具备动态性。"]}),"\n",(0,r.jsxs)(s.p,{children:["而 ",(0,r.jsx)(s.code,{children:"resolve.alias"})," 则可以弥补这一不足，你可以通过 JavaScript 代码来动态设置 ",(0,r.jsx)(s.code,{children:"resolve.alias"}),"（比如基于环境变量来设置）。"]}),"\n",(0,r.jsxs)(s.h3,{id:"对象用法",children:["对象用法",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#对象用法",children:"#"})]}),"\n",(0,r.jsxs)(s.p,{children:["你可以通过对象的方式来配置 ",(0,r.jsx)(s.code,{children:"resolve.alias"}),"，其中的相对路径会被自动补全为绝对路径。"]}),"\n",(0,r.jsx)(s.p,{children:"比如："}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"export default {\n  resolve: {\n    alias: {\n      '@common': './src/common',\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(s.p,{children:["以上配置完成后，如果你在代码中引用 ",(0,r.jsx)(s.code,{children:"@common/Foo.tsx"}),", 则会映射到 ",(0,r.jsx)(s.code,{children:"<project>/src/common/Foo.tsx"})," 路径上。"]}),"\n",(0,r.jsxs)(s.h3,{id:"函数用法",children:["函数用法",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#函数用法",children:"#"})]}),"\n",(0,r.jsxs)(s.p,{children:["你也可以将 ",(0,r.jsx)(s.code,{children:"resolve.alias"})," 配置为一个函数，拿到内置的 ",(0,r.jsx)(s.code,{children:"alias"})," 对象，对其进行修改。"]}),"\n",(0,r.jsx)(s.p,{children:"比如："}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"export default {\n  resolve: {\n    alias: (alias) => {\n      alias['@common'] = './src/common';\n      return alias;\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"优先级",children:["优先级",(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#优先级",children:"#"})]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"tsconfig.json"})," 的 ",(0,r.jsx)(s.code,{children:"paths"})," 配置的优先级高于 ",(0,r.jsx)(s.code,{children:"resolve.alias"}),"，当一个路径同时匹配到这两者定义的规则时，会优先使用 ",(0,r.jsx)(s.code,{children:"tsconfig.json"})," 的 ",(0,r.jsx)(s.code,{children:"paths"})," 定义的值。"]}),"\n",(0,r.jsxs)(s.p,{children:["你可以通过 ",(0,r.jsx)(s.a,{href:"/config/resolve/alias-strategy",children:"resolve.aliasStrategy"})," 来调整这两个选项的优先级。"]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,c.ah)(),e.components);return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}let d=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["zh%2Fguide%2Fadvanced%2Falias.mdx"]={toc:[{text:"`tsconfig.json` 的 `paths` 选项",id:"tsconfigjson-的-paths-选项",depth:2},{text:"jsconfig.json",id:"jsconfigjson",depth:2},{text:"`resolve.alias` 配置",id:"resolvealias-配置",depth:2},{text:"使用场景",id:"使用场景",depth:3},{text:"对象用法",id:"对象用法",depth:3},{text:"函数用法",id:"函数用法",depth:3},{text:"优先级",id:"优先级",depth:3}],title:"路径别名",frontmatter:{}}}}]);