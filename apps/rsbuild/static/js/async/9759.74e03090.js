"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["9759"],{63933:function(e,n,s){s.r(n),s.d(n,{default:function(){return c}});var r=s(55367),d=s(26971);function i(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",p:"p",h2:"h2",h3:"h3",blockquote:"blockquote"},(0,d.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"devwatchfiles",children:["dev.watchFiles",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#devwatchfiles",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"类型："})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type WatchFilesOptions = {\n  paths: string | string[];\n  type?: 'reload-page' | 'reload-server';\n  //  chokidar 选项\n  options?: ChokidarOptions;\n};\n\ntype WatchFilesConfig = WatchFiles | WatchFiles[];\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"默认值："})," ",(0,r.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"监听指定文件和目录的变化。当文件发生变化时，可以触发页面的重新加载，或者触发 dev server 重新启动。"}),"\n",(0,r.jsxs)(n.h2,{id:"paths",children:["paths",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#paths",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"string | string[]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"默认值："})," ",(0,r.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"监视的文件或目录的路径，支持 glob 语法。可以是单个路径，也可以是多个路径组成的数组。"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"监听单个文件："}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  dev: {\n    watchFiles: {\n      paths: 'public/demo.txt',\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"使用 glob 匹配多个文件："}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  dev: {\n    watchFiles: {\n      paths: 'src/**/*.txt',\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"监听多个文件路径："}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  dev: {\n    watchFiles: {\n      paths: ['src/**/*.txt', 'public/**/*'],\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"type",children:["type",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#type",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"'reload-page' | 'reload-server'"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"默认值："})," ",(0,r.jsx)(n.code,{children:"'reload-page'"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"指定当文件发生变化时，是触发页面重新加载，还是触发 dev server 重新启动。"}),"\n",(0,r.jsxs)(n.h3,{id:"reload-page",children:["reload-page",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#reload-page",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"reload-page 表示当文件发生变化时，浏览器打开的页面会自动重新加载。如果未明确指定 type，Rsbuild 会默认采用 reload-page 行为。"}),"\n",(0,r.jsxs)(n.p,{children:["这可以用于监听一些静态资源文件的变化，例如 ",(0,r.jsx)(n.code,{children:"public"})," 目录下的文件。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  dev: {\n    watchFiles: {\n      type: 'reload-page',\n      paths: 'public/**/*',\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["如果 ",(0,r.jsx)(n.a,{href:"/config/dev/hmr",children:"dev.hmr"})," 和 ",(0,r.jsx)(n.a,{href:"/config/dev/live-reload",children:"dev.liveReload"})," 都设置为 ",(0,r.jsx)(n.code,{children:"false"}),"，则页面将不会自动重新加载。"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"reload-server",children:["reload-server",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#reload-server",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["reload-server 表示当文件发生变化时，dev server 会自动重新启动。这可以用于监听一些配置文件的变化，例如被 ",(0,r.jsx)(n.code,{children:"rsbuild.config.ts"})," 文件 import 的模块。"]}),"\n",(0,r.jsxs)(n.p,{children:["例如，你在 ",(0,r.jsx)(n.code,{children:"config"})," 目录下维护了一些公共配置文件，例如 ",(0,r.jsx)(n.code,{children:"common.ts"}),"，你希望当这些文件发生变化时，dev server 可以自动重新启动。示例配置："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { commonConfig } from './config/common';\n\nexport default {\n  ...commonConfig,\n  dev: {\n    watchFiles: {\n      type: 'reload-server',\n      paths: ['./config/*.ts'],\n    },\n  },\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"需要注意的是，reload-server 功能由 Rsbuild CLI 提供。如果你使用的是自定义 server 或基于 Rsbuild 封装的上层框架，目前暂不支持此配置。"}),"\n",(0,r.jsxs)(n.h2,{id:"options",children:["options",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#options",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"ChokidarOptions"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"默认值："})," ",(0,r.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"watchFiles"})," 是基于 ",(0,r.jsx)(n.a,{href:"https://github.com/paulmillr/chokidar#api",target:"_blank",rel:"noopener noreferrer",children:"chokidar v4"})," 实现的，你可以通过 ",(0,r.jsx)(n.code,{children:"options"})," 传入 chokidar 的选项。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  dev: {\n    watchFiles: {\n      paths: 'src/**/*.txt',\n      options: {\n        usePolling: false,\n      },\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"传入数组",children:["传入数组",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#传入数组",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"dev.watchFiles"})," 支持传入一个数组，这允许你同时配置不同 ",(0,r.jsx)(n.code,{children:"type"})," 的监听器，或是为不同的目录配置不同的 ",(0,r.jsx)(n.code,{children:"watchOptions"}),"。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  dev: {\n    watchFiles: [\n      {\n        type: 'reload-page',\n        paths: 'public/**/*',\n      },\n      {\n        type: 'reload-server',\n        paths: ['./config/*.ts'],\n      },\n    ],\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"说明",children:["说明",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#说明",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"watchFiles"})," 不适用于监听构建依赖的文件。当 Rsbuild 构建开始时，底层的 Rspack 默认会监听所有构建依赖，当这些文件发生变化时，会触发一次新的构建。"]}),"\n",(0,r.jsxs)(n.p,{children:["如果你希望当某些文件变化时，不触发重新构建，可以使用 Rspack 的 ",(0,r.jsx)(n.a,{href:"https://rspack.dev/config/watch#watchoptionsignored",target:"_blank",rel:"noopener noreferrer",children:"watchOptions.ignored"})," 配置项。"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["详见 ",(0,r.jsx)(n.a,{href:"/guide/advanced/hmr#%E6%96%87%E4%BB%B6%E7%9B%91%E5%90%AC",children:"模块热更新 - 文件监听"}),"。"]}),"\n"]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}let c=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["zh%2Fconfig%2Fdev%2Fwatch-files.mdx"]={toc:[{text:"paths",id:"paths",depth:2},{text:"type",id:"type",depth:2},{text:"reload-page",id:"reload-page",depth:3},{text:"reload-server",id:"reload-server",depth:3},{text:"options",id:"options",depth:2},{text:"传入数组",id:"传入数组",depth:2},{text:"说明",id:"说明",depth:2}],title:"dev.watchFiles",frontmatter:{}}}}]);