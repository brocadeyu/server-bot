"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["2604"],{50423:function(e,r,s){s.r(r),s.d(r,{default:function(){return l}});var n=s(55367),o=s(26971);function a(e){let r=Object.assign({h1:"h1",a:"a",p:"p",div:"div",h2:"h2",h3:"h3",pre:"pre",code:"code",blockquote:"blockquote"},(0,o.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h1,{id:"使用-web-workers",children:["使用 Web Workers",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-web-workers",children:"#"})]}),"\n",(0,n.jsxs)(r.p,{children:["本文将介绍在 Rsbuild 项目中如何配置和使用 ",(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API/Using_web_workers",target:"_blank",rel:"noopener noreferrer",children:"Web Workers"}),"。"]}),"\n",(0,n.jsxs)(r.div,{className:"rspress-directive tip",children:[(0,n.jsx)(r.div,{className:"rspress-directive-title",children:"Web Workers"}),(0,n.jsx)(r.div,{className:"rspress-directive-content",children:(0,n.jsx)(r.p,{children:"Web Workers 是一种 JavaScript API，它允许网页在后台线程中执行脚本，与主线程（网页）分离。这意味着，您可以使用 Web Workers 来执行计算密集型或长时间运行的任务，而无需阻塞主线程，进而影响网页的性能。"})})]}),"\n",(0,n.jsxs)(r.h2,{id:"使用-web-workers-1",children:["使用 Web Workers",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-web-workers-1",children:"#"})]}),"\n",(0,n.jsxs)(r.h3,{id:"使用-worker-构造器",children:["使用 Worker 构造器",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-worker-构造器",children:"#"})]}),"\n",(0,n.jsxs)(r.p,{children:["Web Workers 是 Rspack 的一等公民，这意味着你不需要任何的 Loader 就可以直接在 Rspack / Rsbuild 项目中使用 Web Workers。详情可参考 ",(0,n.jsx)(r.a,{href:"https://rspack.dev/zh/guide/features/web-workers",target:"_blank",rel:"noopener noreferrer",children:"Rspack - Web Workers"}),"。"]}),"\n",(0,n.jsx)(r.p,{children:"例如，创建一个名为 worker.js 的文件："}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",meta:"title=worker.js",children:"self.onmessage = (event) => {\n  const result = event.data * 2;\n  self.postMessage(result);\n};\n"})}),"\n",(0,n.jsx)(r.p,{children:"然后在主线程中使用这个 worker："}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",meta:"title=index.js",children:"const worker = new Worker(new URL('./worker.js', import.meta.url));\n\nworker.onmessage = (event) => {\n  console.log('The results from Workers:', event.data);\n};\n\nworker.postMessage(10);\n"})}),"\n",(0,n.jsxs)(r.h3,{id:"使用-worker-loader",children:["使用 worker-loader",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-worker-loader",children:"#"})]}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"worker-loader"})," 已不再维护，推荐使用 ",(0,n.jsx)(r.code,{children:"new Worker()"})," 语法。"]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["如果你的项目已经在使用 ",(0,n.jsx)(r.code,{children:"worker-loader"}),"，或者希望使用 ",(0,n.jsx)(r.code,{children:"worker-loader"})," 内的 ",(0,n.jsx)(r.code,{children:"inline"})," 等配置能力，在 Rsbuild / Rspack 项目中可以使用 ",(0,n.jsx)(r.code,{children:"worker-loader"})," 的替代方案 ",(0,n.jsx)(r.a,{href:"https://github.com/rspack-contrib/worker-rspack-loader",target:"_blank",rel:"noopener noreferrer",children:"worker-rspack-loader"}),"。"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"export default {\n  tools: {\n    rspack: {\n      resolveLoader: {\n        alias: {\n          // 修改内联 loader 中 worker-loader 的指向，如 `worker-loader!pdfjs-dist/es5/build/pdf.worker.js`\n          'worker-loader': require.resolve('worker-rspack-loader'),\n        },\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.worker\\.js$/,\n            loader: 'worker-rspack-loader',\n          },\n        ],\n      },\n    },\n  },\n};\n"})}),"\n",(0,n.jsxs)(r.h3,{id:"从远程-url-加载脚本跨域",children:["从远程 URL 加载脚本（跨域）",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#从远程-url-加载脚本跨域",children:"#"})]}),"\n",(0,n.jsxs)(r.p,{children:["默认情况下，worker 脚本会输出成一个独立的 chunk。worker 脚本支持上传到 CDN，但在加载远程脚本时需要遵守",(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy",target:"_blank",rel:"noopener noreferrer",children:"同源策略"}),"。"]}),"\n",(0,n.jsxs)(r.p,{children:["如果你希望你的 worker 脚本可以跨域访问，常见解法是通过 ",(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/WorkerGlobalScope/importScripts",target:"_blank",rel:"noopener noreferrer",children:"importScripts"})," (不受 CORS 约束) 加载，可参考如下代码："]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",meta:"title=index.js {2}",children:"// https://github.com/jantimon/remote-web-worker\nimport 'remote-web-worker';\n\nconst worker = new Worker(new URL('./worker.js', import.meta.url), {\n  type: 'classic',\n});\n\nworker.onmessage = (event) => {\n  console.log('The results from Workers:', event.data);\n};\n\nworker.postMessage(10);\n"})}),"\n",(0,n.jsxs)(r.p,{children:["关于跨域问题的详细讨论可参考 ",(0,n.jsx)(r.a,{href:"https://github.com/webpack/webpack/discussions/14648",target:"_blank",rel:"noopener noreferrer",children:"Discussions - webpack 5 web worker support for CORS?"})]}),"\n",(0,n.jsxs)(r.h2,{id:"构建-web-workers-产物",children:["构建 Web Workers 产物",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#构建-web-workers-产物",children:"#"})]}),"\n",(0,n.jsx)(r.p,{children:"Rsbuild 支持独立构建 Web Workers 产物，这在你需要将 Web Workers 产物提供给其他应用使用时很有帮助。"}),"\n",(0,n.jsxs)(r.p,{children:["将 Rsbuild 的 ",(0,n.jsx)(r.a,{href:"/config/output/target",children:"output.target"})," 配置项设置为 ",(0,n.jsx)(r.code,{children:"'web-worker'"}),"，即可生成运行在 Worker 线程的构建产物。"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"export default {\n  output: {\n    target: 'web-worker',\n  },\n};\n"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,o.ah)(),e.components);return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}let l=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["zh%2Fguide%2Fbasic%2Fweb-workers.mdx"]={toc:[{text:"使用 Web Workers",id:"使用-web-workers-1",depth:2},{text:"使用 Worker 构造器",id:"使用-worker-构造器",depth:3},{text:"使用 worker-loader",id:"使用-worker-loader",depth:3},{text:"从远程 URL 加载脚本（跨域）",id:"从远程-url-加载脚本跨域",depth:3},{text:"构建 Web Workers 产物",id:"构建-web-workers-产物",depth:2}],title:"使用 Web Workers",frontmatter:{}}}}]);