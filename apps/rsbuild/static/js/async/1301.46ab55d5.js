"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["1301"],{40897:function(e,i,s){s.r(i),s.d(i,{default:function(){return c}});var t=s(55367),r=s(26971);function n(e){let i=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",p:"p",div:"div",h2:"h2",pre:"pre"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.h1,{id:"devwritetodisk",children:["dev.writeToDisk",(0,t.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#devwritetodisk",children:"#"})]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Type:"})," ",(0,t.jsx)(i.code,{children:"boolean | ((filename: string) => boolean)"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Default:"})," ",(0,t.jsx)(i.code,{children:"false"})]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Controls whether the build output from development mode is written to disk."}),"\n",(0,t.jsxs)(i.div,{className:"rspress-directive tip",children:[(0,t.jsx)(i.div,{className:"rspress-directive-title",children:"TIP"}),(0,t.jsx)(i.div,{className:"rspress-directive-content",children:(0,t.jsxs)(i.p,{children:["In development mode, Rsbuild stores the build outputs in memory on the dev server by default, rather than writing then to disk. This can reduce the overhead of fs operations. You can refer to ",(0,t.jsx)(i.a,{href:"/guide/basic/server#view-static-assets",children:"View Static Assets"})," to view all static assets generated in the current build.\n"]})})]}),"\n",(0,t.jsxs)(i.h2,{id:"writing-to-disk",children:["Writing to Disk",(0,t.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#writing-to-disk",children:"#"})]}),"\n",(0,t.jsx)(i.p,{children:"You can choose to write the build output to disk, which is usually used for inspecting the content of the build output or configuring proxy rules for static assets."}),"\n",(0,t.jsxs)(i.p,{children:["Simply set the ",(0,t.jsx)(i.code,{children:"dev.writeToDisk"})," option to ",(0,t.jsx)(i.code,{children:"true"}),":"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ts",children:"export default {\n  dev: {\n    writeToDisk: true,\n  },\n};\n"})}),"\n",(0,t.jsxs)(i.div,{className:"rspress-directive tip",children:[(0,t.jsx)(i.div,{className:"rspress-directive-title",children:"TIP"}),(0,t.jsx)(i.div,{className:"rspress-directive-content",children:(0,t.jsxs)(i.p,{children:["Setting ",(0,t.jsx)(i.code,{children:"writeToDisk: true"})," is used for viewing the build output from development mode. It does not change the behavior of the dev server. When accessing files through a browser, the dev server will still read the file content from memory.\n"]})})]}),"\n",(0,t.jsxs)(i.h2,{id:"matching-specific-files",children:["Matching Specific Files",(0,t.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#matching-specific-files",children:"#"})]}),"\n",(0,t.jsxs)(i.p,{children:["You can also set ",(0,t.jsx)(i.code,{children:"dev.writeToDisk"})," to a function to match only certain files. When the function returns ",(0,t.jsx)(i.code,{children:"false"}),", the file will not be written; when it returns ",(0,t.jsx)(i.code,{children:"true"}),", the file will be written to disk."]}),"\n",(0,t.jsx)(i.p,{children:"For example, to write files to disk while excluding hot-update temporary files:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ts",children:"export default {\n  dev: {\n    writeToDisk: (file) => !file.includes('.hot-update.'),\n  },\n};\n"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:i}=Object.assign({},(0,r.ah)(),e.components);return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(n,{...e})}):n(e)}let c=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["en%2Fconfig%2Fdev%2Fwrite-to-disk.mdx"]={toc:[{text:"Writing to Disk",id:"writing-to-disk",depth:2},{text:"Matching Specific Files",id:"matching-specific-files",depth:2}],title:"dev.writeToDisk",frontmatter:{}}}}]);