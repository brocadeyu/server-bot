"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["5390"],{70016:function(e,n,s){s.r(n),s.d(n,{default:function(){return t}});var r=s(55367),i=s(26971);function c(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",pre:"pre",p:"p",div:"div",h2:"h2"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"htmlmeta",children:["html.meta",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#htmlmeta",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"Object | Function"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"默认值："})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const defaultMeta = {\n  // <meta charset="UTF-8" />\n  charset: {\n    charset: \'UTF-8\',\n  },\n  // <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n  viewport: \'width=device-width, initial-scale=1.0\',\n};\n'})}),"\n",(0,r.jsxs)(n.p,{children:["配置 HTML 页面的 ",(0,r.jsx)(n.code,{children:"<meta>"})," 标签。"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsxs)(n.p,{children:["如果当前项目使用的 HTML 模板中已经包含了 ",(0,r.jsx)(n.code,{children:"charset"})," 或 ",(0,r.jsx)(n.code,{children:"viewport"})," meta 标签，那么 HTML 模板中的标签优先级更高。\n"]})})]}),"\n",(0,r.jsxs)(n.h2,{id:"string-类型",children:["String 类型",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#string-类型",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"类型："})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type MetaOptions = {\n  [name: string]: string;\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["当 ",(0,r.jsx)(n.code,{children:"meta"})," 对象的 ",(0,r.jsx)(n.code,{children:"value"})," 为字符串时，会自动将对象的 ",(0,r.jsx)(n.code,{children:"key"})," 映射为 ",(0,r.jsx)(n.code,{children:"name"}),"，",(0,r.jsx)(n.code,{children:"value"})," 映射为 ",(0,r.jsx)(n.code,{children:"content"}),"。"]}),"\n",(0,r.jsxs)(n.p,{children:["比如设置 ",(0,r.jsx)(n.code,{children:"description"}),"："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  html: {\n    meta: {\n      description: 'a description of the page',\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["最终在 HTML 中生成的 ",(0,r.jsx)(n.code,{children:"meta"})," 标签为："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<meta name="description" content="a description of the page" />\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"object-类型",children:["Object 类型",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#object-类型",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"类型："})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type MetaOptions = {\n  [name: string]:\n    | string\n    | false\n    | {\n        [attr: string]: string | boolean;\n      };\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["当 ",(0,r.jsx)(n.code,{children:"meta"})," 对象的 ",(0,r.jsx)(n.code,{children:"value"})," 为对象时，会将该对象的 ",(0,r.jsx)(n.code,{children:"key: value"})," 映射为 ",(0,r.jsx)(n.code,{children:"meta"})," 标签的属性。"]}),"\n",(0,r.jsxs)(n.p,{children:["比如设置 ",(0,r.jsx)(n.code,{children:"charset"}),"："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  html: {\n    meta: {\n      charset: {\n        charset: 'UTF-8',\n      },\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["最终在 HTML 中生成的 ",(0,r.jsx)(n.code,{children:"meta"})," 标签为："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<meta charset="UTF-8" />\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"函数用法",children:["函数用法",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#函数用法",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"类型："})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type MetaFunction = ({\n  value: MetaOptions,\n  entryName: string,\n}) => MetaOptions | void;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["当 ",(0,r.jsx)(n.code,{children:"html.meta"})," 为 Function 类型时，函数接收一个对象作为入参，对象的值包括："]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"}),"：Rsbuild 的默认 meta 配置。"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"entryName"}),": 当前入口的名称。"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"你可以直接修改配置对象不做返回，也可以返回一个对象作为最终的配置。"}),"\n",(0,r.jsxs)(n.p,{children:["比如，你可以直接修改内置的 ",(0,r.jsx)(n.code,{children:"meta"})," 配置对象："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  html: {\n    meta({ value }) {\n      value.description = 'this is my page';\n      return value;\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["在 MPA（多页面应用）场景下，你可以基于入口名称返回不同的 ",(0,r.jsx)(n.code,{children:"meta"})," 配置，从而为每个页面生成不同的 ",(0,r.jsx)(n.code,{children:"meta"})," 标签："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  html: {\n    meta({ entryName }) {\n      switch (entryName) {\n        case 'foo':\n          return {\n            description: 'this is foo page',\n          };\n        case 'bar':\n          return {\n            description: 'this is bar page',\n          };\n        default:\n          return {\n            description: 'this is other pages',\n          };\n      }\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"移除默认值",children:["移除默认值",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#移除默认值",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["将 ",(0,r.jsx)(n.code,{children:"meta"})," 对象的 ",(0,r.jsx)(n.code,{children:"value"})," 设置为 ",(0,r.jsx)(n.code,{children:"false"}),"，则表示不生成对应的 meta 标签。"]}),"\n",(0,r.jsxs)(n.p,{children:["比如移除 Rsbuild 预设的 ",(0,r.jsx)(n.code,{children:"viewport"}),"："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export default {\n  html: {\n    meta: {\n      viewport: false,\n    },\n  },\n};\n"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}let t=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["zh%2Fconfig%2Fhtml%2Fmeta.mdx"]={toc:[{text:"String 类型",id:"string-类型",depth:2},{text:"Object 类型",id:"object-类型",depth:2},{text:"函数用法",id:"函数用法",depth:2},{text:"移除默认值",id:"移除默认值",depth:2}],title:"html.meta",frontmatter:{}}}}]);