"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["4080"],{82244:function(e,n,s){s.r(n),s.d(n,{default:function(){return i}});var r=s(55367),a=s(26971);function l(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",p:"p",div:"div",h2:"h2"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"resolvealias",children:["resolve.alias",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#resolvealias",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"类型："})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Alias = Record<string, string | false | (string | false)[]> | Function;\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"默认值："})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const defaultAlias = {\n  '@swc/helpers': path.dirname(require.resolve('@swc/helpers/package.json')),\n};\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"版本："})," ",(0,r.jsx)(n.code,{children:">=1.1.7"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["设置文件引用的别名，对应 Rspack 的 ",(0,r.jsx)(n.a,{href:"https://rspack.dev/zh/config/resolve#resolvealias",target:"_blank",rel:"noopener noreferrer",children:"resolve.alias"})," 配置。"]}),"\n",(0,r.jsxs)(n.p,{children:["对于 TypeScript 项目，你只需要在 ",(0,r.jsx)(n.code,{children:"tsconfig.json"})," 中配置 ",(0,r.jsx)(n.a,{href:"https://typescriptlang.org/tsconfig#paths",target:"_blank",rel:"noopener noreferrer",children:"compilerOptions.paths"})," 即可，Rsbuild 会自动识别它，不需要额外配置 ",(0,r.jsx)(n.code,{children:"resolve.alias"})," 字段，详见 ",(0,r.jsx)(n.a,{href:"/guide/advanced/alias",children:"「路径别名」"}),"。"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsxs)(n.p,{children:["在 Rsbuild 1.1.7 之前的版本，你可以使用 ",(0,r.jsx)(n.code,{children:"source.alias"})," 来设置 alias，但该字段将在下一个大版本中被移除。\n"]})})]}),"\n",(0,r.jsxs)(n.h2,{id:"object-类型",children:["Object 类型",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#object-类型",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"alias"})," 的值可以定义为 Object 类型，其中的相对路径会自动被 Rsbuild 转换为绝对路径。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  resolve: {\n    alias: {\n      '@common': './src/common',\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["以上配置完成后，如果你在代码中引用 ",(0,r.jsx)(n.code,{children:"@common/Foo.tsx"}),", 则会映射到 ",(0,r.jsx)(n.code,{children:"<project>/src/common/Foo.tsx"})," 路径上。"]}),"\n",(0,r.jsxs)(n.h2,{id:"function-类型",children:["Function 类型",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#function-类型",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"alias"})," 的值定义为函数时，可以接受预设的 alias 对象，并对其进行修改。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  resolve: {\n    alias: (alias) => {\n      alias['@common'] = './src/common';\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["如果你需要移除 Rsbuild 内置的 ",(0,r.jsx)(n.code,{children:"@swc/helpers"})," 别名，可以在函数中删除它："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  resolve: {\n    alias: (alias) => {\n      delete alias['@swc/helpers'];\n    },\n  },\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"你也可以在函数中返回一个新对象作为最终结果，新对象会覆盖预设的 alias 对象。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  resolve: {\n    alias: (alias) => {\n      return {\n        '@common': './src/common',\n      };\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"基于-environment-设置",children:["基于 environment 设置",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#基于-environment-设置",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["当你面向多个 ",(0,r.jsx)(n.a,{href:"/config/environments",children:"environments"})," 构建时，可以为每个 environment 设置不同的 alias："]}),"\n",(0,r.jsxs)(n.p,{children:["比如为 ",(0,r.jsx)(n.code,{children:"web"})," 和 ",(0,r.jsx)(n.code,{children:"node"})," 环境设置不同的 alias："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export default {\n  environments: {\n    web: {\n      resolve: {\n        alias: {\n          '@common': './src/web/common',\n        },\n      },\n      output: {\n        target: 'web',\n      },\n    },\n    node: {\n      resolve: {\n        alias: {\n          '@common': './src/node/common',\n        },\n      },\n      output: {\n        target: 'node',\n      },\n    },\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"精确匹配",children:["精确匹配",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#精确匹配",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["默认情况，",(0,r.jsx)(n.code,{children:"resolve.alias"})," 会自动匹配子路径，比如以下配置："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import path from 'node:path';\n\nexport default {\n  resolve: {\n    alias: {\n      '@common': './src/common',\n    },\n  },\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"它的匹配结果如下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import a from '@common'; // 解析为 `./src/common`\nimport b from '@common/util'; // 解析为 `./src/common/util`\n"})}),"\n",(0,r.jsxs)(n.p,{children:["你可以添加 ",(0,r.jsx)(n.code,{children:"$"})," 符号来开启精确匹配，开启后将不会自动匹配子路径。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import path from 'node:path';\n\nexport default {\n  resolve: {\n    alias: {\n      '@common$': './src/common',\n    },\n  },\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"它的匹配结果如下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import a from '@common'; // 解析为 `./src/common`\nimport b from '@common/util'; // 保持 `@common/util` 不变\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"处理-npm-包",children:["处理 npm 包",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#处理-npm-包",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["你可以使用 ",(0,r.jsx)(n.code,{children:"alias"})," 将某个 npm 包指向统一的目录。"]}),"\n",(0,r.jsxs)(n.p,{children:["比如项目中安装了多份 ",(0,r.jsx)(n.code,{children:"react"}),"，你可以将 ",(0,r.jsx)(n.code,{children:"react"})," 统一指向根目录的 ",(0,r.jsx)(n.code,{children:"node_modules"})," 中安装的版本，避免出现打包多份 React 代码的问题。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import path from 'node:path';\n\nexport default {\n  resolve: {\n    alias: {\n      react: path.resolve(__dirname, './node_modules/react'),\n    },\n  },\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"当你在使用 alias 处理 npm 包时，请留意项目中是否使用了这个包不同的 major 版本。"}),"\n",(0,r.jsx)(n.p,{children:"比如你的项目中某个模块或 npm 依赖使用了 React 19 的 API，如果你将 React alias 到 17 版本，就会导致该模块无法引用到 React 19 的 API，导致代码异常。"}),"\n",(0,r.jsxs)(n.h2,{id:"处理-loader",children:["处理 Loader",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#处理-loader",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"resolve.alias"})," 不支持为 loader 设置别名。如果你需要为 loader 设置别名，可以使用 Rspack 的 ",(0,r.jsx)(n.a,{href:"https://rspack.dev/zh/config/resolve-loader",target:"_blank",rel:"noopener noreferrer",children:"resolveLoader"})," 配置项。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export default {\n  tools: {\n    rspack: {\n      resolveLoader: {\n        alias: {\n          'amazing-loader': require.resolve('path-to-your-amazing-loader'),\n        },\n      },\n    },\n  },\n};\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}let i=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["zh%2Fconfig%2Fresolve%2Falias.mdx"]={toc:[{text:"Object 类型",id:"object-类型",depth:2},{text:"Function 类型",id:"function-类型",depth:2},{text:"基于 environment 设置",id:"基于-environment-设置",depth:2},{text:"精确匹配",id:"精确匹配",depth:2},{text:"处理 npm 包",id:"处理-npm-包",depth:2},{text:"处理 Loader",id:"处理-loader",depth:2}],title:"resolve.alias",frontmatter:{}}}}]);