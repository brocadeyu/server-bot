"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["7000"],{94581:function(e,n,s){s.r(n),s.d(n,{default:function(){return r}});var c=s(55367),i=s(26971);function a(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",p:"p",blockquote:"blockquote",h2:"h2",div:"div"},(0,i.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"outputfilename",children:["output.filename",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#outputfilename",children:"#"})]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.strong,{children:"类型："})}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"type FilenameConfig = {\n  html?: string;\n  js?:\n    | string\n    | ((\n        pathData: Rspack.PathData,\n        assetInfo: Rspack.JsAssetInfo | undefined,\n      ) => string);\n  css?:\n    | string\n    | ((\n        pathData: Rspack.PathData,\n        assetInfo: Rspack.JsAssetInfo | undefined,\n      ) => string);\n  svg?: string;\n  font?: string;\n  image?: string;\n  media?: string;\n};\n"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.strong,{children:"默认值："})}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-js",children:"// 开发模式构建\nconst devDefaultFilename = {\n  html: '[name].html',\n  js: '[name].js',\n  css: '[name].css',\n  svg: '[name].[contenthash:8].svg',\n  font: '[name].[contenthash:8][ext]',\n  image: '[name].[contenthash:8][ext]',\n  media: '[name].[contenthash:8][ext]',\n  assets: '[name].[contenthash:8][ext]',\n};\n\n// 生产模式构建\nconst prodDefaultFilename = {\n  html: '[name].html',\n  js: output.target === 'node' ? '[name].js' : '[name].[contenthash:8].js',\n  css: '[name].[contenthash:8].css',\n  svg: '[name].[contenthash:8].svg',\n  font: '[name].[contenthash:8][ext]',\n  image: '[name].[contenthash:8][ext]',\n  media: '[name].[contenthash:8][ext]',\n  assets: '[name].[contenthash:8][ext]',\n};\n"})}),"\n",(0,c.jsx)(n.p,{children:"设置构建产物的名称。"}),"\n",(0,c.jsxs)(n.p,{children:["在生产模式构建后，Rsbuild 会自动在文件名中间添加 hash 值，如果不需要添加，可以将 ",(0,c.jsx)(n.a,{href:"/config/output/filename-hash",children:"output.filenameHash"})," 设置为 ",(0,c.jsx)(n.code,{children:"false"})," 来禁用该行为。"]}),"\n",(0,c.jsx)(n.p,{children:"下面是各个文件类型的说明："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"html"}),"：表示 HTML 文件的名称。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"js"}),"：表示 JavaScript 文件的名称。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"css"}),"：表示 CSS 样式文件的名称。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"svg"}),"：表示 SVG 图片的名称。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"font"}),"：表示字体文件的名称。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"image"}),"：表示非 SVG 图片的名称。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"media"}),"：表示视频等媒体资源的名称。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"assets"}),"：其他静态资源的名称。例如 ",(0,c.jsx)(n.a,{href:"/guide/basic/static-assets#%E6%89%A9%E5%B1%95%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%B1%BB%E5%9E%8B",children:"扩展静态资源类型"})," 中定义的资源。"]}),"\n"]}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["查看 ",(0,c.jsx)(n.a,{href:"/guide/basic/output-files",children:"构建产物目录"})," 了解更多。"]}),"\n"]}),"\n",(0,c.jsxs)(n.h2,{id:"示例",children:["示例",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#示例",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["修改 JavaScript 文件的名称为 ",(0,c.jsx)(n.code,{children:"[name]_script.js"}),"："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-js",children:"export default {\n  output: {\n    filename: {\n      js:\n        process.env.NODE_ENV === 'production'\n          ? '[name]_script.[contenthash:8].js'\n          : '[name]_script.js',\n    },\n  },\n};\n"})}),"\n",(0,c.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,c.jsx)(n.div,{className:"rspress-directive-title",children:"文件名中的 hash 值"}),(0,c.jsxs)(n.div,{className:"rspress-directive-content",children:[(0,c.jsxs)(n.p,{children:["通常来说，Rsbuild 只会在生产模式下设置文件名的 hash 值（即 ",(0,c.jsx)(n.code,{children:"process.env.NODE_ENV === 'production'"})," 时）。"]}),"\n",(0,c.jsx)(n.p,{children:"如果你在开发模式下设置了文件名的 hash，那么可能会导致热更新不生效（尤其是 CSS 文件）。这是因为每次文件内容变化时，都会引起 hash 变化，导致打包工具无法读取到最新的文件内容。\n"})]})]}),"\n",(0,c.jsxs)(n.h2,{id:"模板字符串",children:["模板字符串",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#模板字符串",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:["在 ",(0,c.jsx)(n.code,{children:"output.filename"})," 的值中，你可以使用模板字符串来动态生成文件名。"]}),"\n",(0,c.jsx)(n.p,{children:"常用的模板字符串有："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"[name]"})," - entry 名称，即 ",(0,c.jsx)(n.a,{href:"/config/source/entry",children:"source.entry"})," 的 key。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"[contenthash]"})," - 基于文件内容生成的 hash 值。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"[contenthash:<length>]"})," - 基于文件内容生成的 hash 值，并指定 hash 长度。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"[ext]"})," - 文件后缀名，包含点号。"]}),"\n"]}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["更多模板字符串可以参考 ",(0,c.jsx)(n.a,{href:"https://rspack.dev/config/output#template-string",target:"_blank",rel:"noopener noreferrer",children:"Rspack - Template String"}),"。"]}),"\n"]}),"\n",(0,c.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,c.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,c.jsxs)(n.div,{className:"rspress-directive-content",children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"filename.html"})," 只能使用部分模板字符串，如 ",(0,c.jsx)(n.code,{children:"[name]"}),"、",(0,c.jsx)(n.code,{children:"[contenthash:<length>]"}),"。"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"filename.js"})," 和 ",(0,c.jsx)(n.code,{children:"filename.css"})," 不支持 ",(0,c.jsx)(n.code,{children:"[ext]"}),"。"]}),"\n"]}),"\n"]})]}),"\n",(0,c.jsxs)(n.h2,{id:"异步模块文件名",children:["异步模块文件名",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#异步模块文件名",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"当你在代码中通过 dynamic import 的方式引入模块时，该模块会被单独打包成一个文件，它默认的命名规则如下："}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["在开发模式下会基于模块路径生成名称，比如 ",(0,c.jsx)(n.code,{children:"dist/static/js/async/src_add_ts.js"}),"。"]}),"\n",(0,c.jsxs)(n.li,{children:["在生产模式下会是一个随机的数字 id，比如 ",(0,c.jsx)(n.code,{children:"dist/static/js/async/798.27e3083e.js"}),"，这是为了避免在生产模式中泄露源代码的路径，同时字符数也更少。"]}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-js",meta:'title="src/index.ts"',children:"const { add } = await import('./add.ts');\n"})}),"\n",(0,c.jsxs)(n.p,{children:["如果你希望为异步模块指定一个固定的名称，可以通过 Rspack 提供的 ",(0,c.jsx)(n.a,{href:"https://rspack.dev/api/modules#magic-comments",target:"_blank",rel:"noopener noreferrer",children:"magic comments"})," 来实现，通过 ",(0,c.jsx)(n.code,{children:"webpackChunkName"})," 指定模块名称："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-js",meta:'title="src/index.ts"',children:"const { add } = await import(\n  /* webpackChunkName: \"my-chunk-name\" */ './add.ts'\n);\n"})}),"\n",(0,c.jsxs)(n.p,{children:["通过以上写法指定模块名称后，生成的文件会是 ",(0,c.jsx)(n.code,{children:"dist/static/js/async/my-chunk-name.js"}),"。"]}),"\n",(0,c.jsxs)(n.h2,{id:"使用函数",children:["使用函数",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用函数",children:"#"})]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"output.filename.js"})," 和 ",(0,c.jsx)(n.code,{children:"output.filename.css"})," 可以传入一个函数，这允许你根据文件信息动态生成文件名："]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-js",children:"export default {\n  output: {\n    filename: {\n      js: (pathData, assetInfo) => {\n        console.log(pathData); // 你可以在这里查看 pathData 的内容\n\n        if (pathData.chunk?.name === 'index') {\n          const isProd = process.env.NODE_ENV === 'production';\n          return isProd ? '[name].[contenthash:8].js' : '[name].js';\n        }\n\n        return '/some-path/[name].js';\n      },\n      css: (pathData, assetInfo) => {\n        if (pathData.chunk?.name === 'index') {\n          const isProd = process.env.NODE_ENV === 'production';\n          return isProd ? '[name].[contenthash:8].css' : '[name].css';\n        }\n\n        return '/some-path/[name].css';\n      },\n    },\n  },\n};\n"})}),"\n",(0,c.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,c.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,c.jsx)(n.div,{className:"rspress-directive-content",children:(0,c.jsxs)(n.p,{children:["除了 ",(0,c.jsx)(n.code,{children:"output.filename.js"})," 以外，其他类型的文件目前暂不支持使用函数。\n"]})})]}),"\n",(0,c.jsxs)(n.h2,{id:"query-hash",children:["Query Hash",(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#query-hash",children:"#"})]}),"\n",(0,c.jsx)(n.p,{children:"如果你需要在资源的 URL query 上生成 hash 值，可以参考以下配置："}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-js",children:"const isProd = process.env.NODE_ENV === 'production';\n\nexport default {\n  output: {\n    filename: {\n      js: isProd ? '[name].js?v=[contenthash:8]' : `[name].js`,\n      css: isProd ? '[name].css?v=[contenthash:8]' : `[name].css`,\n    },\n  },\n};\n"})}),"\n",(0,c.jsx)(n.p,{children:"在这种情况下，JS、CSS 的文件名将不包含 hash，而 HTML 中的 URL 将包含 hash query。"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-html",children:'<!doctype html>\n<html>\n  <head>\n    <script defer src="/static/js/index.js?v=b8565050"><\/script>\n    <link href="/static/css/index.css?v=02d157ca" rel="stylesheet" />\n  </head>\n</html>\n'})})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}let r=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["zh%2Fconfig%2Foutput%2Ffilename.mdx"]={toc:[{text:"示例",id:"示例",depth:2},{text:"模板字符串",id:"模板字符串",depth:2},{text:"异步模块文件名",id:"异步模块文件名",depth:2},{text:"使用函数",id:"使用函数",depth:2},{text:"Query Hash",id:"query-hash",depth:2}],title:"output.filename",frontmatter:{}}}}]);