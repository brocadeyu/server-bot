"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["3462"],{37680:function(e,n,i){i.r(n),i.d(n,{default:function(){return c}});var r=i(55367),s=i(26971);function o(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",ul:"ul",li:"li",div:"div",h3:"h3",strong:"strong"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"configure-rsbuild",children:["Configure Rsbuild",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configure-rsbuild",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Rsbuild provides a wide range of configuration options and sets a common default value for each option, which can meet the requirements of most use cases. Therefore, in most cases, you don't need to declare any Rsbuild configurations and can use it out of the box."}),"\n",(0,r.jsx)(n.p,{children:"If you need to customize build behaviors, you can use these configuration options."}),"\n",(0,r.jsxs)(n.h2,{id:"configuration-structure",children:["Configuration Structure",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configuration-structure",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"The configuration structure of Rsbuild looks like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",meta:'title="rsbuild.config.mjs"',children:"export default {\n  plugins: [\n    // configure Rsbuild plugins\n  ],\n  dev: {\n    // options for local development\n  },\n  html: {\n    // options for HTML generation\n  },\n  tools: {\n    // options for the low-level tools\n  },\n  output: {\n    // options for build outputs\n  },\n  resolve: {\n    // options for module resolution\n  },\n  source: {\n    // options for input source code\n  },\n  server: {\n    // options for the Rsbuild Server,\n    // will take effect during local development and preview\n  },\n  security: {\n    // options for Web security\n  },\n  performance: {\n    // options for build performance and runtime performance\n  },\n  moduleFederation: {\n    // options for module federation\n  },\n  environments: {\n    // define different Rsbuild configurations for each environment\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can find detailed descriptions of all configs on the ",(0,r.jsx)(n.a,{href:"/config/",children:"Configure Overview"})," page."]}),"\n",(0,r.jsxs)(n.h2,{id:"configuration-file",children:["Configuration File",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configuration-file",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"When you use the CLI of Rsbuild, Rsbuild will automatically read the configuration file in the root directory of the current project and resolve it in the following order:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"rsbuild.config.mjs"}),"\n",(0,r.jsx)(n.li,{children:"rsbuild.config.ts"}),"\n",(0,r.jsx)(n.li,{children:"rsbuild.config.js"}),"\n",(0,r.jsx)(n.li,{children:"rsbuild.config.cjs"}),"\n",(0,r.jsx)(n.li,{children:"rsbuild.config.mts"}),"\n",(0,r.jsx)(n.li,{children:"rsbuild.config.cts"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["We recommend using the ",(0,r.jsx)(n.code,{children:".mjs"})," or ",(0,r.jsx)(n.code,{children:".ts"})," format for the configuration file and importing the ",(0,r.jsx)(n.code,{children:"defineConfig"})," utility function from ",(0,r.jsx)(n.code,{children:"@rsbuild/core"}),". It provides friendly TypeScript type hints and autocompletion, which can help you avoid errors in the configuration."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, in ",(0,r.jsx)(n.code,{children:"rsbuild.config.ts"}),", you can define the Rsbuild ",(0,r.jsx)(n.a,{href:"/config/resolve/alias",children:"resolve.alias"})," configuration:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\n\nexport default defineConfig({\n  resolve: {\n    alias: {\n      '@common': './src/common',\n    },\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If you are developing a non-TypeScript project, you can use the ",(0,r.jsx)(n.code,{children:".mjs"})," format for the configuration file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",meta:'title="rsbuild.config.mjs"',children:"import { defineConfig } from '@rsbuild/core';\n\nexport default defineConfig({\n  resolve: {\n    alias: (opts) => {\n      opts['@common'] = './src/common';\n    },\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsxs)(n.p,{children:["When you use the ",(0,r.jsx)(n.code,{children:".ts"}),", ",(0,r.jsx)(n.code,{children:".mts"}),", and ",(0,r.jsx)(n.code,{children:".cts"})," extensions, Rsbuild will use ",(0,r.jsx)(n.a,{href:"https://github.com/unjs/jiti",target:"_blank",rel:"noopener noreferrer",children:"jiti"})," to load configuration files, providing interoperability between ESM and CommonJS. The behavior of module resolution differs slightly from the native behavior of Node.js.\n"]})})]}),"\n",(0,r.jsxs)(n.h2,{id:"specify-config-file",children:["Specify Config File",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#specify-config-file",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Rsbuild CLI uses the ",(0,r.jsx)(n.code,{children:"--config"})," option to specify the config file, which can be set to a relative path or an absolute path."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if you need to use the ",(0,r.jsx)(n.code,{children:"rsbuild.prod.config.mjs"})," file when running ",(0,r.jsx)(n.code,{children:"build"}),", you can add the following scripts to ",(0,r.jsx)(n.code,{children:"package.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "scripts": {\n    "build": "rsbuild build --config rsbuild.prod.config.mjs"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You can also abbreviate the ",(0,r.jsx)(n.code,{children:"--config"})," option to ",(0,r.jsx)(n.code,{children:"-c"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"rsbuild build -c rsbuild.prod.config.mjs\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"using-environment-variables",children:["Using Environment Variables",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#using-environment-variables",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["In the configuration file, you can use Node.js environment variables such as ",(0,r.jsx)(n.code,{children:"process.env.NODE_ENV"})," to dynamically set different configurations:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\n\nexport default defineConfig({\n  resolve: {\n    alias: {\n      '@request':\n        process.env.NODE_ENV === 'development'\n          ? './src/request.dev.js'\n          : './src/request.prod.js',\n    },\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"export-function",children:["Export Function",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#export-function",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Rsbuild supports the export of a function in the config file, where you can dynamically compute the config and return it to Rsbuild."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",meta:'title="rsbuild.config.js"',children:"import { defineConfig } from '@rsbuild/core';\n\nexport default defineConfig(({ env, command, envMode }) => ({\n  resolve: {\n    alias: {\n      '@foo': env === 'development' ? './src/foo.dev.ts' : './src/foo.prod.ts',\n    },\n  },\n}));\n"})}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsx)(n.p,{children:"The exported config function must provide a return value. If you do not need to return any config, you can return an empty object."})})]}),"\n",(0,r.jsx)(n.p,{children:"The function accepts the following parameters:"}),"\n",(0,r.jsxs)(n.h3,{id:"env",children:["env",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#env",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default:"})," ",(0,r.jsx)(n.code,{children:"process.env.NODE_ENV"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The current running environment."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["When running ",(0,r.jsx)(n.code,{children:"rsbuild dev"}),", the default value of env is ",(0,r.jsx)(n.code,{children:"development"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["When running ",(0,r.jsx)(n.code,{children:"rsbuild build"})," or ",(0,r.jsx)(n.code,{children:"rsbuild preview"}),", the default value of env is ",(0,r.jsx)(n.code,{children:"production"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"envmode",children:["envMode",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#envmode",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default:"})," ",(0,r.jsx)(n.code,{children:"process.env.NODE_ENV"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The current value of the CLI parameter ",(0,r.jsx)(n.code,{children:"--env-mode"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, when running ",(0,r.jsx)(n.code,{children:"rsbuild build --env-mode test"}),", the value of ",(0,r.jsx)(n.code,{children:"envMode"})," is ",(0,r.jsx)(n.code,{children:"test"}),"."]}),"\n",(0,r.jsxs)(n.h3,{id:"command",children:["command",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#command",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The current running CLI command, such as ",(0,r.jsx)(n.code,{children:"dev"}),", ",(0,r.jsx)(n.code,{children:"build"}),", ",(0,r.jsx)(n.code,{children:"preview"}),"."]}),"\n",(0,r.jsxs)(n.h2,{id:"export-async-function",children:["Export Async Function",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#export-async-function",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Rsbuild also supports the export of an async function in the config file, where you can perform some async operations:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",meta:'title="rsbuild.config.js"',children:"import { defineConfig } from '@rsbuild/core';\n\nexport default defineConfig(async ({ env, command }) => {\n  const result = await someAsyncFunction();\n\n  return {\n    html: {\n      title: result,\n    },\n  };\n});\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"merge-configurations",children:["Merge Configurations",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#merge-configurations",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ",(0,r.jsx)(n.a,{href:"/api/javascript-api/core#mergersbuildconfig",children:"mergeRsbuildConfig"})," function exported by ",(0,r.jsx)(n.code,{children:"@rsbuild/core"})," to merge multiple configurations."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig, mergeRsbuildConfig } from '@rsbuild/core';\n\nconst config1 = defineConfig({\n  dev: { port: '3000' },\n});\nconst config2 = defineConfig({\n  dev: { port: '3001' },\n});\n\n// { dev: { port: '3001' }\nexport default mergeRsbuildConfig(config1, config2);\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"debug-the-config",children:["Debug the config",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#debug-the-config",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["You can enable Rsbuild's debug mode by adding the ",(0,r.jsx)(n.code,{children:"DEBUG=rsbuild"})," environment variable when executing a build."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"DEBUG=rsbuild pnpm dev\n"})}),"\n",(0,r.jsx)(n.p,{children:"In debug mode, Rsbuild will write the Rsbuild config to the dist directory, which is convenient for developers to view and debug."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Inspect config succeed, open the following files to view the content:\n\n   - Rsbuild Config: /Project/demo/dist/.rsbuild/rsbuild.config.mjs\n   - Rspack Config (web): /Project/demo/dist/.rsbuild/rspack.config.web.mjs\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Open the generated ",(0,r.jsx)(n.code,{children:"/dist/.rsbuild/rsbuild.config.mjs"})," file to see the complete content of the Rsbuild config."]}),"\n",(0,r.jsxs)(n.p,{children:["For a complete introduction to debug mode, see the ",(0,r.jsx)(n.a,{href:"/guide/debug/debug-mode",children:"Debug Mode"})," chapter."]})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}let c=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["en%2Fguide%2Fbasic%2Fconfigure-rsbuild.mdx"]={toc:[{text:"Configuration Structure",id:"configuration-structure",depth:2},{text:"Configuration File",id:"configuration-file",depth:2},{text:"Specify Config File",id:"specify-config-file",depth:2},{text:"Using Environment Variables",id:"using-environment-variables",depth:2},{text:"Export Function",id:"export-function",depth:2},{text:"env",id:"env",depth:3},{text:"envMode",id:"envmode",depth:3},{text:"command",id:"command",depth:3},{text:"Export Async Function",id:"export-async-function",depth:2},{text:"Merge Configurations",id:"merge-configurations",depth:2},{text:"Debug the config",id:"debug-the-config",depth:2}],title:"Configure Rsbuild",frontmatter:{}}}}]);