"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["1395"],{85682:function(e,n,s){s.r(n),s.d(n,{default:function(){return h}});var r=s(55367),l=s(26971),i=s(28855),d=s(38146);function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",code:"code",pre:"pre",ul:"ul",li:"li",strong:"strong",h4:"h4",div:"div",h5:"h5",ol:"ol"},(0,l.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"babel-插件",children:["Babel 插件",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#babel-插件",children:"#"})]}),"\n","\n",(0,r.jsx)(i.ZB,{href:"https://github.com/web-infra-dev/rsbuild/tree/main/packages/plugin-babel"}),"\n",(0,r.jsx)(n.p,{children:"Rsbuild 默认使用 SWC 编译，当内置的功能无法满足诉求、需要添加一些 Babel presets 或 plugins 进行额外处理时，你可以使用 Rsbuild 的 Babel 插件。"}),"\n",(0,r.jsxs)(n.h2,{id:"快速开始",children:["快速开始",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#快速开始",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"安装插件",children:["安装插件",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#安装插件",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"你可以通过如下的命令安装插件:"}),"\n","\n",(0,r.jsx)(d.PackageManagerTabs,{command:"add @rsbuild/plugin-babel -D"}),"\n",(0,r.jsxs)(n.h3,{id:"注册插件",children:["注册插件",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#注册插件",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["你可以在 ",(0,r.jsx)(n.code,{children:"rsbuild.config.ts"})," 文件中注册插件："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { pluginBabel } from '@rsbuild/plugin-babel';\n\nexport default {\n  plugins: [pluginBabel()],\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"编译缓存",children:["编译缓存",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#编译缓存",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"使用 Babel 插件后，Rsbuild 除了执行默认的 SWC 转译，还会执行 Babel 转译，存在额外的编译开销，这可能导致构建速度明显降低。"}),"\n",(0,r.jsxs)(n.p,{children:["为了降低 Babel 转译的开销，",(0,r.jsx)(n.code,{children:"@rsbuild/plugin-babel"})," 默认开启了 Babel 编译缓存。如果你希望禁用缓存，可以将 ",(0,r.jsx)(n.code,{children:"performance.buildCache"})," 设置为 ",(0,r.jsx)(n.code,{children:"false"}),"："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"export default {\n  performance: {\n    buildCache: false,\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"选项",children:["选项",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#选项",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"babelloaderoptions",children:["babelLoaderOptions",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#babelloaderoptions",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["传递给 ",(0,r.jsx)(n.code,{children:"babel-loader"})," 的选项，请查阅 ",(0,r.jsx)(n.a,{href:"https://github.com/babel/babel-loader",target:"_blank",rel:"noopener noreferrer",children:"babel-loader 文档"})," 来了解具体用法。"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"Object | Function"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"默认值："})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const defaultOptions = {\n  babelrc: false,\n  compact: false,\n  configFile: false,\n  plugins: [\n    ['@babel/plugin-proposal-decorators', config.source.decorators],\n    ...(isLegacyDecorators ? ['@babel/plugin-transform-class-properties'] : []),\n  ],\n  presets: [\n    [\n      '@babel/preset-typescript',\n      {\n        allExtensions: true,\n        allowDeclareFields: true,\n        allowNamespaces: true,\n        isTSX: true,\n        optimizeConstEnums: true,\n      },\n    ],\n  ],\n};\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"function-类型",children:["Function 类型",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#function-类型",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["当配置项为 Function 类型时，默认 Babel 配置会作为第一个参数传入，你可以直接修改配置对象，也可以返回一个对象作为最终的 ",(0,r.jsx)(n.code,{children:"babel-loader"})," 配置。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"pluginBabel({\n  babelLoaderOptions: (config) => {\n    // 添加一个插件，比如配置某个组件库的按需引入\n    config.plugins ||= [];\n    config.plugins.push([\n      'babel-plugin-import',\n      {\n        libraryName: 'my-components',\n        libraryDirectory: 'es',\n        style: true,\n      },\n    ]);\n  },\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"函数的第二个参数提供了一些方便的工具函数，请继续阅读下方文档。"}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsxs)(n.p,{children:["以上示例仅作为参考，通常来说，你不需要手动配置 ",(0,r.jsx)(n.code,{children:"babel-plugin-import"}),"，因为 Rspack SWC 编译已支持 transformImport 能力，Rsbuild 也提供了更通用的 ",(0,r.jsx)(n.a,{href:"/config/source/transform-import",children:"source.transformImport"})," 配置。\n"]})})]}),"\n",(0,r.jsxs)(n.h4,{id:"object-类型",children:["Object 类型",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#object-类型",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["当配置项的值为 ",(0,r.jsx)(n.code,{children:"Object"})," 类型时，会与默认配置通过 ",(0,r.jsx)(n.code,{children:"Object.assign"})," 浅合并。"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive caution",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"CAUTION"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Object.assign"})," 是浅拷贝，会完全覆盖内置的 ",(0,r.jsx)(n.code,{children:"presets"})," 或 ",(0,r.jsx)(n.code,{children:"plugins"})," 数组，导致内置的 presets 或 plugins 失效，请在明确影响面的情况下再使用这种方式。\n"]})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"pluginBabel({\n  babelLoaderOptions: {\n    plugins: [\n      [\n        'babel-plugin-import',\n        {\n          libraryName: 'my-components',\n          libraryDirectory: 'es',\n          style: true,\n        },\n      ],\n    ],\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"工具函数",children:["工具函数",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#工具函数",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"配置项为 Function 类型时，第二个参数可用的工具函数如下:"}),"\n",(0,r.jsxs)(n.h5,{id:"addplugins",children:["addPlugins",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#addplugins",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"(plugins: BabelPlugin[]) => void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"添加若干个 Babel 插件。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"pluginBabel({\n  babelLoaderOptions: (config, { addPlugins }) => {\n    addPlugins([\n      [\n        'babel-plugin-import',\n        {\n          libraryName: 'my-components',\n          libraryDirectory: 'es',\n          style: true,\n        },\n      ],\n    ]);\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.h5,{id:"addpresets",children:["addPresets",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#addpresets",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"(presets: BabelPlugin[]) => void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"添加若干个 Babel 预设配置 (大多数情况下不需要增加预设)。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"pluginBabel({\n  babelLoaderOptions: (config, { addPresets }) => {\n    addPresets(['@babel/preset-env']);\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.h5,{id:"removeplugins",children:["removePlugins",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#removeplugins",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"(plugins: string | string[]) => void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"移除 Babel 插件，传入需要移除的插件名称即可，你可以传入单个字符串，也可以传入一个字符串数组。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"pluginBabel({\n  babelLoaderOptions: (config, { removePlugins }) => {\n    removePlugins('babel-plugin-import');\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.h5,{id:"removepresets",children:["removePresets",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#removepresets",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"(presets: string | string[]) => void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"移除 Babel 预设配置，传入需要移除的预设名称即可，你可以传入单个字符串，也可以传入一个字符串数组。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"pluginBabel({\n  babelLoaderOptions: (config, { removePresets }) => {\n    removePresets('@babel/preset-env');\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"include",children:["include",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#include",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"string | RegExp | (string | RegExp)[]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"默认值："})," ",(0,r.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"用于指定需要 Babel 编译的文件。"}),"\n",(0,r.jsxs)(n.p,{children:["由于 Babel 编译存在性能开销，通过 ",(0,r.jsx)(n.code,{children:"include"})," 来匹配部分文件可以减少 Babel 编译的模块数量，从而提升构建性能。"]}),"\n",(0,r.jsxs)(n.p,{children:["比如，只对 ",(0,r.jsx)(n.code,{children:".custom.js"})," 文件进行编译，并忽略 ",(0,r.jsx)(n.code,{children:"node_modules"})," 下的文件："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"pluginBabel({\n  include: /\\.custom\\.js$/,\n  // 建议 exclude node_modules 目录以提升构建性能\n  exclude: /[\\\\/]node_modules[\\\\/]/,\n});\n"})}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsxs)(n.div,{className:"rspress-directive-content",children:[(0,r.jsxs)(n.p,{children:["当你配置 ",(0,r.jsx)(n.code,{children:"include"})," 或 ",(0,r.jsx)(n.code,{children:"exclude"})," 选项时，Rsbuild 会创建一条单独的 Rspack rule 来应用 babel-loader 和 swc-loader。"]}),"\n",(0,r.jsxs)(n.p,{children:["这条单独的 rule 与 Rsbuild 内置的 SWC rule 是完全独立的，并且不会受到 ",(0,r.jsx)(n.a,{href:"/config/source/include",children:"source.include"})," 和 ",(0,r.jsx)(n.a,{href:"/config/source/exclude",children:"source.exclude"})," 的作用。\n"]})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"exclude",children:["exclude",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#exclude",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"类型："})," ",(0,r.jsx)(n.code,{children:"string | RegExp | (string | RegExp)[]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"默认值："})," ",(0,r.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"用于指定不需要 Babel 编译的文件。"}),"\n",(0,r.jsxs)(n.p,{children:["由于 Babel 编译存在性能开销，通过 ",(0,r.jsx)(n.code,{children:"exclude"})," 来排除部分文件可以减少 Babel 编译的模块数量，从而提升构建性能。"]}),"\n",(0,r.jsxs)(n.h2,{id:"调试配置",children:["调试配置",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#调试配置",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["当你通过配置项修改 ",(0,r.jsx)(n.code,{children:"babel-loader"})," 配置后，可以在 ",(0,r.jsx)(n.a,{href:"/guide/debug/debug-mode",children:"Rsbuild 调试模式"})," 下查看最终生成的配置。"]}),"\n",(0,r.jsxs)(n.p,{children:["首先通过 ",(0,r.jsx)(n.code,{children:"DEBUG=rsbuild"})," 参数开启调试模式："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 调试开发模式\nDEBUG=rsbuild pnpm dev\n\n# 调试生产模式\nDEBUG=rsbuild pnpm build\n"})}),"\n",(0,r.jsxs)(n.p,{children:["然后打开生成的 ",(0,r.jsx)(n.code,{children:"rspack.config.web.mjs"}),"，搜索 ",(0,r.jsx)(n.code,{children:"babel-loader"})," 关键词，即可看到完整的 ",(0,r.jsx)(n.code,{children:"babel-loader"})," 配置内容。"]}),"\n",(0,r.jsxs)(n.h2,{id:"常见问题",children:["常见问题",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#常见问题",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"编译卡死",children:["编译卡死",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#编译卡死",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"在使用 Babel 插件后，如果编译进度条卡死，但终端无 Error 日志时，通常是因为编译过程中出现了异常。在某些情况下，当 Error 被 webpack 或其他模块捕获后，错误日志不会被正确输出。最为常见的场景是 Babel 配置出现异常，抛出 Error 后被 webpack 捕获，而 webpack 在个别情况下吞掉了 Error。"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"解决方法："})}),"\n",(0,r.jsx)(n.p,{children:"如果你修改 Babel 配置后出现此问题，建议检查是否有以下错误用法："}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"配置了一个不存在的 plugin 或 preset，可能是名称拼写错误，或是未正确安装。"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// 错误示例\npluginBabel({\n  babelLoaderOptions: (config, { addPlugins }) => {\n    // 该插件名称错误，或者未安装\n    addPlugins('babel-plugin-not-exists');\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"是否配置了多个 babel-plugin-import，但是没有在数组的第三项声明每一个 babel-plugin-import 的名称。"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// 错误示例\npluginBabel({\n  babelLoaderOptions: (config, { addPlugins }) => {\n    addPlugins([\n      ['babel-plugin-import', { libraryName: 'antd', libraryDirectory: 'es' }],\n      [\n        'babel-plugin-import',\n        { libraryName: 'antd-mobile', libraryDirectory: 'es' },\n      ],\n    ]);\n  },\n});\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// 正确示例\npluginBabel({\n  babelLoaderOptions: (config, { addPlugins }) => {\n    addPlugins([\n      [\n        'babel-plugin-import',\n        { libraryName: 'antd', libraryDirectory: 'es' },\n        'antd',\n      ],\n      [\n        'babel-plugin-import',\n        { libraryName: 'antd-mobile', libraryDirectory: 'es' },\n        'antd-mobile',\n      ],\n    ]);\n  },\n});\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}let h=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["zh%2Fplugins%2Flist%2Fplugin-babel.mdx"]={toc:[{text:"快速开始",id:"快速开始",depth:2},{text:"安装插件",id:"安装插件",depth:3},{text:"注册插件",id:"注册插件",depth:3},{text:"编译缓存",id:"编译缓存",depth:2},{text:"选项",id:"选项",depth:2},{text:"babelLoaderOptions",id:"babelloaderoptions",depth:3},{text:"Function 类型",id:"function-类型",depth:4},{text:"Object 类型",id:"object-类型",depth:4},{text:"工具函数",id:"工具函数",depth:4},{text:"include",id:"include",depth:3},{text:"exclude",id:"exclude",depth:3},{text:"调试配置",id:"调试配置",depth:2},{text:"常见问题",id:"常见问题",depth:2},{text:"编译卡死",id:"编译卡死",depth:3}],title:"Babel 插件",frontmatter:{}}}}]);