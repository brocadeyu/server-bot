"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["694"],{32289:function(e,n,i){i.r(n),i.d(n,{default:function(){return a}});var s=i(55367),t=i(26971),r=i(38146);function l(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",code:"code",pre:"pre",div:"div",h3:"h3",ul:"ul",li:"li",blockquote:"blockquote"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"use-tailwind-css",children:["Use Tailwind CSS",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#use-tailwind-css",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://tailwindcss.com/",target:"_blank",rel:"noopener noreferrer",children:"Tailwind CSS"})," is a CSS framework and design system based on utility class, which can quickly add common styles to components, and support flexible extension of theme styles."]}),"\n",(0,s.jsx)(n.p,{children:"You can integrate Tailwind CSS in Rsbuild via PostCSS plugins."}),"\n",(0,s.jsxs)(n.h2,{id:"installing-tailwind-css",children:["Installing Tailwind CSS",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#installing-tailwind-css",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Since Rsbuild has built-in support for ",(0,s.jsx)(n.code,{children:"postcss"})," and ",(0,s.jsx)(n.code,{children:"autoprefixer"}),", you only need to install ",(0,s.jsx)(n.code,{children:"tailwindcss"})," and there is no need to install other npm packages:"]}),"\n","\n",(0,s.jsx)(r.PackageManagerTabs,{command:"add tailwindcss -D"}),"\n",(0,s.jsxs)(n.h2,{id:"configuring-postcss",children:["Configuring PostCSS",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configuring-postcss",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["You can register the ",(0,s.jsx)(n.code,{children:"tailwindcss"})," PostCSS plugin through ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/postcss-loader#config",target:"_blank",rel:"noopener noreferrer",children:"postcss.config.cjs"})," or ",(0,s.jsx)(n.a,{href:"/config/tools/postcss",children:"tools.postcss"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:'title="postcss.config.cjs"',children:"module.exports = {\n  plugins: {\n    tailwindcss: {},\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,s.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,s.jsx)(n.div,{className:"rspress-directive-content",children:(0,s.jsxs)(n.p,{children:["Rsbuild has built-in ",(0,s.jsx)(n.a,{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer",children:"autoprefixer"}),", so you only need to register the ",(0,s.jsx)(n.code,{children:"tailwindcss"})," plugin.\n"]})})]}),"\n",(0,s.jsxs)(n.h2,{id:"configuring-tailwind-css",children:["Configuring Tailwind CSS",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configuring-tailwind-css",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:"tailwind.config.js"})," file in the root directory of your project and add the following content:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:'title="tailwind.config.js"',children:"/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: ['./src/**/*.{html,js,ts,jsx,tsx}'],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n};\n"})}),"\n",(0,s.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,s.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,s.jsx)(n.div,{className:"rspress-directive-content",children:(0,s.jsx)(n.p,{children:"The above configuration is for reference only and can be modified to suit the needs of your project. For example, non-TypeScript projects do not need to include ts and tsx files."})})]}),"\n",(0,s.jsxs)(n.p,{children:["It should be noted that the ",(0,s.jsx)(n.code,{children:"content"})," option should include the paths to all source files that contain Tailwind class names. For details, please refer to ",(0,s.jsx)(n.a,{href:"https://tailwindcss.com/docs/content-configuration",target:"_blank",rel:"noopener noreferrer",children:"tailwindcss - Content Configuration"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:'title="tailwind.config.js"',children:"/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/**/*.{html,js,ts,jsx,tsx}',\n    '../../lib1/src/**/*.{js,ts,jsx,tsx}',\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"other-configuration-methods",children:["Other Configuration Methods",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#other-configuration-methods",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You can directly pass the Tailwind CSS configuration to ",(0,s.jsx)(n.code,{children:"postcss.config.cjs"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:'title="postcss.config.cjs"',children:"module.exports = {\n  plugins: {\n    tailwindcss: {\n      content: ['./src/**/*.{html,js,ts,jsx,tsx}'],\n      // ...other options\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You can also set the Tailwind CSS configuration through ",(0,s.jsx)(n.a,{href:"/config/tools/postcss",children:"tools.postcss"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:'title="rsbuild.config.js"',children:"import tailwindcss from 'tailwindcss';\n\nexport default {\n  tools: {\n    postcss: {\n      plugins: [\n        tailwindcss({\n          content: ['./src/**/*.{html,js,ts,jsx,tsx}'],\n          // ...other options\n        }),\n      ],\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["But we recommend placing the Tailwind CSS configuration in ",(0,s.jsx)(n.code,{children:"tailwind.config.*"})," because other methods may cause the Tailwind CSS build performance to degrade, refer to ",(0,s.jsx)(n.a,{href:"https://github.com/tailwindlabs/tailwindcss/issues/14229",target:"_blank",rel:"noopener noreferrer",children:"tailwindcss/issues/14229"}),"."]}),"\n",(0,s.jsxs)(n.h2,{id:"importing-css",children:["Importing CSS",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importing-css",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Add the ",(0,s.jsx)(n.code,{children:"@tailwind"})," directives in your CSS entry file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",meta:'title="main.css"',children:"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Depending on your needs, you can selectively import the CSS styles provided by Tailwind CSS. Please refer to the ",(0,s.jsx)(n.a,{href:"https://tailwindcss.com/docs/functions-and-directives#tailwind",target:"_blank",rel:"noopener noreferrer",children:"@tailwind documentation"})," for detailed usage of the ",(0,s.jsx)(n.code,{children:"@tailwind"})," directives."]}),"\n",(0,s.jsxs)(n.h2,{id:"done",children:["Done",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#done",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"You have now completed all the steps to integrate Tailwind CSS in Rsbuild!"}),"\n",(0,s.jsx)(n.p,{children:"You can use Tailwind's utility classes in any component or HTML, such as:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<h1 class="text-3xl font-bold underline">Hello world!</h1>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["For more usage details, refer to the ",(0,s.jsx)(n.a,{href:"https://tailwindcss.com/",target:"_blank",rel:"noopener noreferrer",children:"Tailwind CSS documentation"}),"."]}),"\n",(0,s.jsxs)(n.h2,{id:"vs-code-extension",children:["VS Code Extension",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#vs-code-extension",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Tailwind CSS provides a ",(0,s.jsx)(n.a,{href:"https://github.com/tailwindlabs/tailwindcss-intellisense",target:"_blank",rel:"noopener noreferrer",children:"Tailwind CSS IntelliSense"})," plugin for VS Code to automatically complete Tailwind CSS class names, CSS functions, and directives."]}),"\n",(0,s.jsx)(n.p,{children:"You can install this plugin in VS Code to enable the autocompletion feature."}),"\n",(0,s.jsxs)(n.h2,{id:"build-performance",children:["Build Performance",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#build-performance",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["When using Tailwind CSS, if the ",(0,s.jsx)(n.code,{children:"content"})," field in ",(0,s.jsx)(n.code,{children:"tailwind.config.js"})," is not correctly configured, this can lead to poor build performance and HMR performance. This is because Tailwind CSS internally matches files based on the glob defined in ",(0,s.jsx)(n.code,{children:"content"}),". The more files it matches, the greater the performance overhead."]}),"\n",(0,s.jsxs)(n.p,{children:["Therefore, we recommend that you specify the paths to be scanned accurately to avoid unnecessary performance overhead. For example, only include HTML or JS files in the project source code that actually contain Tailwind class names, and avoid including irrelevant files or directories, especially the ",(0,s.jsx)(n.code,{children:"node_modules"})," directory."]}),"\n",(0,s.jsxs)(n.p,{children:["Here is an bad example of scanning the ",(0,s.jsx)(n.code,{children:"node_modules"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:'title="tailwind.config.js"',children:"/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/**/*.{html,js,ts,jsx,tsx}',\n    // Scanning a large number of files, leading to performance degradation\n    './node_modules/**/*.js',\n  ],\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"optimize-css-size",children:["Optimize CSS Size",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#optimize-css-size",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["If you need to optimize the size of Tailwind CSS styles, you can try ",(0,s.jsx)(n.a,{href:"https://github.com/rspack-contrib/rsbuild-plugin-tailwindcss",target:"_blank",rel:"noopener noreferrer",children:"rsbuild-plugin-tailwindcss"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This plugin reads the module graph information of Rspack, automatically sets the accurate ",(0,s.jsx)(n.code,{children:"content"})," configuration to generate minimal Tailwind CSS styles."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { pluginTailwindCSS } from 'rsbuild-plugin-tailwindcss';\n\nexport default {\n  plugins: [pluginTailwindCSS()],\n};\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"https://github.com/rspack-contrib/rsbuild-plugin-tailwindcss",target:"_blank",rel:"noopener noreferrer",children:"rsbuild-plugin-tailwindcss"})," for more information."]}),"\n"]})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}let a=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["en%2Fguide%2Fbasic%2Ftailwindcss.mdx"]={toc:[{text:"Installing Tailwind CSS",id:"installing-tailwind-css",depth:2},{text:"Configuring PostCSS",id:"configuring-postcss",depth:2},{text:"Configuring Tailwind CSS",id:"configuring-tailwind-css",depth:2},{text:"Other Configuration Methods",id:"other-configuration-methods",depth:3},{text:"Importing CSS",id:"importing-css",depth:2},{text:"Done",id:"done",depth:2},{text:"VS Code Extension",id:"vs-code-extension",depth:2},{text:"Build Performance",id:"build-performance",depth:2},{text:"Optimize CSS Size",id:"optimize-css-size",depth:2}],title:"Use Tailwind CSS",frontmatter:{}}}}]);