"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["38"],{48219:function(n,e,i){i.r(e),i.d(e,{default:function(){return a}});var s=i(55367),l=i(26971),r=i(38146);function t(n){let e=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",blockquote:"blockquote",h2:"h2",div:"div"},(0,l.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"plugins",children:["plugins",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#plugins",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"Used to register Rsbuild plugins."}),"\n",(0,s.jsx)(e.p,{children:"Async plugin (promise) in the plugins array will be resolved, and falsy values will be ignored."}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Type:"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"type Falsy = false | null | undefined;\n\ntype RsbuildPlugins = (\n  | RsbuildPlugin\n  | Falsy\n  | Promise<RsbuildPlugin | Falsy | RsbuildPlugins>\n  | RsbuildPlugins\n)[];\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Default:"})," ",(0,s.jsx)(e.code,{children:"undefined"})]}),"\n"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["Please check out the ",(0,s.jsx)(e.a,{href:"/plugins/list/index",children:"Plugin List"})," page to discover all available plugins."]}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"example",children:["Example",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#example",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"For example, register the Stylus plugin in Rsbuild."}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Installing the plugin:"}),"\n"]}),"\n","\n",(0,s.jsx)(r.PackageManagerTabs,{command:"add @rsbuild/plugin-stylus -D"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Registering the plugin:"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginStylus } from '@rsbuild/plugin-stylus';\n\nexport default defineConfig({\n  plugins: [pluginStylus()],\n});\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"execution-order",children:["Execution Order",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#execution-order",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["By default, plugins are executed in the order they appear in the ",(0,s.jsx)(e.code,{children:"plugins"})," array. Built-in Rsbuild plugins are executed before user-registered plugins."]}),"\n",(0,s.jsxs)(e.p,{children:["When a plugin internally uses fields that control the order, such as ",(0,s.jsx)(e.code,{children:"pre"})," and ",(0,s.jsx)(e.code,{children:"post"}),", the execution order is adjusted based on them. See ",(0,s.jsx)(e.a,{href:"/plugins/dev/core#pre-pluginss",children:"Pre Plugins"})," for more details."]}),"\n",(0,s.jsxs)(e.h2,{id:"nested-plugins",children:["Nested Plugins",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#nested-plugins",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"Rsbuild also supports adding nested plugins. You can pass in an array containing multiple plugins, similar to a plugin preset collection. This is particularly useful for implementing complex functionalities that require a combination of multiple plugins (such as framework integration)."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"function myPlugin() {\n  return [fooPlugin(), barPlugin()];\n}\n\nexport default {\n  plugins: [myPlugin()],\n};\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"local-plugins",children:["Local Plugins",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#local-plugins",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"If your local code repository contains Rsbuild plugins, you can import them using relative paths."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginCustom } from './plugins/pluginCustom';\n\nexport default defineConfig({\n  plugins: [pluginCustom()],\n});\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"plugin-options",children:["Plugin Options",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#plugin-options",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"If a plugin provides custom options, you can pass the configurations through the plugin function's parameters."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginStylus } from '@rsbuild/plugin-stylus';\n\nexport default defineConfig({\n  plugins: [\n    pluginStylus({\n      stylusOptions: {\n        lineNumbers: false,\n      },\n    }),\n  ],\n});\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"plugin-registration-phase",children:["Plugin registration phase",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#plugin-registration-phase",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"It should be noted that plugin registration can only be performed during the Rsbuild initialization phase. You cannot dynamically add other plugins within a plugin through the plugin API:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",meta:"title=rsbuild.config.ts",children:"// Wrong\nfunction myPlugin() {\n  return {\n    setup: (api) => {\n      api.modifyRsbuildConfig((config, { mergeRsbuildConfig }) => {\n        return mergeRsbuildConfig(config, {\n          plugins: [fooPlugin(), barPlugin()], // <- it won't work\n        });\n      });\n    },\n  };\n}\n\n// Correct\nfunction myPlugin() {\n  return [fooPlugin(), barPlugin()];\n}\n\nexport default {\n  plugins: [myPlugin()],\n};\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"rspack-plugins",children:["Rspack Plugins",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#rspack-plugins",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"plugins"})," option is used to register Rsbuild plugins. If you need to register Rspack or Webpack plugins, please use ",(0,s.jsx)(e.a,{href:"/config/tools/rspack",children:"tools.rspack"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"export default {\n  // Rsbuild Plugins\n  plugins: [pluginStylus()],\n  tools: {\n    rspack: {\n      // Rspack or Webpack Plugins\n      plugins: [new SomeWebpackPlugin()],\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"unplugin",children:["Unplugin",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#unplugin",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.a,{href:"https://github.com/unjs/unplugin",target:"_blank",rel:"noopener noreferrer",children:"unplugin"})," is a unified plugin system for various build tools. You can use plugins implemented based on unplugin in Rsbuild, just import the ",(0,s.jsx)(e.code,{children:"/rspack"})," subpath of the plugin and register it via ",(0,s.jsx)(e.a,{href:"/config/tools/rspack",children:"tools.rspack"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["Here is an example of using ",(0,s.jsx)(e.a,{href:"https://www.npmjs.com/package/unplugin-vue-components",target:"_blank",rel:"noopener noreferrer",children:"unplugin-vue-components"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"import { defineConfig } from '@rsbuild/core';\nimport { pluginVue } from '@rsbuild/plugin-vue';\nimport Components from 'unplugin-vue-components/rspack';\n\nexport default defineConfig({\n  plugins: [pluginVue()],\n  tools: {\n    rspack: {\n      plugins: [\n        Components({\n          // options\n        }),\n      ],\n    },\n  },\n});\n"})}),"\n",(0,s.jsxs)(e.div,{className:"rspress-directive tip",children:[(0,s.jsx)(e.div,{className:"rspress-directive-title",children:"TIP"}),(0,s.jsx)(e.div,{className:"rspress-directive-content",children:(0,s.jsxs)(e.p,{children:["When using the transform hook in unplugin, please use the ",(0,s.jsx)(e.code,{children:"transformInclude"})," hook to match the specified module. When the transform hook matches the ",(0,s.jsx)(e.code,{children:".html"})," module, it will replace the default EJS transformation of the ",(0,s.jsx)(e.a,{href:"https://github.com/rspack-contrib/html-rspack-plugin",target:"_blank",rel:"noopener noreferrer",children:"html-rspack-plugin"}),".\n"]})})]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["Please ensure that the version of ",(0,s.jsx)(e.code,{children:"unplugin"})," package is >= v1.6.0."]}),"\n"]})]})}function u(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,l.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(t,{...n})}):t(n)}let a=u;u.__RSPRESS_PAGE_META={},u.__RSPRESS_PAGE_META["en%2Fconfig%2Fplugins.mdx"]={toc:[{text:"Example",id:"example",depth:2},{text:"Execution Order",id:"execution-order",depth:2},{text:"Nested Plugins",id:"nested-plugins",depth:2},{text:"Local Plugins",id:"local-plugins",depth:2},{text:"Plugin Options",id:"plugin-options",depth:2},{text:"Plugin registration phase",id:"plugin-registration-phase",depth:2},{text:"Rspack Plugins",id:"rspack-plugins",depth:2},{text:"Unplugin",id:"unplugin",depth:2}],title:"plugins",frontmatter:{}}}}]);