"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["305"],{27157:function(e,n,r){r.r(n),r.d(n,{default:function(){return c}});var s=r(55367),t=r(26971);function o(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",p:"p",pre:"pre",blockquote:"blockquote",h3:"h3"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"sourceexclude",children:["source.exclude",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sourceexclude",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type:"})," ",(0,s.jsx)(n.a,{href:"https://rspack.dev/config/module#condition",target:"_blank",rel:"noopener noreferrer",children:"Rspack.RuleSetCondition"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Default:"})," ",(0,s.jsx)(n.code,{children:"[]"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Specifies JavaScript/TypeScript files that do not need to be compiled. The usage is consistent with ",(0,s.jsx)(n.a,{href:"https://rspack.dev/config/module#ruleexclude",target:"_blank",rel:"noopener noreferrer",children:"Rule.exclude"})," in Rspack, which supports passing in strings or regular expressions to match the module path."]}),"\n",(0,s.jsx)(n.p,{children:"For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import path from 'node:path';\n\nexport default {\n  source: {\n    exclude: [path.resolve(__dirname, 'src/module-a'), /src\\/module-b/],\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Refer to ",(0,s.jsx)(n.a,{href:"/config/source/include",children:"source.include"})," to learn more."]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"not-compiled-vs-not-bundled",children:["Not compiled vs Not bundled",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#not-compiled-vs-not-bundled",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"source.exclude"})," is used to specify JavaScript/TypeScript files that do not need to be compiled. This means that these files will not be translated by SWC or Babel, but they will still be bundled into the outputs (if referenced)."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want certain files to be ignored and not bundled into the outputs, you can use Rspack's ",(0,s.jsx)(n.a,{href:"https://rspack.dev/plugins/webpack/ignore-plugin",target:"_blank",rel:"noopener noreferrer",children:"IgnorePlugin"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  tools: {\n    rspack: (config, { rspack }) => {\n      config.plugins?.push(\n        new rspack.IgnorePlugin({\n          resourceRegExp: /^\\.\\/locale$/,\n          contextRegExp: /moment$/,\n        }),\n      );\n      return config;\n    },\n  },\n};\n"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}let c=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["en%2Fconfig%2Fsource%2Fexclude.mdx"]={toc:[{text:"Not compiled vs Not bundled",id:"not-compiled-vs-not-bundled",depth:3}],title:"source.exclude",frontmatter:{}}}}]);