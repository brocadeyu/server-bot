"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["2653"],{57678:function(e,n,r){r.r(n),r.d(n,{default:function(){return l}});var s=r(55367),i=r(26971);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",blockquote:"blockquote",h2:"h2",code:"code",ul:"ul",li:"li",pre:"pre",div:"div"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"从-rsbuild-0x-迁移",children:["从 Rsbuild 0.x 迁移",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#从-rsbuild-0x-迁移",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"当前文档列出了从 Rsbuild 0.7 到 1.0 的所有不兼容更新，你可以参考此文档来迁移。"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["查看 ",(0,s.jsx)(n.a,{href:"https://github.com/web-infra-dev/rsbuild/discussions/2508",target:"_blank",rel:"noopener noreferrer",children:"Breaking changes in Rsbuild v1.0.0"})," 了解更多细节。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"重要-lightning-css-loader",children:["[重要] Lightning CSS loader",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#重要-lightning-css-loader",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Rsbuild 现在默认启用 ",(0,s.jsx)(n.a,{href:"https://rspack.dev/guide/features/builtin-lightningcss-loader",target:"_blank",rel:"noopener noreferrer",children:"lightningcss-loader"})," 来转换 CSS 文件，它取代了 ",(0,s.jsx)(n.code,{children:"autoprefixer"})," 来添加 vendor prefixes，并提供了更好的性能。"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@rsbuild/plugin-lightningcss"})," 已被废弃且不再需要。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tools.autoprefixer"})," 配置已被移除。"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"考虑到 Lightning CSS 有一些未覆盖的边缘情况，你仍然可以通过 postcss 配置文件启用 autoprefixer："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:'title="postcss.config.cjs"',children:"module.exports = {\n  plugins: {\n    autoprefixer: {},\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"重要-outputpolyfill",children:["[重要] output.polyfill",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#重要-outputpolyfill",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Rsbuild v1 默认将 ",(0,s.jsx)(n.a,{href:"/config/output/polyfill",children:"output.polyfill"})," 设置为 ",(0,s.jsx)(n.code,{children:"'off'"}),"，这可以减少 polyfill 代码并默认生成更小的包。"]}),"\n",(0,s.jsxs)(n.p,{children:["如果你的应用需要 polyfill，请将 ",(0,s.jsx)(n.code,{children:"output.polyfill"})," 设置为 ",(0,s.jsx)(n.code,{children:"'usage'"})," 或 ",(0,s.jsx)(n.code,{children:"'entry'"}),"："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"export default {\n  output: {\n    polyfill: 'usage',\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"重要-sourcedecorators",children:["[重要] source.decorators",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#重要-sourcedecorators",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Rsbuild 现在默认使用 ",(0,s.jsx)(n.code,{children:"2022-11"})," 装饰器版本。这使得 Rsbuild 的默认行为与 TypeScript >= 5.0 和 esbuild >= 0.21.0 保持一致。"]}),"\n",(0,s.jsx)(n.p,{children:"如果你在使用旧版装饰器，可以添加以下配置："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { defineConfig } from '@rsbuild/core';\n\nexport default defineConfig({\n  source: {\n    decorators: {\n      version: 'legacy',\n    },\n  },\n});\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"重要-outputtargets",children:["[重要] output.targets",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#重要-outputtargets",children:"#"})]}),"\n",(0,s.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,s.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,s.jsxs)(n.div,{className:"rspress-directive-content",children:[(0,s.jsxs)(n.p,{children:["Rsbuild v1 移除了 ",(0,s.jsx)(n.code,{children:"output.targets"})," 选项，以及 ",(0,s.jsx)(n.code,{children:"source.alias"})," / ",(0,s.jsx)(n.code,{children:"source.entry"})," 等配置的 target 参数，改为通过 ",(0,s.jsx)(n.code,{children:"environments"})," 配置以提供更灵活的多环境配置能力。"]}),"\n",(0,s.jsxs)(n.p,{children:["对比原有选项，",(0,s.jsx)(n.code,{children:"environments"})," 覆盖范围更广，可对更多配置项进行多环境差异化配置。详情可参考",(0,s.jsx)(n.a,{href:"/guide/advanced/environments",children:"多环境构建"}),"。\n"]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["移除 ",(0,s.jsx)(n.code,{children:"output.targets"})," 配置，改用 ",(0,s.jsx)(n.a,{href:"/config/output/target",children:"output.target"})," 和 ",(0,s.jsx)(n.a,{href:"/config/environments",children:"environments"})," 配置。"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"before:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  output: {\n    targets: ['web', 'node'],\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"after:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  environments: {\n    web: {\n      output: {\n        target: 'web',\n      },\n    },\n    node: {\n      output: {\n        target: 'node',\n      },\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"重要-rspack-配置校验",children:["[重要] Rspack 配置校验",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#重要-rspack-配置校验",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Rsbuild 现在默认启用 Rspack 的 scheme 校验，以确保 Rspack 配置的正确性。"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"当 Rspack 配置的类型错误时，会抛出错误并终止构建。"}),"\n",(0,s.jsx)(n.li,{children:"当 Rspack 配置中存在多余的字段时，会抛出错误，但不会终止构建。"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["详见 ",(0,s.jsx)(n.a,{href:"https://rspack.dev/guide/migration/webpack#updating-configuration",target:"_blank",rel:"noopener noreferrer",children:"Rspack - RSPACK_CONFIG_VALIDATE"}),"。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"sourcealias",children:["source.alias",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sourcealias",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["移除 ",(0,s.jsx)(n.code,{children:"source.alias"})," 函数的 ",(0,s.jsx)(n.code,{children:"target"})," 参数，改用 ",(0,s.jsx)(n.a,{href:"/config/environments",children:"environments"})," 配置。"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"before:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  source: {\n    alias: (alias, { target }) => {\n      if (target === 'node') {\n        alias['@common'] = './src/node/common';\n      } else if (target === 'web') {\n        alias['@common'] = './src/web/common';\n      }\n    },\n  },\n  output: {\n    targets: ['web', 'node'],\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"after:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  environments: {\n    web: {\n      source: {\n        alias: {\n          '@common': './src/web/common',\n        },\n      },\n      output: {\n        target: 'web',\n      },\n    },\n    node: {\n      source: {\n        alias: {\n          '@common': './src/node/common',\n        },\n      },\n      output: {\n        target: 'node',\n      },\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"sourceentry",children:["source.entry",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sourceentry",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["移除了 ",(0,s.jsx)(n.code,{children:"source.entry"})," 函数用法，改为使用 ",(0,s.jsx)(n.a,{href:"/config/environments",children:"environments"})," 配置。"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"before:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  source: {\n    entry({ target }) {\n      if (target === 'web') {\n        return {\n          index: './src/index.client.js',\n        };\n      }\n      if (target === 'node') {\n        return {\n          index: './src/index.server.js',\n        };\n      }\n    },\n  },\n  output: {\n    targets: ['web', 'node'],\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"after:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  environments: {\n    web: {\n      source: {\n        entry: {\n          index: './src/index.client.js',\n        },\n      },\n      output: {\n        target: 'web',\n      },\n    },\n    node: {\n      source: {\n        entry: {\n          index: './src/index.server.js',\n        },\n      },\n      output: {\n        target: 'node',\n      },\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"outputoverridebrowserslist",children:["output.overrideBrowserslist",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#outputoverridebrowserslist",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"output.overrideBrowserslist"})," 不再支持 ",(0,s.jsx)(n.code,{children:"Record<RsbuildTarget, string[]>"})," 类型，使用 ",(0,s.jsx)(n.a,{href:"/config/environments",children:"environments"})," 配置代替。"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"before:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  output: {\n    overrideBrowserslist: {\n      web: ['iOS >= 9', 'Android >= 4.4'],\n      node: ['node >= 20'],\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"after:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default defineConfig({\n  environments: {\n    web: {\n      output: {\n        overrideBrowserslist: ['iOS >= 9', 'Android >= 4.4'],\n      },\n    },\n    node: {\n      output: {\n        overrideBrowserslist: ['node >= 20'],\n      },\n    },\n  },\n});\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"outputemitassets",children:["output.emitAssets",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#outputemitassets",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"output.emitAssets"})," 调整为 boolean 类型，使用 ",(0,s.jsx)(n.a,{href:"/config/environments",children:"environments"})," 配置代替。"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"before:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  output: {\n    targets: ['web', 'node'],\n    emitAssets: ({ target }) => target !== 'node',\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"after:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  environments: {\n    web: {\n      output: {\n        target: 'web',\n      },\n    },\n    node: {\n      output: {\n        target: 'node',\n        emitAssets: false,\n      },\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"outputdistpathserver",children:["output.distPath.server",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#outputdistpathserver",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["移除 ",(0,s.jsx)(n.code,{children:"output.distPath.server"}),"，使用 ",(0,s.jsx)(n.a,{href:"/config/environments",children:"environments"})," 配置代替。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  environments: {\n    web: {\n      output: {\n        target: 'web',\n      },\n    },\n    node: {\n      output: {\n        target: 'node',\n        distPath: {\n          root: 'dist/server',\n        },\n      },\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"outputminifyhtml",children:["output.minify.html",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#outputminifyhtml",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Rsbuild v1 移除了 ",(0,s.jsx)(n.code,{children:"output.minify.html"})," 和 ",(0,s.jsx)(n.code,{children:"output.minify.htmlOptions"})," 选项，不再对 HTML 文件进行压缩。"]}),"\n",(0,s.jsxs)(n.p,{children:["之前 Rsbuild 使用 ",(0,s.jsx)(n.code,{children:"html-minifier-terser"})," 来压缩 HTML 文件。但 ",(0,s.jsx)(n.code,{children:"html-minifier-terser"})," 的性能无法满足 Rsbuild 应用的需求，并且在大多数情况下，压缩 HTML 带来的收益很小。"]}),"\n",(0,s.jsxs)(n.p,{children:["目前，Rsbuild 不再内置 ",(0,s.jsx)(n.code,{children:"html-minifier-terser"}),"，因此我们提供了一个独立的插件 ",(0,s.jsx)(n.a,{href:"https://github.com/rspack-contrib/rsbuild-plugin-html-minifier-terser",target:"_blank",rel:"noopener noreferrer",children:"rsbuild-plugin-html-minifier-terser"})," 来支持 HTML 压缩。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:'title="rsbuild.config.ts"',children:"import { pluginHtmlMinifierTerser } from 'rsbuild-plugin-html-minifier-terser';\n\nexport default {\n  plugins: [pluginHtmlMinifierTerser()],\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"我们计划在未来使用一些性能更好的基于 Rust 的 HTML 压缩器。"}),"\n",(0,s.jsxs)(n.h2,{id:"outputcharset",children:["output.charset",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#outputcharset",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/config/output/charset",children:"output.charset"})," 的默认值由 ",(0,s.jsx)(n.code,{children:"ascii"})," 调整为 ",(0,s.jsx)(n.code,{children:"utf8"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["如果你需要使用 ",(0,s.jsx)(n.code,{children:"ascii"}),"，可以添加配置："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  output: {\n    charset: 'ascii',\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"devstarturl",children:["dev.startUrl",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#devstarturl",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"dev.startUrl"})," 被重命名为 ",(0,s.jsx)(n.a,{href:"/config/server/open",children:"server.open"}),"："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"export default {\n-  dev: {\n+  server: {\n-   startUrl: true,\n+   open: true,\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"devclientport",children:["dev.client.port",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#devclientport",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/config/dev/client",children:"dev.client.port"})," 的默认值从 ",(0,s.jsx)(n.code,{children:"<port>"})," 调整为 ",(0,s.jsx)(n.code,{children:"''"})," (使用 ",(0,s.jsx)(n.code,{children:"location.port"}),")。"]}),"\n",(0,s.jsx)(n.p,{children:"你也可以使用之前的默认值："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  dev: {\n    client: {\n      port: '<port>',\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"htmlappicon",children:["html.appIcon",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#htmlappicon",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["之前，",(0,s.jsx)(n.a,{href:"/config/html/app-icon",children:"html.appIcon"})," 不支持 web app manifests，这意味着它仅适用于 iOS。"]}),"\n",(0,s.jsxs)(n.p,{children:["现在 ",(0,s.jsx)(n.code,{children:"html.appIcon"})," 支持生成 web app manifests，并且 ",(0,s.jsx)(n.code,{children:"html.appIcon"})," 的类型有变更。"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"before:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  html: {\n    appIcon: './src/icon.png',\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"after:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  html: {\n    appIcon: {\n      icons: [{ src: './src/icon.png', size: 180 }],\n    },\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"其他",children:["其他",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#其他",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Rsbuild 1.0 对插件、dev server 等 API 进行了部分调整和优化。"}),"\n",(0,s.jsx)(n.p,{children:"调整包括："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onBeforeBuild"})," 钩子在 watch 模式下支持触发多次。"]}),"\n",(0,s.jsxs)(n.li,{children:["新增 ",(0,s.jsx)(n.code,{children:"onBeforeEnvironmentCompile"})," 和 ",(0,s.jsx)(n.code,{children:"onAfterEnvironmentCompile"})," 钩子，分别在执行单个 environment 的构建前/后触发。"]}),"\n",(0,s.jsxs)(n.li,{children:["移除 ",(0,s.jsx)(n.code,{children:"api.getHtmlPaths"}),"，改为 ",(0,s.jsx)(n.code,{children:"environment.htmlPaths"}),"。"]}),"\n",(0,s.jsxs)(n.li,{children:["移除 ",(0,s.jsx)(n.code,{children:"api.context.entry"}),"，改为 ",(0,s.jsx)(n.code,{children:"environment.entry"}),"。"]}),"\n",(0,s.jsxs)(n.li,{children:["移除 ",(0,s.jsx)(n.code,{children:"api.context.targets"}),"，改为 ",(0,s.jsx)(n.code,{children:"environment.target"}),"。"]}),"\n",(0,s.jsxs)(n.li,{children:["移除 ",(0,s.jsx)(n.code,{children:"rsbuildServer.onHTTPUpgrade"}),"，改为 ",(0,s.jsx)(n.code,{children:"rsbuildServer.connectWebSocket"}),"。"]}),"\n"]})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}let l=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["zh%2Fguide%2Fmigration%2Frsbuild-0-x.mdx"]={toc:[{text:"[重要] Lightning CSS loader",id:"重要-lightning-css-loader",depth:2},{text:"[重要] output.polyfill",id:"重要-outputpolyfill",depth:2},{text:"[重要] source.decorators",id:"重要-sourcedecorators",depth:2},{text:"[重要] output.targets",id:"重要-outputtargets",depth:2},{text:"[重要] Rspack 配置校验",id:"重要-rspack-配置校验",depth:2},{text:"source.alias",id:"sourcealias",depth:2},{text:"source.entry",id:"sourceentry",depth:2},{text:"output.overrideBrowserslist",id:"outputoverridebrowserslist",depth:2},{text:"output.emitAssets",id:"outputemitassets",depth:2},{text:"output.distPath.server",id:"outputdistpathserver",depth:2},{text:"output.minify.html",id:"outputminifyhtml",depth:2},{text:"output.charset",id:"outputcharset",depth:2},{text:"dev.startUrl",id:"devstarturl",depth:2},{text:"dev.client.port",id:"devclientport",depth:2},{text:"html.appIcon",id:"htmlappicon",depth:2},{text:"其他",id:"其他",depth:2}],title:"从 Rsbuild 0.x 迁移",frontmatter:{}}}}]);