"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["1759"],{12778:function(s,e,r){r.r(e),r.d(e,{default:function(){return c}});var n=r(55367),l=r(26971);function i(s){let e=Object.assign({h1:"h1",a:"a",blockquote:"blockquote",p:"p",img:"img",ul:"ul",li:"li",h2:"h2",strong:"strong",code:"code",pre:"pre",h3:"h3"},(0,l.ah)(),s.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h1,{id:"rsbuild-07-发布",children:["Rsbuild 0.7 发布",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#rsbuild-07-发布",children:"#"})]}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsx)(e.p,{children:"May 28, 2024"}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:"https://assets.rspack.dev/rsbuild/rsbuild-banner-v0-7.png",alt:""})}),"\n",(0,n.jsx)(e.p,{children:"Rsbuild 0.7 已与 Rspack 0.7 同步发布！"}),"\n",(0,n.jsx)(e.p,{children:"这是 Rsbuild 1.0 版本发布前的最后一个 minor 版本，此后 Rspack 团队将投入到 1.0 版本的开发中，并致力于尽快推出 Rspack / Rsbuild 1.0 alpha 版本。"}),"\n",(0,n.jsx)(e.p,{children:"在 Rsbuild 0.7 中，值得关注的变更有："}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"#%E6%94%AF%E6%8C%81-storybook",children:"支持 Storybook"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"#%E6%9B%B4%E5%BF%AB%E7%9A%84-sass-%E7%BC%96%E8%AF%91",children:"更快的 Sass 编译"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"#%E6%9B%B4%E5%A5%BD%E7%9A%84-css-%E6%94%AF%E6%8C%81",children:"更好的 CSS 支持"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"#css-modules-%E7%B1%BB%E5%9E%8B%E7%94%9F%E6%88%90",children:"CSS Modules 类型生成"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"#esmcjs-%E5%AF%BC%E5%87%BA",children:"ESM/CJS 导出"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"#%E4%B8%8D%E5%85%BC%E5%AE%B9%E6%9B%B4%E6%96%B0",children:"不兼容更新"})}),"\n"]}),"\n",(0,n.jsxs)(e.h2,{id:"支持-storybook",children:["支持 Storybook",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#支持-storybook",children:"#"})]}),"\n",(0,n.jsx)(e.p,{children:"Rsbuild 现已支持 Storybook！"}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:"https://github.com/rspack-contrib/storybook-rsbuild",target:"_blank",rel:"noopener noreferrer",children:"storybook-builder-rsbuild"})," 是基于 Storybook v8 和 Rsbuild 实现的 Storybook builder，能够快速构建你的 components 和 stories。"]}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:"https://assets.rspack.dev/rsbuild/rsbuild-banner-with-storybook.png",alt:""})}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"对于使用 Rsbuild 的项目，现在你可以快速集成 Storybook，并复用已有的 Rsbuild 配置。"}),"\n",(0,n.jsxs)(e.li,{children:["对于使用 Storybook webpack builder 的项目，现在即可升级到 Rsbuild，",(0,n.jsx)(e.strong,{children:"并获得约 5 倍的构建性能提升"}),"。"]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["我们还提供了 ",(0,n.jsx)(e.code,{children:"storybook-react-rsbuild"})," 和 ",(0,n.jsx)(e.code,{children:"storybook-vue3-rsbuild"}),"，用于支持 React 和 Vue 3。比如集成 React："]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-js",meta:'title=".storybook/main.js"',children:"import { StorybookConfig } from 'storybook-react-rsbuild';\n\nconst config: StorybookConfig = {\n  framework: 'storybook-react-rsbuild',\n};\n\nexport default config;\n"})}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:"https://assets.rspack.dev/rsbuild/assets/storybook-rsbuild-preview.png",alt:""})}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsxs)(e.p,{children:["更多用法请参考 ",(0,n.jsx)(e.a,{href:"https://github.com/rspack-contrib/storybook-rsbuild",target:"_blank",rel:"noopener noreferrer",children:"storybook-rsbuild 仓库"}),"。"]}),"\n"]}),"\n",(0,n.jsxs)(e.h2,{id:"更快的-sass-编译",children:["更快的 Sass 编译",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#更快的-sass-编译",children:"#"})]}),"\n",(0,n.jsxs)(e.p,{children:["在 Rsbuild 0.7 中，",(0,n.jsx)(e.strong,{children:"Sass 编译速度提高了 3~10 倍"}),"，在大型项目项目中的性能提升尤为显著。"]}),"\n",(0,n.jsx)(e.p,{children:"以编译 Bootstrap 的 Sass 代码为例，Rsbuild 0.6 和 0.7 的构建时间对比："}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:"https://assets.rspack.dev/rsbuild/assets/sass-embedded-compare.jpeg",alt:""})}),"\n",(0,n.jsxs)(e.p,{children:["这得益于 Rsbuild 默认启用了 ",(0,n.jsx)(e.a,{href:"https://www.npmjs.com/package/sass-embedded",target:"_blank",rel:"noopener noreferrer",children:"sass-embedded"}),"，sass-embedded 是一个围绕原生 Dart Sass 可执行文件的 JavaScript wrapper，具备一致的 API 和更优秀的性能。"]}),"\n",(0,n.jsxs)(e.p,{children:["此外，Rsbuild 还启用了 ",(0,n.jsx)(e.code,{children:"sass-loader"})," 最新的 ",(0,n.jsx)(e.a,{href:"https://github.com/webpack-contrib/sass-loader/releases/tag/v14.2.0",target:"_blank",rel:"noopener noreferrer",children:"modern-compiler"})," API，这能够开启 Sass 的 shared resources 能力，在编译多个文件时重复利用相同的 compiler 进程，从而提升构建速度。"]}),"\n",(0,n.jsxs)(e.h2,{id:"更好的-css-支持",children:["更好的 CSS 支持",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#更好的-css-支持",children:"#"})]}),"\n",(0,n.jsxs)(e.p,{children:["Rsbuild 现在使用 ",(0,n.jsx)(e.a,{href:"https://www.rspack.dev/plugins/rspack/css-extract-rspack-plugin",target:"_blank",rel:"noopener noreferrer",children:"CssExtractRspackPlugin"})," 来提取 CSS 到单独的文件中，而不是使用 ",(0,n.jsx)(e.a,{href:"https://www.rspack.dev/config/experiments#experimentscss",target:"_blank",rel:"noopener noreferrer",children:"experiments.css"})," 配置来实现。"]}),"\n",(0,n.jsx)(e.p,{children:"这允许 Rsbuild 支持更多 CSS 特性，包括："}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["支持在 Vue SFC 中使用 ",(0,n.jsx)(e.code,{children:"<style module>"}),"："]}),"\n"]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-html",meta:'title="index.vue"',children:'<template>\n  <p :class="$style.red">Red</p>\n</template>\n\n<style module>\n  .red {\n    color: red;\n  }\n</style>\n'})}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["支持复杂的 CSS Modules ",(0,n.jsx)(e.code,{children:":global()"})," 语法"]}),"\n"]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-css",meta:'title="style.module.css"',children:":local(.parent):global(.child) > ul {\n  color: red;\n}\n"})}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["支持更多的 CSS Modules 选项，如 ",(0,n.jsx)(e.a,{href:"/config/output/css-modules#cssmodulesexportglobals",children:"cssModules.exportGlobals"})]}),"\n",(0,n.jsxs)(e.li,{children:["现在你可以使用 ",(0,n.jsx)(e.a,{href:"/config/tools/css-extract",children:"tools.cssExtract"})," 来配置 CssExtractRspackPlugin。"]}),"\n"]}),"\n",(0,n.jsxs)(e.h2,{id:"css-modules-类型生成",children:["CSS Modules 类型生成",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#css-modules-类型生成",children:"#"})]}),"\n",(0,n.jsxs)(e.p,{children:["Rsbuild 0.7 新增了 ",(0,n.jsx)(e.a,{href:"https://github.com/rspack-contrib/rsbuild-plugin-typed-css-modules",target:"_blank",rel:"noopener noreferrer",children:"Typed CSS Modules 插件"}),"，用于为项目中的 CSS Modules 文件生成类型声明文件。"]}),"\n",(0,n.jsx)(e.p,{children:"当你在 TypeScript 项目里使用 CSS Modules 时，默认的类型定义如下。它只能提供基本的类型支持，无法准确地提示出 CSS Modules 导出了哪些类名。"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-ts",meta:'title="src/env.d.ts"',children:"declare module '*.module.css' {\n  const classes: { readonly [key: string]: string };\n  export default classes;\n}\n"})}),"\n",(0,n.jsx)(e.p,{children:"在使用 Typed CSS Modules 插件后，Rsbuild 会为项目中所有的 CSS Modules 生成类型声明文件，提供准确的类型提示。"}),"\n",(0,n.jsxs)(e.p,{children:["例如，创建 ",(0,n.jsx)(e.code,{children:"src/index.ts"})," 和 ",(0,n.jsx)(e.code,{children:"src/index.module.css"})," 两个文件："]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-tsx",meta:'title="src/index.ts"',children:"import styles from './index.module.css';\n\nconsole.log(styles.pageHeader);\n"})}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-css",meta:'title="index.module.css"',children:".page-header {\n  color: black;\n}\n"})}),"\n",(0,n.jsxs)(e.p,{children:["构建后，Rsbuild 会自动生成 ",(0,n.jsx)(e.code,{children:"src/index.module.css.d.ts"})," 类型声明文件："]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-ts",meta:'title="src/index.module.css.d.ts"',children:"interface CssExports {\n  'page-header': string;\n  pageHeader: string;\n}\ndeclare const cssExports: CssExports;\nexport default cssExports;\n"})}),"\n",(0,n.jsxs)(e.p,{children:["此时再打开 ",(0,n.jsx)(e.code,{children:"src/index.ts"})," 文件，可以看到 ",(0,n.jsx)(e.code,{children:"styles"})," 对象已经具备了准确的类型。"]}),"\n",(0,n.jsxs)(e.h2,{id:"esmcjs-导出",children:["ESM/CJS 导出",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#esmcjs-导出",children:"#"})]}),"\n",(0,n.jsxs)(e.p,{children:["现在，Rsbuild 的所有包均提供了 ES modules 和 CommonJS 两种格式的导出，并在 package.json 中声明了 ",(0,n.jsx)(e.a,{href:"https://nodejs.org/api/packages.html#type",target:"_blank",rel:"noopener noreferrer",children:'"type"="module"`'}),"。"]}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:"https://assets.rspack.dev/rsbuild/assets/rsbuild-dual-package-example.png",alt:""})}),"\n",(0,n.jsxs)(e.p,{children:["这使你能够使用 ",(0,n.jsx)(e.code,{children:"import"})," 或 ",(0,n.jsx)(e.code,{children:"require"})," 来调用 Rsbuild 的 JavaScript API："]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-js",children:"// ES Modules\nimport { createRsbuild } from '@rsbuild/core';\n\n// CommonJS\nconst { createRsbuild } = require('@rsbuild/core');\n"})}),"\n",(0,n.jsx)(e.p,{children:"ESM/CJS 互操作是一个棘手的问题，因此我们计划长期提供这两种格式，以便于更多用户使用。"}),"\n",(0,n.jsxs)(e.h2,{id:"不兼容更新",children:["不兼容更新",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#不兼容更新",children:"#"})]}),"\n",(0,n.jsxs)(e.h3,{id:"升级-rspack-07",children:["升级 Rspack 0.7",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#升级-rspack-07",children:"#"})]}),"\n",(0,n.jsx)(e.p,{children:"Rsbuild 已将依赖的 Rspack 升级至 0.7 版本，并适配了其中包含的不兼容更新，通常你不会受到这些不兼容更新的影响。"}),"\n",(0,n.jsxs)(e.p,{children:["在新版本中，Rspack 支持了 lazy compilation，可以显著提升大型项目的 dev 启动速度。请参考 ",(0,n.jsx)(e.a,{href:"https://rspack.dev/zh/blog/announcing-0-7",target:"_blank",rel:"noopener noreferrer",children:"Rspack 0.7 发布公告"})," 了解更多。"]}),"\n",(0,n.jsxs)(e.p,{children:["在 Rsbuild 中，你可以使用 ",(0,n.jsx)(e.a,{href:"/config/dev/lazy-compilation",children:"dev.lazyCompilation"})," 来启用 lazy compilation。"]}),"\n",(0,n.jsxs)(e.h3,{id:"sass-和-less-插件",children:["Sass 和 Less 插件",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#sass-和-less-插件",children:"#"})]}),"\n",(0,n.jsxs)(e.p,{children:["Rsbuild 的 Sass 和 Less 插件现在是两个独立的 npm 包，而不是像之前一样内置在 ",(0,n.jsx)(e.code,{children:"@rsbuild/core"})," 中，这允许用户可以按需启用 Sass 和 Less 编译能力。"]}),"\n",(0,n.jsxs)(e.p,{children:["比如，对于使用 Tailwind CSS、CSS-in-JS 等 CSS 方案的项目，现在不再需要安装 Sass 和 Less 所需的依赖，",(0,n.jsx)(e.strong,{children:"这可以节省约 7MB 的磁盘空间"}),"。"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["如果你的项目需要编译 ",(0,n.jsx)(e.code,{children:".scss"})," 或 ",(0,n.jsx)(e.code,{children:".sass"})," 文件，请安装并注册 ",(0,n.jsx)(e.a,{href:"/plugins/list/plugin-sass",children:"@rsbuild/plugin-sass"})," 插件："]}),"\n"]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { pluginSass } from '@rsbuild/plugin-sass';\n\nexport default {\n  plugins: [pluginSass()],\n};\n"})}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["如果你的项目需要编译 ",(0,n.jsx)(e.code,{children:".less"})," 文件，请安装并注册 ",(0,n.jsx)(e.a,{href:"/plugins/list/plugin-less",children:"@rsbuild/plugin-less"})," 插件："]}),"\n"]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"import { pluginLess } from '@rsbuild/plugin-less';\n\nexport default {\n  plugins: [pluginLess()],\n};\n"})}),"\n",(0,n.jsxs)(e.h3,{id:"dataurilimit-默认值",children:["dataUriLimit 默认值",(0,n.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#dataurilimit-默认值",children:"#"})]}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:"/config/output/data-uri-limit",children:"output.dataUriLimit"})," 的默认值从 ",(0,n.jsx)(e.code,{children:"10000 (10kB)"})," 调整为 ",(0,n.jsx)(e.code,{children:"4096 (4KiB)"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"这是因为目前更多的应用正在使用 HTTP 2.0，所以将资源分割成单独的文件会表现得更好。而且将超过 4KiB 的资源内联可能会使 JS 包体积过大，不利于缓存。"}),"\n",(0,n.jsx)(e.p,{children:"如果你倾向于之前的默认设置，可以添加以下配置："}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-js",meta:'title="rsbuild.config.ts"',children:"export default {\n  output: {\n    dataUriLimit: 10000,\n  },\n};\n"})})]})}function d(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,l.ah)(),s.components);return e?(0,n.jsx)(e,{...s,children:(0,n.jsx)(i,{...s})}):i(s)}let c=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["zh%2Fcommunity%2Freleases%2Fv0-7.mdx"]={toc:[{text:"支持 Storybook",id:"支持-storybook",depth:2},{text:"更快的 Sass 编译",id:"更快的-sass-编译",depth:2},{text:"更好的 CSS 支持",id:"更好的-css-支持",depth:2},{text:"CSS Modules 类型生成",id:"css-modules-类型生成",depth:2},{text:"ESM/CJS 导出",id:"esmcjs-导出",depth:2},{text:"不兼容更新",id:"不兼容更新",depth:2},{text:"升级 Rspack 0.7",id:"升级-rspack-07",depth:3},{text:"Sass 和 Less 插件",id:"sass-和-less-插件",depth:3},{text:"dataUriLimit 默认值",id:"dataurilimit-默认值",depth:3}],title:"Rsbuild 0.7 发布",frontmatter:{published_at:"2024-05-28T18:00:00.000Z"}}}}]);