"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["9960"],{70409:function(e,n,s){s.r(n),s.d(n,{default:function(){return d}});var i=s(55367),r=s(26971),t=s(10904),o=s(32634),a=s(58324);function l(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",code:"code",pre:"pre",h3:"h3",strong:"strong"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"plugin-core",children:["Plugin Core",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#plugin-core",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"This section describes the core plugin types and APIs."}),"\n",(0,i.jsxs)(n.h2,{id:"rsbuildplugin",children:["RsbuildPlugin",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rsbuildplugin",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"The type of the plugin object. The plugin object contains the following properties:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"}),": The name of the plugin, a unique identifier."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"setup"}),": The setup function of the plugin, which can be an async function. This function is called once when the plugin is initialized. The plugin API provides the context info, utility functions and lifecycle hooks. For a complete introduction to lifecycle hooks, please read the ",(0,i.jsx)(n.a,{href:"/plugins/dev/hooks",children:"Plugin Hooks"})," chapter."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pre"}),": Declare the names of pre-plugins, which will be executed before the current plugin."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"post"}),": Declare the names of post-plugins, which will be executed after the current plugin."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"remove"}),": Declare the plugins that need to be removed, you can pass an array of plugin names."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The type of the plugin object, which contains the following properties:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type RsbuildPlugin = {\n  name: string;\n  pre?: string[];\n  post?: string[];\n  remove?: string[];\n  setup: (api: RsbuildPluginAPI) => Promise<void> | void;\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can import this type from ",(0,i.jsx)(n.code,{children:"@rsbuild/core"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import type { RsbuildPlugin } from '@rsbuild/core';\n\nexport default (): RsbuildPlugin => ({\n  name: 'plugin-foo',\n\n  pre: ['plugin-bar'],\n\n  setup: (api) => {\n    api.onAfterBuild(() => {\n      console.log('after build!');\n    });\n  },\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"pre-plugins",children:["Pre-Plugins",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#pre-plugins",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["By default, plugins are executed in the order they are added. You can declare pre-execution plugins using the ",(0,i.jsx)(n.code,{children:"pre"})," field."]}),"\n",(0,i.jsx)(n.p,{children:"For example, consider the following two plugins:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const pluginFoo = {\n  name: 'plugin-foo',\n};\n\nconst pluginBar = {\n  name: 'plugin-bar',\n  pre: ['plugin-foo'],\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The Bar plugin is configured with the Foo plugin in its ",(0,i.jsx)(n.code,{children:"pre"})," field, so the Foo plugin will always be executed before the Bar plugin."]}),"\n",(0,i.jsxs)(n.h3,{id:"post-plugins",children:["Post-Plugins",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#post-plugins",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["Similarly, you can declare post-execution plugins using the ",(0,i.jsx)(n.code,{children:"post"})," field."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const pluginFoo = {\n  name: 'plugin-foo',\n};\n\nconst pluginBar = {\n  name: 'plugin-bar',\n  post: ['plugin-foo'],\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The Bar plugin is configured with the Foo plugin in its ",(0,i.jsx)(n.code,{children:"post"})," field, so the Foo plugin will always be executed after the Bar plugin."]}),"\n",(0,i.jsxs)(n.h3,{id:"removing-plugins",children:["Removing Plugins",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#removing-plugins",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["You can remove other plugins within a plugin using the ",(0,i.jsx)(n.code,{children:"remove"})," field."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const pluginFoo = {\n  name: 'plugin-foo',\n};\n\nconst pluginBar = {\n  name: 'plugin-bar',\n  remove: ['plugin-foo'],\n};\n"})}),"\n",(0,i.jsx)(n.p,{children:"For example, if you register both the Foo and Bar plugins mentioned above, the Foo plugin will not take effect because the Bar plugin declares the removal of the Foo plugin."}),"\n",(0,i.jsxs)(n.p,{children:["It should be noted that if the current plugin is registered as a ",(0,i.jsx)(n.a,{href:"https://rsbuild.dev/guide/advanced/environments#add-plugins-for-specified-environment",target:"_blank",rel:"noopener noreferrer",children:"specific environment plugin"}),", only the removal of plugins in the same environment is supported, and global plugins cannot be removed."]}),"\n",(0,i.jsxs)(n.h2,{id:"apicontext",children:["api.context",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#apicontext",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"api.context"})," is a read-only object that provides some context information."]}),"\n",(0,i.jsxs)(n.p,{children:["The content of ",(0,i.jsx)(n.code,{children:"api.context"})," is exactly the same as ",(0,i.jsx)(n.code,{children:"rsbuild.context"}),", please refer to ",(0,i.jsx)(n.a,{href:"/api/javascript-api/instance#rsbuildcontext",children:"rsbuild.context"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const pluginFoo = () => ({\n  setup(api) {\n    console.log(api.context.distPath);\n  },\n});\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"apigetrsbuildconfig",children:["api.getRsbuildConfig",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#apigetrsbuildconfig",children:"#"})]}),"\n","\n",(0,i.jsx)(t.Z,{}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const pluginFoo = () => ({\n  setup(api) {\n    const config = api.getRsbuildConfig();\n    console.log(config.html?.title);\n  },\n});\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"apigetnormalizedconfig",children:["api.getNormalizedConfig",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#apigetnormalizedconfig",children:"#"})]}),"\n","\n",(0,i.jsx)(o.Z,{}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const pluginFoo = () => ({\n  setup(api) {\n    const config = api.getNormalizedConfig();\n    console.log(config.html.title);\n  },\n});\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"apiispluginexists",children:["api.isPluginExists",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#apiispluginexists",children:"#"})]}),"\n","\n",(0,i.jsx)(a.Z,{}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"export default () => ({\n  setup: (api) => {\n    console.log(api.isPluginExists('plugin-foo'));\n  },\n});\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"apitransform",children:["api.transform",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#apitransform",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Used to transform the code of modules."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"function Transform(\n  descriptor: TransformDescriptor,\n  handler: TransformHandler,\n): void;\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"api.transform"})," accepts two params:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"descriptor"}),": an object describing the module's matching conditions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"handler"}),": a transformation function that takes the current module code and returns the transformed code."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"example",children:["Example",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#example",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["For example, match modules with the ",(0,i.jsx)(n.code,{children:".pug"})," extension and transform them to JavaScript code:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import pug from 'pug';\n\nconst pluginPug = () => ({\n  name: 'my-pug-plugin',\n  setup(api) {\n    api.transform({ test: /\\.pug$/ }, ({ code }) => {\n      const templateCode = pug.compileClient(code, {});\n      return `${templateCode}; module.exports = template;`;\n    });\n  },\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"descriptor-param",children:["Descriptor Param",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#descriptor-param",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"The descriptor param is an object describing the module's matching conditions."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type TransformDescriptor = {\n  test?: RuleSetCondition;\n  targets?: RsbuildTarget[];\n  environments?: string[];\n  resourceQuery?: RuleSetCondition;\n  raw?: boolean;\n  layer?: string;\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"descriptor"})," param supports the following matching conditions:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"test"}),": matches module's path (without query), the same as Rspack's ",(0,i.jsx)(n.a,{href:"https://rspack.dev/config/module#ruletest",target:"_blank",rel:"noopener noreferrer",children:"Rule.test"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.transform({ test: /\\.pug$/ }, ({ code }) => {\n  // ...\n});\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"targets"}),": matches the Rsbuild ",(0,i.jsx)(n.a,{href:"/config/output/target",children:"output.target"}),", and applies the current transform function only to the matched targets."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.transform({ test: /\\.pug$/, targets: ['web'] }, ({ code }) => {\n  // ...\n});\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"environments"}),": matches the Rsbuild ",(0,i.jsx)(n.a,{href:"/guide/advanced/environments",children:"environment"})," name, and applies the current transform function only to the matched environments."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.transform({ test: /\\.pug$/, environments: ['web'] }, ({ code }) => {\n  // ...\n});\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"resourceQuery"}),": matches module's query, the same as Rspack's ",(0,i.jsx)(n.a,{href:"https://rspack.dev/config/module#ruleresourcequery",target:"_blank",rel:"noopener noreferrer",children:"Rule.resourceQuery"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.transform({ resourceQuery: /raw/ }, ({ code }) => {\n  // ...\n});\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"raw"}),": if raw is ",(0,i.jsx)(n.code,{children:"true"}),", the transform handler will receive the Buffer type code instead of the string type."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.transform({ test: /\\.node$/, raw: true }, ({ code }) => {\n  // ...\n});\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"layer"}),": the same as Rspack's ",(0,i.jsx)(n.a,{href:"https://rspack.dev/config/module#rulelayer",target:"_blank",rel:"noopener noreferrer",children:"Rule.layer"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"issuerLayer"}),": the same as Rspack's ",(0,i.jsx)(n.a,{href:"https://rspack.dev/config/module#ruleissuerlayer",target:"_blank",rel:"noopener noreferrer",children:"Rule.issuerLayer"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"handler-param",children:["Handler Param",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#handler-param",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"The handler param is a transformation function that takes the current module code and returns the transformed code."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type TransformContext = {\n  code: string;\n  resource: string;\n  resourcePath: string;\n  resourceQuery: string;\n  environment: EnvironmentContext;\n  addDependency: (file: string) => void;\n  emitFile: (\n    name: string,\n    content: string | Buffer,\n    sourceMap?: string,\n    assetInfo?: Record<string, any>,\n  ) => void;\n};\n\ntype TransformResult =\n  | string\n  | {\n      code: string;\n      map?: string | Rspack.sources.RawSourceMap | null;\n    };\n\ntype TransformHandler = (\n  context: TransformContext,\n) => MaybePromise<TransformResult>;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"handler"})," function provides the following params:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"code"}),": The code of the module."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"resource"}),": The absolute path of the module, including the query."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"resourcePath"}),": The absolute path of the module, without the query."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"resourceQuery"}),": The query of the module."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"environment"}),": The ",(0,i.jsx)(n.a,{href:"/api/javascript-api/environment-api#environment-context",children:"environment context"})," for current build."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"addDependency"}),": Add an additional file as the dependency. The file will be watched and changes to the file will trigger rebuild. The same as Rspack loader's ",(0,i.jsx)(n.a,{href:"https://rspack.dev/api/loader-api/context#thisadddependency",target:"_blank",rel:"noopener noreferrer",children:"this.addDependency"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"emitFile"}),": Emits a file to the build output. The same as Rspack loader's ",(0,i.jsx)(n.a,{href:"https://rspack.dev/api/loader-api/context#thisemitfile",target:"_blank",rel:"noopener noreferrer",children:"this.emitFile"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.transform(\n  { test: /\\.pug$/ },\n  ({ code, resource, resourcePath, resourceQuery }) => {\n    console.log(code); // -> some code\n    console.log(resource); // -> '/home/user/project/src/template.pug?foo=123'\n    console.log(resourcePath); // -> '/home/user/project/src/template.pug'\n    console.log(resourceQuery); // -> '?foo=123'\n  },\n);\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"difference-with-loader",children:["Difference with loader",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#difference-with-loader",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"api.transform"})," can be thought of as a lightweight implementation of Rspack loader. It provides a simple and easy to use API and automatically calls Rspack loader at the backend to transform the code."]}),"\n",(0,i.jsxs)(n.p,{children:["In Rsbuild plugins, you can quickly implement code transformation functions using ",(0,i.jsx)(n.code,{children:"api.transform"}),", which can handle the majority of common scenarios without having to learn how to write an Rspack loader."]}),"\n",(0,i.jsxs)(n.p,{children:["Note that for some complex code transformation scenarios, ",(0,i.jsx)(n.code,{children:"api.transform"})," may not be sufficient. In such situations, you can implement it using the Rspack loader."]}),"\n",(0,i.jsxs)(n.h2,{id:"apiresolve",children:["api.resolve",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#apiresolve",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["Intercept and modify module request information before module resolution begins. The same as Rspack's ",(0,i.jsx)(n.a,{href:"https://rspack.dev/api/plugin-api/normal-module-factory-hooks#resolve",target:"_blank",rel:"noopener noreferrer",children:"normalModuleFactory.hooks.resolve"})," hook."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Version:"})," ",(0,i.jsx)(n.code,{children:">= 1.0.17"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"function ResolveFn(handler: ResolveHandler): void;\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"example-1",children:["Example",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#example-1",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Modify the request of ",(0,i.jsx)(n.code,{children:"a.js"})," file："]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.resolve(({ resolveData }) => {\n  if (resolveData.request === './a.js') {\n    resolveData.request = './b.js';\n  }\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"handler-param-1",children:["Handler Param",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#handler-param-1",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"handler"})," parameter is a callback function that receives a module require information and allows you to modify it."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type ResolveHandler = (context: {\n  resolveData: Rspack.ResolveData;\n  compiler: Rspack.Compiler;\n  compilation: Rspack.Compilation;\n  environment: EnvironmentContext;\n}) => Promise<void> | void;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"handler"})," function provides the following parameters:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"resolveData"}),": Module request information. For details, please refer to ",(0,i.jsx)(n.a,{href:"https://rspack.dev/api/plugin-api/normal-module-factory-hooks#resolve",target:"_blank",rel:"noopener noreferrer",children:"Rspack - resolve hook"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"compiler"}),": The Compiler object of Rspack."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"compilation"}),": The Compilation object of Rspack."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"environment"}),": The environment context of the current build."]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"apiprocessassets",children:["api.processAssets",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#apiprocessassets",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["Modify assets before emitting, the same as Rspack's ",(0,i.jsx)(n.a,{href:"https://rspack.dev/api/plugin-api/compilation-hooks#processassets",target:"_blank",rel:"noopener noreferrer",children:"compilation.hooks.processAssets"})," hook."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Version:"})," ",(0,i.jsx)(n.code,{children:">= 1.0.0"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"function processAssets(\n  descriptor: ProcessAssetsDescriptor,\n  handler: ProcessAssetsHandler,\n): void;\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"api.processAssets"})," accepts two params:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"descriptor"}),": an object to describes the stage and matching conditions that trigger ",(0,i.jsx)(n.code,{children:"processAssets"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"handler"}),": A callback function that receives the assets object and allows you to modify it."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"example-2",children:["Example",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#example-2",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Emit a new asset in the ",(0,i.jsx)(n.code,{children:"additional"})," stage:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.processAssets(\n  { stage: 'additional' },\n  ({ assets, sources, compilation }) => {\n    const source = new sources.RawSource('This is a new asset!');\n    compilation.emitAsset('new-asset.txt', source);\n  },\n);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Updating an existing asset:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.processAssets(\n  { stage: 'additions' },\n  ({ assets, sources, compilation }) => {\n    const asset = assets['foo.js'];\n    if (!asset) {\n      return;\n    }\n\n    const oldContent = asset.source();\n    const newContent = oldContent + '\\nconsole.log(\"hello world!\")';\n    const source = new sources.RawSource(newContent);\n\n    compilation.updateAsset(assetName, source);\n  },\n);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Removing an asset:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.processAssets({ stage: 'optimize' }, ({ assets, compilation }) => {\n  const assetName = 'unwanted-script.js';\n  if (assets[assetName]) {\n    compilation.deleteAsset(assetName);\n  }\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"descriptor-param-1",children:["Descriptor Param",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#descriptor-param-1",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["The descriptor parameter is an object to describes the stage and matching conditions that trigger ",(0,i.jsx)(n.code,{children:"processAssets"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type ProcessAssetsDescriptor = {\n  stage: ProcessAssetsStage;\n  targets?: RsbuildTarget[];\n  environments?: string[];\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"descriptor"})," param supports the following properties:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"stage"}),": Rspack internally divides ",(0,i.jsx)(n.code,{children:"processAssets"})," into multiple stages (refer to ",(0,i.jsx)(n.a,{href:"#process-assets-stages",children:"process assets stages"}),"). You can choose the appropriate stage based on the operations you need to perform."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.processAssets({ stage: 'additional' }, ({ assets }) => {\n  // ...\n});\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"targets"}),": Matches the Rsbuild ",(0,i.jsx)(n.a,{href:"/config/output/target",children:"output.target"}),", and applies the current processAssets function only to the matched targets."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.processAssets({ stage: 'additional', targets: ['web'] }, ({ assets }) => {\n  // ...\n});\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"environments"}),": matches the Rsbuild ",(0,i.jsx)(n.a,{href:"/guide/advanced/environments",children:"environment"})," name, and applies the current processAssets function only to the matched environments."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"api.processAssets(\n  { stage: 'additional', environments: ['web'] },\n  ({ assets }) => {\n    // ...\n  },\n);\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"handler-param-2",children:["Handler Param",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#handler-param-2",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"handler"})," parameter is a callback function that receives an assets object and allows you to modify it."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type ProcessAssetsHandler = (context: {\n  assets: Record<string, Rspack.sources.Source>;\n  compiler: Rspack.Compiler;\n  compilation: Rspack.Compilation;\n  environment: EnvironmentContext;\n  sources: RspackSources;\n}) => Promise<void> | void;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"handler"})," function provides the following parameters:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"assets"}),": An object where key is the asset's pathname, and the value is data of the asset represented by the ",(0,i.jsx)(n.a,{href:"https://github.com/webpack/webpack-sources#source",target:"_blank",rel:"noopener noreferrer",children:"Source"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"compiler"}),": The Compiler object of Rspack."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"compilation"}),": The Compilation object of Rspack."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"environment"}),": The ",(0,i.jsx)(n.a,{href:"/api/javascript-api/environment-api#environment-context",children:"environment context"})," of the current build."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sources"}),": The ",(0,i.jsx)(n.a,{href:"https://github.com/webpack/webpack-sources#source",target:"_blank",rel:"noopener noreferrer",children:"Rspack Sources"})," object, which contains multiple classes which represent a Source."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"process-assets-stages",children:["Process assets stages",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#process-assets-stages",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Here's the list of supported stages. Rspack will execute these stages sequentially from top to bottom. Please select the appropriate stage based on the operation you need to perform."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"additional"})," — add additional assets to the compilation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pre-process"})," — basic preprocessing of the assets."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"derived"})," — derive new assets from the existing assets."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"additions"})," — add additional sections to the existing assets e.g. banner or initialization code."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"optimize"})," — optimize existing assets in a general way."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"optimize-count"})," — optimize the count of existing assets, e.g. by merging them."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"optimize-compatibility"})," — optimize the compatibility of existing assets, e.g. add polyfills or vendor prefixes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"optimize-size"})," — optimize the size of existing assets, e.g. by minimizing or omitting whitespace."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dev-tooling"})," — add development tooling to the assets, e.g. by extracting a source map."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"optimize-inline"})," — optimize the numbers of existing assets by inlining assets into other assets."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"summarize"})," — summarize the list of existing assets."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"optimize-hash"})," — optimize the hashes of the assets, e.g. by generating real hashes of the asset content."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"optimize-transfer"})," — optimize the transfer of existing assets, e.g. by preparing a compressed (gzip) file as separate asset."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"analyse"})," — analyze the existing assets."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"report"})," — creating assets for the reporting purposes."]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"apiexpose",children:["api.expose",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#apiexpose",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Used for plugin communication."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"api.expose"})," can explicitly expose some properties or methods of the current plugin, and other plugins can get these APIs through ",(0,i.jsx)(n.code,{children:"api.useExposed"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"/**\n * @param id Unique identifier, using Symbol can avoid naming conflicts\n * @param api Properties or methods to be exposed, it is recommended to use object format\n */\nfunction expose<T = any>(id: string | symbol, api: T): void;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const pluginParent = () => ({\n  name: 'plugin-parent',\n  setup(api) {\n    api.expose('plugin-parent', {\n      value: 1,\n      double: (val: number) => val * 2,\n    });\n  },\n});\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"apiuseexposed",children:["api.useExposed",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#apiuseexposed",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Used for plugin communication."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"api.useExposed"})," can get the properties or methods exposed by other plugins."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"/**\n * @param id Unique identifier\n * @returns The properties or methods obtained\n */\nfunction useExposed<T = any>(id: string | symbol): T | undefined;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const pluginChild = () => ({\n  name: 'plugin-child',\n  pre: ['plugin-parent'],\n  setup(api) {\n    const parentApi = api.useExposed('plugin-parent');\n    if (parentApi) {\n      console.log(parentApi.value); // -> 1\n      console.log(parentApi.double(1)); // -> 2\n    }\n  },\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"identifiers",children:["Identifiers",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#identifiers",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"You can use Symbol as a unique identifier to avoid potential naming conflicts:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// pluginParent.ts\nexport const PARENT_API_ID = Symbol('plugin-parent');\n\nconst pluginParent = () => ({\n  name: 'plugin-parent',\n  setup(api) {\n    api.expose(PARENT_API_ID, {\n      // some api\n    });\n  },\n});\n\n// pluginChild.ts\nimport { PARENT_API_ID } from './pluginParent';\n\nconst pluginChild = () => ({\n  name: 'plugin-child',\n  setup(api) {\n    const parentApi = api.useExposed(PARENT_API_ID);\n    if (parentApi) {\n      console.log(parentApi);\n    }\n  },\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"type-declaration",children:["Type Declaration",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#type-declaration",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"You can declare types through the generics of the function:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// pluginParent.ts\nexport type ParentAPI = {\n  // ...\n};\n\n// pluginChild.ts\nimport type { ParentAPI } from './pluginParent';\n\nconst pluginChild = () => ({\n  name: 'plugin-child',\n  setup(api) {\n    const parentApi = api.useExposed<ParentAPI>(PARENT_API_ID);\n    if (parentApi) {\n      console.log(parentApi);\n    }\n  },\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"execution-order",children:["Execution Order",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#execution-order",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"When communicating between plugins, you need to be aware of the order in which the plugins are executed."}),"\n",(0,i.jsxs)(n.p,{children:["For example, in the above example, if ",(0,i.jsx)(n.code,{children:"pluginParent"})," is not registered, or registers after ",(0,i.jsx)(n.code,{children:"pluginChild"}),", then ",(0,i.jsx)(n.code,{children:"api.useExposed('plugin-parent')"})," will return an ",(0,i.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["You can use the ",(0,i.jsx)(n.code,{children:"pre"}),", ",(0,i.jsx)(n.code,{children:"post"})," options of the plugin object, and the ",(0,i.jsx)(n.code,{children:"order"})," option of the plugin hook to ensure the order is correct."]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}let d=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["en%2Fplugins%2Fdev%2Fcore.mdx"]={toc:[{text:"RsbuildPlugin",id:"rsbuildplugin",depth:2},{text:"Pre-Plugins",id:"pre-plugins",depth:3},{text:"Post-Plugins",id:"post-plugins",depth:3},{text:"Removing Plugins",id:"removing-plugins",depth:3},{text:"api.context",id:"apicontext",depth:2},{text:"api.getRsbuildConfig",id:"apigetrsbuildconfig",depth:2},{text:"api.getNormalizedConfig",id:"apigetnormalizedconfig",depth:2},{text:"api.isPluginExists",id:"apiispluginexists",depth:2},{text:"api.transform",id:"apitransform",depth:2},{text:"Example",id:"example",depth:3},{text:"Descriptor Param",id:"descriptor-param",depth:3},{text:"Handler Param",id:"handler-param",depth:3},{text:"Difference with loader",id:"difference-with-loader",depth:3},{text:"api.resolve",id:"apiresolve",depth:2},{text:"Example",id:"example-1",depth:3},{text:"Handler Param",id:"handler-param-1",depth:3},{text:"api.processAssets",id:"apiprocessassets",depth:2},{text:"Example",id:"example-2",depth:3},{text:"Descriptor Param",id:"descriptor-param-1",depth:3},{text:"Handler Param",id:"handler-param-2",depth:3},{text:"Process assets stages",id:"process-assets-stages",depth:3},{text:"api.expose",id:"apiexpose",depth:2},{text:"api.useExposed",id:"apiuseexposed",depth:2},{text:"Identifiers",id:"identifiers",depth:3},{text:"Type Declaration",id:"type-declaration",depth:3},{text:"Execution Order",id:"execution-order",depth:3}],title:"Plugin Core",frontmatter:{}}},32634:function(e,n,s){s.d(n,{Z:function(){return a}});var i=s(55367),r=s(26971);function t(e){let n=Object.assign({p:"p",a:"a",code:"code",ul:"ul",li:"li",strong:"strong",pre:"pre"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Get the all normalized Rsbuild config or the Rsbuild config of a specified environment, this method must be called after the ",(0,i.jsx)(n.a,{href:"/plugins/dev/hooks#modifyrsbuildconfig",children:"modifyRsbuildConfig"})," hook is executed."]}),"\n",(0,i.jsxs)(n.p,{children:["Compared with the ",(0,i.jsx)(n.code,{children:"api.getRsbuildConfig"})," method, the config returned by this method has been normalized, and the type definition of the config will be narrowed. For example, the ",(0,i.jsx)(n.code,{children:"undefined"})," type of ",(0,i.jsx)(n.code,{children:"config.html"})," will be removed."]}),"\n",(0,i.jsx)(n.p,{children:"It is recommended to use this method to get the Rsbuild config."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"/** Get the Rsbuild configuration of the specified environment */\nfunction GetNormalizedConfig(options: {\n  environment: string;\n}): Readonly<NormalizedEnvironmentConfig>;\n\n/** Get all Rsbuild configurations */\nfunction GetNormalizedConfig(): Readonly<NormalizedConfig>;\n"})})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}let a=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["en%2Fshared%2FgetNormalizedConfig.mdx"]={toc:[],title:"",frontmatter:{}}},10904:function(e,n,s){s.d(n,{Z:function(){return a}});var i=s(55367),r=s(26971);function t(e){let n=Object.assign({p:"p",code:"code",ul:"ul",li:"li",strong:"strong",pre:"pre"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Get the Rsbuild config, this method must be called after the ",(0,i.jsx)(n.code,{children:"modifyRsbuildConfig"})," hook is executed."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type GetRsbuildConfig = {\n  (): Readonly<RsbuildConfig>;\n  (type: 'original' | 'current'): Readonly<RsbuildConfig>;\n  (type: 'normalized'): NormalizedConfig;\n};\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["You can specify the type of Rsbuild config to read by using the ",(0,i.jsx)(n.code,{children:"type"})," parameter:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// Get the original Rsbuild config defined by the user.\ngetRsbuildConfig('original');\n\n// Get the current Rsbuild config.\n// The content of this config will change at different execution stages of Rsbuild.\n// For example, the content of the current Rsbuild config will be modified after running the `modifyRsbuildConfig` hook.\ngetRsbuildConfig('current');\n\n// Get the normalized Rsbuild config.\n// This method must be called after the `modifyRsbuildConfig` hook has been executed.\n// It is equivalent to the `getNormalizedConfig` method.\ngetRsbuildConfig('normalized');\n"})})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}let a=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["en%2Fshared%2FgetRsbuildConfig.mdx"]={toc:[],title:"",frontmatter:{}}},58324:function(e,n,s){s.d(n,{Z:function(){return a}});var i=s(55367),r=s(26971);function t(e){let n=Object.assign({p:"p",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Determines whether a plugin has been registered."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"function IsPluginExists(pluginName: string): boolean;\n"})})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}let a=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["en%2Fshared%2FisPluginExists.mdx"]={toc:[],title:"",frontmatter:{}}}}]);