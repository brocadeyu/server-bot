"use strict";(self.webpackChunkrsbuild_website=self.webpackChunkrsbuild_website||[]).push([["2266"],{25211:function(e,n,r){r.r(n),r.d(n,{default:function(){return o}});var s=r(55367),i=r(26971);function t(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",p:"p",h2:"h2",h3:"h3",div:"div"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"performancepreconnect",children:["performance.preconnect",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#performancepreconnect",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type Preconnect =\n  | Array<\n      | string\n      | {\n          href: string;\n          crossorigin?: boolean;\n        }\n    >\n  | undefined;\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Default:"})," ",(0,s.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Injects ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/preconnect",target:"_blank",rel:"noopener noreferrer",children:(0,s.jsx)(n.code,{children:'<link rel="preconnect">'})})," tags into the HTML file."]}),"\n",(0,s.jsxs)(n.h2,{id:"when-to-use",children:["When to use",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#when-to-use",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"preconnect"})," keyword for the rel attribute of the ",(0,s.jsx)(n.code,{children:"<link>"})," element is a hint to browsers that the user is likely to need resources from the target resource's origin, and therefore the browser can likely improve the user experience by preemptively initiating a connection to that origin."]}),"\n",(0,s.jsx)(n.p,{children:"Preconnecting speeds up future loads from a given origin by preemptively performing part or all of the handshake (DNS+TCP for HTTP, and DNS+TCP+TLS for HTTPS origins)."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:'<link rel="preconnect">'})," will provide a benefit to any future cross-origin HTTP request, navigation or subresource. It has no benefit on same-origin requests because the connection is already open."]}),"\n",(0,s.jsxs)(n.p,{children:["If a page needs to make connections to many third-party domains, preconnecting them all can be counterproductive. The ",(0,s.jsx)(n.code,{children:'<link rel="preconnect">'})," hint is best used for only the most critical connections. For the others, just use ",(0,s.jsx)(n.a,{href:"/config/performance/dns-prefetch",children:(0,s.jsx)(n.code,{children:'<link rel="dns-prefetch">'})})," to save time on the first step â€” the DNS lookup."]}),"\n",(0,s.jsxs)(n.h2,{id:"example",children:["Example",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#example",children:"#"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  performance: {\n    preconnect: ['https://example.com/'],\n  },\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"The generated HTML tag is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<link ref="preconnect" href="https://example.com" />\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"options",children:["Options",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#options",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"href",children:["href",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#href",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type:"})," ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Default:"})," ",(0,s.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Specify the URL to preconnect to."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  performance: {\n    // Equivalent to `preconnect: ['https://example.com/'],`\n    preconnect: [\n      {\n        href: 'https://example.com/',\n      },\n    ],\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"crossorigin",children:["crossorigin",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#crossorigin",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type:"})," ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Default:"})," ",(0,s.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Specify whether to add the ",(0,s.jsx)(n.code,{children:"crossorigin"})," attribute."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export default {\n  performance: {\n    preconnect: [\n      {\n        href: 'https://example.com/',\n        crossorigin: true,\n      },\n    ],\n  },\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"The generated HTML tag is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<link rel="preconnect" href="https://example.com" crossorigin />\n'})}),"\n",(0,s.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,s.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,s.jsx)(n.div,{className:"rspress-directive-content",children:(0,s.jsxs)(n.p,{children:["Refer to this ",(0,s.jsx)(n.a,{href:"https://webmasters.stackexchange.com/questions/89466/when-should-i-use-the-crossorigin-attribute-on-a-preconnect-link",target:"_blank",rel:"noopener noreferrer",children:"link"})," to understand the use cases of the ",(0,s.jsx)(n.code,{children:"crossorigin"})," attribute.\n"]})})]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}let o=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["en%2Fconfig%2Fperformance%2Fpreconnect.mdx"]={toc:[{text:"When to use",id:"when-to-use",depth:2},{text:"Example",id:"example",depth:2},{text:"Options",id:"options",depth:2},{text:"href",id:"href",depth:3},{text:"crossorigin",id:"crossorigin",depth:3}],title:"performance.preconnect",frontmatter:{}}}}]);