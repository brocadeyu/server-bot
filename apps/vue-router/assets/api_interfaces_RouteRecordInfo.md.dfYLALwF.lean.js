import{_ as a,c as t,a2 as o,o as r}from"./chunks/framework.Cl57Dsmt.js";const l=JSON.parse('{"title":"Interface: RouteRecordInfo<Name, Path, ParamsRaw, Params, Meta>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/RouteRecordInfo.md","filePath":"api/interfaces/RouteRecordInfo.md"}'),s={name:"api/interfaces/RouteRecordInfo.md"};function n(c,e,d,m,h,i){return r(),t("div",null,e[0]||(e[0]=[o('<p><a href="./../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../">API Documentation</a> / RouteRecordInfo</p><h1 id="Interface-RouteRecordInfo-Name-Path-ParamsRaw-Params-Meta-" tabindex="-1">Interface: RouteRecordInfo&lt;Name, Path, ParamsRaw, Params, Meta&gt; <a class="header-anchor" href="#Interface-RouteRecordInfo-Name-Path-ParamsRaw-Params-Meta-" aria-label="Permalink to &quot;Interface: RouteRecordInfo\\&lt;Name, Path, ParamsRaw, Params, Meta\\&gt;&quot;">​</a></h1><p>Helper type to define a Typed <code>RouteRecord</code></p><h2 id="See" tabindex="-1">See <a class="header-anchor" href="#See" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="./../type-aliases/RouteRecord.html">RouteRecord</a></p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Name</strong> <em>extends</em> <code>string</code> | <code>symbol</code> = <code>string</code></p><p>• <strong>Path</strong> <em>extends</em> <code>string</code> = <code>string</code></p><p>• <strong>ParamsRaw</strong> <em>extends</em> <a href="./../type-aliases/RouteParamsRawGeneric.html"><code>RouteParamsRawGeneric</code></a> = <a href="./../type-aliases/RouteParamsRawGeneric.html"><code>RouteParamsRawGeneric</code></a></p><p>• <strong>Params</strong> <em>extends</em> <a href="./../type-aliases/RouteParamsGeneric.html"><code>RouteParamsGeneric</code></a> = <a href="./../type-aliases/RouteParamsGeneric.html"><code>RouteParamsGeneric</code></a></p><p>• <strong>Meta</strong> <em>extends</em> <a href="./RouteMeta.html"><code>RouteMeta</code></a> = <a href="./RouteMeta.html"><code>RouteMeta</code></a></p><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="meta" tabindex="-1">meta <a class="header-anchor" href="#meta" aria-label="Permalink to &quot;meta&quot;">​</a></h3><blockquote><p><strong>meta</strong>: <code>Meta</code></p></blockquote><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><strong>name</strong>: <code>Name</code></p></blockquote><hr><h3 id="params" tabindex="-1">params <a class="header-anchor" href="#params" aria-label="Permalink to &quot;params&quot;">​</a></h3><blockquote><p><strong>params</strong>: <code>Params</code></p></blockquote><hr><h3 id="paramsRaw" tabindex="-1">paramsRaw <a class="header-anchor" href="#paramsRaw" aria-label="Permalink to &quot;paramsRaw&quot;">​</a></h3><blockquote><p><strong>paramsRaw</strong>: <code>ParamsRaw</code></p></blockquote><hr><h3 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h3><blockquote><p><strong>path</strong>: <code>Path</code></p></blockquote>',28)]))}const u=a(s,[["render",n]]);export{l as __pageData,u as default};
