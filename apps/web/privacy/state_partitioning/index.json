{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"State Partitioning","mdn_url":"/en-US/docs/Web/Privacy/State_Partitioning","locale":"en-US","native":"English (US)","sidebarHTML":"<ul><li><a href=\"/en-US/docs/Web/Privacy/Firefox_tracking_protection\">Firefox tracking protection</a></li><li><a href=\"/en-US/docs/Web/Privacy/Privacy_sandbox\">Privacy sandbox</a><ul><li><a href=\"/en-US/docs/Web/Privacy/Privacy_sandbox/Enrollment\">Privacy sandbox enrollment</a></li><li><a href=\"/en-US/docs/Web/Privacy/Privacy_sandbox/Partitioned_cookies\">Cookies Having Independent Partitioned State (CHIPS)</a></li></ul></li><li><a href=\"/en-US/docs/Web/Privacy/Redirect_tracking_protection\">Redirect tracking protection</a></li><li><em><a href=\"/en-US/docs/Web/Privacy/State_Partitioning\" aria-current=\"page\">State Partitioning</a></em></li><li><a href=\"/en-US/docs/Web/Privacy/Storage_Access_Policy\">Storage access policy: Block cookies from trackers</a><ul><li><a href=\"/en-US/docs/Web/Privacy/Storage_Access_Policy/Errors\">Errors</a></li></ul></li><li><a href=\"/en-US/docs/Web/Privacy/Third-party_cookies\">Third-party cookies</a></li></ul>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>State Partitioning</strong> is a broad effort by Mozilla to rework how Firefox manages client-side state (i.e., data stored in the browser) to mitigate the ability of websites to abuse state for cross-site tracking, i.e. via <a href=\"/en-US/docs/Web/Privacy/Third-party_cookies\">third-party cookies</a>.</p>\n<p>\n  This effort aims to achieve that by providing a partitioned storage location to every website a user visits.\n  This article gives an overview of the mechanism, lists the affected APIs and explains how to debug affected sites.\n</p>\n<p>From Firefox 103, State Partitioning is turned on by default.</p>"}},{"type":"prose","value":{"id":"motivation","title":"Motivation","isH3":false,"content":""}},{"type":"prose","value":{"id":"cross-site_tracking_using_shared_state","title":"Cross-site tracking using shared state","isH3":true,"content":"<p>\n  Browsers traditionally key client-side state by the origin (or sometimes registrable domain) of the location a resource was loaded from.\n  For example, the cookies, localStorage objects, and caches available to an iframe loaded from <code>https://example.com/hello.html</code> will be keyed by <code>example.com</code>.\n  This is true regardless of whether the browser is currently loading resources from that domain as a <em>first-party</em>\n  resources or as an embedded <em>third party</em> resources.\n  Trackers have taken advantage of this cross-site state to store user identifiers and access them across websites.\n  The example below shows how <code>example.com</code> can use its cross-site state (in this instance, cookies) to track a user across its own site as well as <code>A.example</code> and <code>B.example</code>.\n</p>\n<p>\n  <img src=\"/en-US/docs/Web/Privacy/State_Partitioning/example-cross-site-state.png\" alt=\"An example of cross-site state\" width=\"635\" height=\"440\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"past_approaches_to_blocking_cross-site_tracking","title":"Past approaches to blocking cross-site tracking","isH3":true,"content":"<p>\n  Firefox's past cookie policies attempt to mitigate tracking by blocking access to some storage APIs (e.g., cookies and localStorage) for certain domains under certain conditions.\n  For example, our \"block all third-party cookies\" policy will prevent all domains from accessing certain storage APIs when loaded in a third-party context.\n  Our current <a href=\"/en-US/docs/Web/Privacy/Storage_Access_Policy\">default cookie policy</a> blocks access in a third-party context only for domains classified as trackers.\n</p>"}},{"type":"prose","value":{"id":"state_partitioning","title":"State Partitioning","isH3":false,"content":"<p>\n  State Partitioning is a different approach to preventing cross-site tracking.\n  Rather than block access to certain stateful APIs in a third-party context, Firefox provides embedded resources with a separate storage bucket for every top-level website.\n  More specifically, Firefox double-keys all client-side state by the <a href=\"https://html.spec.whatwg.org/multipage/browsers.html#origin\" class=\"external\" target=\"_blank\">origin</a> of the resource being loaded and by the top-level <a href=\"https://html.spec.whatwg.org/multipage/browsers.html#site\" class=\"external\" target=\"_blank\">site</a>.\n  In most instances, the top-level site is the scheme and <a href=\"/en-US/docs/Glossary/eTLD\">eTLD+1</a> of the top-level page being visited by the user.\n</p>\n<p>\n  In the example below <code>example.com</code> is embedded in <code>A.example</code> and <code>B.example</code>.\n  However, since storage is partitioned, there are three distinct storage buckets (instead of one).\n  The tracker can still access storage, but since every storage bucket is additionally keyed under the top-level site, the data it has access to on A will be different from the data on B.\n  This will prevent a tracker from storing an identifier in their cookies when visited directly and then retrieving that identifier when embedded in other websites.\n</p>\n<p>\n  <img src=\"/en-US/docs/Web/Privacy/State_Partitioning/example-state-partitioning.png\" alt=\"An example of state partitioning\" width=\"672\" height=\"401\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"standardization","title":"Standardization","isH3":false,"content":"<p>\n  The <a href=\"https://privacycg.github.io/\" class=\"external\" target=\"_blank\">Privacy Community Group</a> has a Work Item for <a href=\"https://privacycg.github.io/storage-partitioning/\" class=\"external\" target=\"_blank\">Client-Side Storage Partitioning</a>.\n  This serves as an overview of the standardization efforts for storage partitioning in the individual standards affected.\n  We intend to align our state partitioning implementation with these efforts as the Work Item is standardized.\n</p>"}},{"type":"prose","value":{"id":"status_of_partitioning_in_firefox","title":"Status of partitioning in Firefox","isH3":true,"content":"<ul>\n  <li><a href=\"#network_partitioning\"><strong>Network Partitioning</strong></a>: Enabled by default for all users since Firefox 85.</li>\n  <li><a href=\"#dynamic_partitioning\"><strong>Dynamic Partitioning</strong></a>: Enabled by default for all users since Firefox 103. Prior to that:\n    <ul>\n      <li>Since Firefox 86: Enabled for users that have <a href=\"https://support.mozilla.org/en-US/kb/enhanced-tracking-protection-firefox-desktop#w_strict-enhanced-tracking-protection\" class=\"external\" target=\"_blank\">\"Strict\" privacy protections</a> enabled.</li>\n      <li>Since Firefox 90: Enabled in private browsing.</li>\n    </ul>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"static_partitioning","title":"Static partitioning","isH3":false,"content":""}},{"type":"prose","value":{"id":"storage_partitioning","title":"Storage partitioning","isH3":true,"content":"<p>\n  To prevent JavaScript-accessible storage APIs from being used for cross-site tracking, accessible storage is partitioned by top-level site.\n  This mechanism means that, generally, a third-party embedded in one top-level site cannot access data stored under another top-level site.\n</p>"}},{"type":"prose","value":{"id":"storage_apis","title":"Storage APIs","isH3":true,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Window/localStorage\">localStorage</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Window/sessionStorage\">sessionStorage</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Cache\">DOM Cache</a></li>\n  <li><a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n  <li><a href=\"/en-US/docs/Web/API/BroadcastChannel\">Broadcast Channel</a></li>\n  <li><a href=\"/en-US/docs/Web/API/SharedWorker\">Shared Workers</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\">Service Workers</a></li>\n</ul>"}},{"type":"prose","value":{"id":"network_partitioning","title":"Network partitioning","isH3":true,"content":"<p>\n  Networking-related APIs are not intended to be used for websites to store data, but they can be <a href=\"https://blog.mozilla.org/security/2021/01/26/supercookie-protections/\" class=\"external\" target=\"_blank\">abused</a> for cross-site tracking.\n  As such, the following network APIs and caches are <strong>permanently</strong> partitioned by the top-level site.\n</p>\n<div class=\"notecard note\">\n  <p>\n    <strong>Note:</strong> Network Partitioning is permanent.\n    Websites can't control or relax these restrictions.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"network_apis","title":"Network APIs","isH3":true,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/HTTP/Caching\">HTTP Cache</a></li>\n  <li>Image Cache</li>\n  <li>Favicon Cache</li>\n  <li>Connection Pooling</li>\n  <li>Stylesheet Cache</li>\n  <li><a href=\"/en-US/docs/Glossary/DNS\">DNS</a></li>\n  <li>HTTP Authentication</li>\n  <li><a href=\"/en-US/docs/Web/HTTP/Headers/Alt-Svc\">Alt-Svc</a></li>\n  <li>Speculative Connections</li>\n  <li>Fonts &amp; Font Cache</li>\n  <li><a href=\"/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security\">HSTS</a></li>\n  <li>OCSP</li>\n  <li>Intermediate CA Cache</li>\n  <li>TLS Client Certificates</li>\n  <li>TLS Session Identifiers</li>\n  <li>Prefetch</li>\n  <li>Preconnect</li>\n  <li><a href=\"/en-US/docs/Glossary/Preflight_request\">CORS-preflight</a> Cache</li>\n  <li>WebRTC deviceID</li>\n</ul>"}},{"type":"prose","value":{"id":"dynamic_partitioning","title":"Dynamic partitioning","isH3":false,"content":"<p>Generally, if accessible storage is partitioned by top-level site, access to a third-parties unpartitioned cookies can still be granted if the Storage Access API is supported:</p>\n<ul>\n  <li>using the <a href=\"#storage_access_api\">Storage Access API</a>.</li>\n  <li>automatically, such as for third-parties providing federated login.</li>\n</ul>\n<p>Details about automatic grants are provided in the <a href=\"#storage_access_heuristics\">Storage Access Heuristics</a> section.</p>"}},{"type":"prose","value":{"id":"dynamically-partitioned_apis","title":"Dynamically-partitioned APIs","isH3":true,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Document/cookie\">Cookies</a></li>\n</ul>"}},{"type":"prose","value":{"id":"storage_access_heuristics","title":"Storage access heuristics","isH3":true,"content":"<p>\n  To improve web compatibility, Firefox currently includes some heuristics to grant unpartitioned access to cookies automatically to third parties that receive user interaction.\n  These heuristics are intended to allow some third-party integrations that are common on the web to continue to function.\n</p>\n<div class=\"notecard warning\">\n  <p>\n    <strong>Warning:</strong> Storage access heuristics are a transitional feature meant to prevent website breakage.\n    They should not be relied upon for current and future web development.\n  </p>\n</div>\n<h4 id=\"opener_heuristics\">Opener Heuristics</h4>\n<ul>\n  <li>When a partitioned third-party opens a pop-up window that has <a href=\"/en-US/docs/Web/API/Window/opener\">opener access</a> to the originating document, the third-party is granted storage access to its embedder for 30 days.</li>\n  <li>When a first-party <code>a.example</code> opens a third-party pop-up <code>b.example</code>, <code>b.example</code> is granted third-party storage access to <code>a.example</code> for 30 days.</li>\n</ul>\n<div class=\"notecard note\">\n  <p><strong>Note:</strong> For third-parties which abuse these heuristic for tracking purposes, we may require user interaction with the popup before storage access is granted.</p>\n</div>\n<h4 id=\"redirect_heuristics\">Redirect Heuristics</h4>\n<ul>\n  <li>\n    If a site <code>b.example</code> redirects to <code>a.example</code>, then <code>b.example</code> receives storage access to its embedder <code>a.example</code> if both <code>a.example</code> and <code>b.example</code> have been visited and interacted with within the last 10 minutes.\n    This storage access will be granted for 15 minutes.\n  </li>\n  <li>If a tracker <code>tracker.example</code> (as classified by the Enhanced Tracking Protection) redirects to a non-tracker <code>a.example</code> and <code>tracker.example</code> received user interaction as a first-party within the last 45 days, <code>tracker.example</code> is granted storage access to <code>a.example</code> for 15 minutes.</li>\n</ul>"}},{"type":"prose","value":{"id":"storage_access_api","title":"Storage Access API","isH3":false,"content":"<p>\n  Third-party frames may use\n  <a href=\"/en-US/docs/Web/API/Document/requestStorageAccess\">document.requestStorageAccess</a> to request unpartitioned access to cookie through the <a href=\"/en-US/docs/Web/API/Storage_Access_API\">Storage Access API</a>.\n  Once granted, the requesting party will gain access to its entire first-party cookies (i.e., the cookies it would have access to if visited as a first-party).\n</p>\n<div class=\"notecard warning\">\n  <p>\n    <strong>Warning:</strong> When storage access is granted there may still be references to the partitioned storage.\n    However, sites shouldn't rely on being able to use partitioned and unpartitioned cookies at the same time.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"debugging","title":"Debugging","isH3":false,"content":"<p>\n  We encourage site owners to test their sites, particularly those that rely on third-party content integrations.\n  There are several features in Firefox to make testing easier.\n</p>"}},{"type":"prose","value":{"id":"logging","title":"Logging","isH3":true,"content":"<p>\n  Here is an overview of the messages logged to the web console when interacting with storage in a third-party context.\n  In the following examples, <code>a.example</code> is the top-level site which embeds the third-party frame <code>b.example</code>.\n</p>\n<figure class=\"table-container\"><table>\n  <thead>\n    <tr>\n      <th>Reason</th>\n      <th>Console Message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Storage of a third-party frame is partitioned</td>\n      <td>Partitioned cookie or storage access was provided to \"b.example\" because it is loaded in the third-party context and storage partitioning is enabled.</td>\n    </tr>\n    <tr>\n      <td>Access to unpartitioned cookies is granted through <a href=\"#storage_access_heuristics\">Storage access heuristics</a></td>\n      <td>Storage access automatically granted for First-Party isolation \"b.example\" on \"a.example\".</td>\n    </tr>\n    <tr>\n      <td>Access to unpartitioned cookies is granted via the <a href=\"/en-US/docs/Web/API/Document/requestStorageAccess\">StorageAccessAPI</a></td>\n      <td>Storage access granted for origin \"b.example\" on \"a.example\".</td>\n    </tr>\n  </tbody>\n</table></figure>"}},{"type":"prose","value":{"id":"clear_third-party_storage-access","title":"Clear third-party storage-access","isH3":true,"content":"<p>\n  If a third-party iframe is granted storage access to the parent context, Firefox sets a permission.\n  To revoke access you can clear the permission via the <a href=\"https://support.mozilla.org/en-US/kb/site-information-panel\" class=\"external\" target=\"_blank\">Site Information Panel</a> in the permissions section under \"Cross-site Cookies\".\n</p>"}},{"type":"prose","value":{"id":"test_preferences","title":"Test Preferences","isH3":true,"content":"<div class=\"notecard warning\">\n  <p><strong>Warning:</strong> Make sure to set these preferences in a separate Firefox profile or reset them after testing.</p>\n</div>\n<h4 id=\"disable_web_compatibility_features\">Disable Web Compatibility Features</h4>\n<p>\n  Setting <code>privacy.antitracking.enableWebcompat</code> to <code>false</code> will <strong>disable</strong> all ETP and State Partitioning web-compatibility features.\n  Disabling these features can be useful when testing, to ensure your website is fully compatible with the State Partitioning mechanism in Firefox, and it does not rely on temporary heuristics.\n</p>\n<p>Features disabled by the pref include:</p>\n<ul>\n  <li><a href=\"#storage_access_heuristics\">Storage access heuristics</a>: Unpartitioned access to cookies can only be acquired via the Storage Access API.</li>\n  <li>Automatic storage access grants: <a href=\"/en-US/docs/Web/API/Document/requestStorageAccess\">document.requestStorageAccess</a> will always prompt the user.</li>\n  <li><a href=\"https://blog.mozilla.org/security/2021/07/13/smartblock-v2/\" class=\"external\" target=\"_blank\">SmartBlock's \"unblock on opt-in\" feature</a>, which will allow certain trackers when users interact with them.</li>\n  <li>Any temporary <a href=\"https://wiki.mozilla.org/Security/Anti_tracking_policy#Temporary_Web_Compatibility_Interventions\" class=\"external\" target=\"_blank\">anti-tracking exceptions</a> granted to websites via the skip-listing mechanism.</li>\n</ul>\n<h4 id=\"disable_heuristics\">Disable Heuristics</h4>\n<p>The following preferences can be used to disable individual storage access heuristics via the <a href=\"https://support.mozilla.org/en-US/kb/about-config-editor-firefox\" class=\"external\" target=\"_blank\">config editor</a>:</p>\n<ul>\n  <li>Enable / disable the <a href=\"#redirect_heuristics\">redirect heuristics</a>: <code>privacy.restrict3rdpartystorage.heuristic.recently_visited</code>, <code>privacy.restrict3rdpartystorage.heuristic.redirect</code></li>\n  <li>Enable / disable the <a href=\"#opener_heuristics\">window open heuristics</a>: <code>privacy.restrict3rdpartystorage.heuristic.window_open</code>, <code>privacy.restrict3rdpartystorage.heuristic.opened_window_after_interaction</code></li>\n</ul>\n<h4 id=\"disable_network_partitioning\">Disable Network Partitioning</h4>\n<p>Network partitioning can be disabled with the <code>privacy.partition.network_state</code> pref.</p>\n<h4 id=\"disable_dynamic_state_partitioning\">Disable Dynamic State Partitioning</h4>\n<p>To disable dynamic storage partitioning for all sites you can use the <code>network.cookie.cookieBehavior</code> pref:</p>\n<figure class=\"table-container\"><table>\n  <thead>\n    <tr>\n      <th>Value</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>5</td>\n      <td>Reject (known) trackers and partition third-party storage.</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>Only reject trackers (Storage partitioning disabled).</td>\n    </tr>\n    <tr>\n      <td>0</td>\n      <td>Allow all</td>\n    </tr>\n  </tbody>\n</table></figure>\n<h4 id=\"exempt_specific_origins_from_partitioning\">Exempt specific origins from partitioning</h4>\n<p>\n  Dynamic State Partitioning can also be disabled for specific origins with the <code>privacy.restrict3rdpartystorage.skip_list</code> preference.\n  This pref holds a comma separated list of origins to exempt.\n  The pref value should follow the following format: <code>first-party_origin_1,third-party_origin_1;first-party_origin_2,third-party_origin_2;...</code>.\n</p>\n<p>For example, to disable partitioning for <code>tracker.example</code> on <code>example.com</code> or <code>social.example</code> on <code>news.example</code> you would set the pref to the following:</p>\n<pre class=\"brush: plain notranslate\">https://example.com,https://tracker.example;https://news.example,https://social.example\n</pre>\n<p>\n  You can use <code>*</code> as a wildcard for either the first or third party.\n  For example, to disable partitioning for <code>videos.example</code> on all sites, or to disable all partitioning on <code>unpartitioned.example</code>, you would set the pref to the following:\n</p>\n<pre class=\"brush: plain notranslate\">*,https://videos.example;unpartitioned.example,*\n</pre>"}}],"toc":[{"text":"Motivation","id":"motivation"},{"text":"State Partitioning","id":"state_partitioning"},{"text":"Standardization","id":"standardization"},{"text":"Static partitioning","id":"static_partitioning"},{"text":"Dynamic partitioning","id":"dynamic_partitioning"},{"text":"Storage Access API","id":"storage_access_api"},{"text":"Debugging","id":"debugging"}],"summary":"State Partitioning is a broad effort by Mozilla to rework how Firefox manages client-side state (i.e., data stored in the browser) to mitigate the ability of websites to abuse state for cross-site tracking, i.e. via third-party cookies.","popularity":0.0069,"modified":null,"other_translations":[],"pageType":"guide","source":{"folder":"en-us/web/privacy/state_partitioning","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/privacy/state_partitioning/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"State Partitioning","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/Privacy","title":"Privacy on the web"},{"uri":"/en-US/docs/Web/Privacy/State_Partitioning","title":"State Partitioning"}],"pageTitle":"State Partitioning - Privacy on the web | MDN","noIndexing":false},"url":"/en-US/docs/Web/Privacy/State_Partitioning"}