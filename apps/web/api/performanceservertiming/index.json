{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PerformanceServerTiming","mdn_url":"/en-US/docs/Web/API/PerformanceServerTiming","locale":"en-US","native":"English (US)","browserCompat":["api.PerformanceServerTiming"],"baseline":{"baseline":"low","baseline_low_date":"2023-03-27","support":{"chrome":"65","chrome_android":"65","edge":"79","firefox":"61","firefox_android":"61","safari":"16.4","safari_ios":"16.4"}},"sidebarHTML":"<ol><li class=\"section\"><a href=\"/en-US/docs/Web/API/Performance_API\">Performance API</a></li><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/PerformanceServerTiming\" aria-current=\"page\"><code>PerformanceServerTiming</code></a></em></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceServerTiming/description\"><code>description</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceServerTiming/duration\"><code>duration</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceServerTiming/name\"><code>name</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceServerTiming/toJSON\"><code>toJSON()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Performance API</summary><ol><li><a href=\"/en-US/docs/Web/API/EventCounts\"><code>EventCounts</code></a></li><li><a href=\"/en-US/docs/Web/API/LargestContentfulPaint\"><code>LargestContentfulPaint</code></a></li><li><a href=\"/en-US/docs/Web/API/LayoutShift\"><code>LayoutShift</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/LayoutShiftAttribution\"><code>LayoutShiftAttribution</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/NotRestoredReasonDetails\"><code>NotRestoredReasonDetails</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/NotRestoredReasons\"><code>NotRestoredReasons</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceElementTiming\"><code>PerformanceElementTiming</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming\"><code>PerformanceEventTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceLongAnimationFrameTiming\"><code>PerformanceLongAnimationFrameTiming</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PerformanceLongTaskTiming\"><code>PerformanceLongTaskTiming</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigation\"><code>PerformanceNavigation</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigationTiming\"><code>PerformanceNavigationTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformancePaintTiming\"><code>PerformancePaintTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceScriptTiming\"><code>PerformanceScriptTiming</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PerformanceTiming\"><code>PerformanceTiming</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/VisibilityStateEntry\"><code>VisibilityStateEntry</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/Window/performance\"><code>Window.performance</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerGlobalScope/performance\"><code>WorkerGlobalScope.performance</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div><div class=\"notecard secure\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>PerformanceServerTiming</code></strong> interface surfaces server metrics that are sent with the response in the <a href=\"/en-US/docs/Web/HTTP/Headers/Server-Timing\"><code>Server-Timing</code></a> HTTP header.</p>\n<p>This interface is restricted to the same origin, but you can use the <a href=\"/en-US/docs/Web/HTTP/Headers/Timing-Allow-Origin\"><code>Timing-Allow-Origin</code></a> header to specify the domains that are allowed to access the server metrics. Note that this interface is only available in secure contexts (HTTPS) in some browsers.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"performanceservertiming.description\"><a href=\"/en-US/docs/Web/API/PerformanceServerTiming/description\"><code>PerformanceServerTiming.description</code></a> <span class=\"badge inline readonly\" title=\"This value may not be changed.\">Read only </span></dt>\n  <dd>\n    <p>A string value of the server-specified metric description, or an empty string.</p>\n  </dd>\n  <dt id=\"performanceservertiming.duration\"><a href=\"/en-US/docs/Web/API/PerformanceServerTiming/duration\"><code>PerformanceServerTiming.duration</code></a> <span class=\"badge inline readonly\" title=\"This value may not be changed.\">Read only </span></dt>\n  <dd>\n    <p>A double that contains the server-specified metric duration, or value <code>0.0</code>.</p>\n  </dd>\n  <dt id=\"performanceservertiming.name\"><a href=\"/en-US/docs/Web/API/PerformanceServerTiming/name\"><code>PerformanceServerTiming.name</code></a> <span class=\"badge inline readonly\" title=\"This value may not be changed.\">Read only </span></dt>\n  <dd>\n    <p>A string value of the server-specified metric name.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"performanceservertiming.tojson\"><a href=\"/en-US/docs/Web/API/PerformanceServerTiming/toJSON\"><code>PerformanceServerTiming.toJSON()</code></a></dt>\n  <dd>\n    <p>Returns a JSON representation of the <code>PerformanceServerTiming</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>Given a server that sends the <a href=\"/en-US/docs/Web/HTTP/Headers/Server-Timing\"><code>Server-Timing</code></a> header, for example a Node.js server like this:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>const http = require(\"http\");\n\nfunction requestHandler(request, response) {\n  const headers = {\n    \"Server-Timing\": `\n      cache;desc=\"Cache Read\";dur=23.2,\n      db;dur=53,\n      app;dur=47.2\n    `.replace(/\\n/g, \"\"),\n  };\n  response.writeHead(200, headers);\n  response.write(\"\");\n  return setTimeout(() =&gt; {\n    response.end();\n  }, 1000);\n}\n\nhttp.createServer(requestHandler).listen(3000).on(\"error\", console.error);\n</code></pre></div>\n<p>The <code>PerformanceServerTiming</code> entries are now observable from JavaScript via the <a href=\"/en-US/docs/Web/API/PerformanceResourceTiming/serverTiming\"><code>PerformanceResourceTiming.serverTiming</code></a> property and live on <code>navigation</code> and <code>resource</code> entries.</p>\n<p>Example using a <a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a>, which notifies of new <code>navigation</code> and <code>resource</code> performance entries as they are recorded in the browser's performance timeline. Use the <code>buffered</code> option to access entries from before the observer creation.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>const observer = new PerformanceObserver((list) =&gt; {\n  list.getEntries().forEach((entry) =&gt; {\n    entry.serverTiming.forEach((serverEntry) =&gt; {\n      console.log(\n        `${serverEntry.name} (${serverEntry.description}) duration: ${serverEntry.duration}`,\n      );\n      // Logs \"cache (Cache Read) duration: 23.2\"\n      // Logs \"db () duration: 53\"\n      // Logs \"app () duration: 47.2\"\n    });\n  });\n});\n\n[\"navigation\", \"resource\"].forEach((type) =&gt;\n  observer.observe({ type, buffered: true }),\n);\n</code></pre></div>\n<p>Example using <a href=\"/en-US/docs/Web/API/Performance/getEntriesByType\"><code>Performance.getEntriesByType()</code></a>, which only shows <code>navigation</code> and <code>resource</code> performance entries present in the browser's performance timeline at the time you call this method:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>for (const entryType of [\"navigation\", \"resource\"]) {\n  for (const { name: url, serverTiming } of performance.getEntriesByType(\n    entryType,\n  )) {\n    if (serverTiming) {\n      for (const { name, description, duration } of serverTiming) {\n        console.log(`${name} (${description}) duration: ${duration}`);\n        // Logs \"cache (Cache Read) duration: 23.2\"\n        // Logs \"db () duration: 53\"\n        // Logs \"app () duration: 47.2\"\n      }\n    }\n  }\n}\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/server-timing/#the-performanceservertiming-interface","title":"Server Timing"}],"query":"api.PerformanceServerTiming"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PerformanceServerTiming"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/HTTP/Headers/Server-Timing\"><code>Server-Timing</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming/serverTiming\"><code>PerformanceResourceTiming.serverTiming</code></a></li>\n</ul>"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The PerformanceServerTiming interface surfaces server metrics that are sent with the response in the Server-Timing HTTP header.","popularity":0.0015,"modified":"2020-10-15T22:05:36.043Z","other_translations":[],"pageType":"web-api-interface","source":{"folder":"en-us/web/api/performanceservertiming","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/performanceservertiming/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"PerformanceServerTiming","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PerformanceServerTiming","title":"PerformanceServerTiming"}],"pageTitle":"PerformanceServerTiming - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/PerformanceServerTiming"}