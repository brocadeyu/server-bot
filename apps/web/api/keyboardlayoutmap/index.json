{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"KeyboardLayoutMap","mdn_url":"/en-US/docs/Web/API/KeyboardLayoutMap","locale":"en-US","native":"English (US)","browserCompat":["api.KeyboardLayoutMap"],"baseline":{"baseline":false,"support":{"chrome":"69","chrome_android":"69","edge":"79"}},"sidebarHTML":"<ol><li class=\"section\"><a href=\"/en-US/docs/Web/API/Keyboard_API\">Keyboard API</a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap\" aria-current=\"page\"><code>KeyboardLayoutMap</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/size\"><code>size</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/entries\"><code>entries()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/forEach\"><code>forEach()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/get\"><code>get()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/has\"><code>has()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/keys\"><code>keys()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/values\"><code>values()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Keyboard API</summary><ol><li><a href=\"/en-US/docs/Web/API/Keyboard\"><code>Keyboard</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/Navigator/keyboard\"><code>Navigator.keyboard</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>KeyboardLayoutMap</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Keyboard_API\">Keyboard API</a> is a read-only object with functions for retrieving the string associated with specific physical keys.</p>\n<p>A <code>KeyboardLayoutMap</code> instance is a read-only <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#map-like_browser_apis\"><code>Map</code>-like object</a>, in which each key is a string identifying the unique physical key on the keyboard (a \"key code\"), and the corresponding value is the associated key attribute value (which may be affected by the keyboard layout, and so on).</p>\n<p>A list of valid keys is found in the <a href=\"https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\" class=\"external\" target=\"_blank\">UI Events KeyboardEvent code Values</a> specification.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"keyboardlayoutmap.size\"><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/size\"><code>KeyboardLayoutMap.size</code></a> <span class=\"badge inline readonly\" title=\"This value may not be changed.\">Read only </span> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns the number of elements in the <code>KeyboardLayoutMap</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"keyboardlayoutmapsymbol.iterator\"><a href=\"#keyboardlayoutmapsymbol.iterator\"><code>KeyboardLayoutMap[Symbol.iterator]()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a new <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator\">Iterator</a> object that contains the key/value pairs.</p>\n  </dd>\n  <dt id=\"keyboardlayoutmap.entries\"><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/entries\"><code>KeyboardLayoutMap.entries()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a new <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator\">Iterator</a> object that contains the key/value pairs.</p>\n  </dd>\n  <dt id=\"keyboardlayoutmap.foreach\"><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/forEach\"><code>KeyboardLayoutMap.forEach()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Executes a provided function once for each element of <code>KeyboardLayoutMap</code>.</p>\n  </dd>\n  <dt id=\"keyboardlayoutmap.get\"><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/get\"><code>KeyboardLayoutMap.get()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns the element with the given key from the <code>KeyboardLayoutMap</code> object.</p>\n  </dd>\n  <dt id=\"keyboardlayoutmap.has\"><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/has\"><code>KeyboardLayoutMap.has()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a boolean indicating whether the <code>KeyboardLayoutMap</code> object has an element with the specified key.</p>\n  </dd>\n  <dt id=\"keyboardlayoutmap.keys\"><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/keys\"><code>KeyboardLayoutMap.keys()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a new <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator\">Iterator</a> object that contains the keys for each index in the <code>KeyboardLayoutMap</code> object.</p>\n  </dd>\n  <dt id=\"keyboardlayoutmap.values\"><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap/values\"><code>KeyboardLayoutMap.values()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a new <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator\">Iterator</a> object that contains the values for each index in the <code>KeyboardLayoutMap</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following example demonstrates how to get the location- or layout-specific string associated with the keyboard code that corresponds to the 'W' key on an English QWERTY keyboard.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>navigator.keyboard.getLayoutMap().then((keyboardLayoutMap) =&gt; {\n  const upKey = keyboardLayoutMap.get(\"KeyW\");\n  window.alert(`Press ${upKey} to move up.`);\n});\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/keyboard-map/#keyboardlayoutmap-interface","title":"Keyboard Map"}],"query":"api.KeyboardLayoutMap"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.KeyboardLayoutMap"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The KeyboardLayoutMap interface of the Keyboard API is a read-only object with functions for retrieving the string associated with specific physical keys.","popularity":0.0008,"modified":"2020-10-15T22:08:44.841Z","other_translations":[],"pageType":"web-api-interface","source":{"folder":"en-us/web/api/keyboardlayoutmap","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/keyboardlayoutmap/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"KeyboardLayoutMap","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/KeyboardLayoutMap","title":"KeyboardLayoutMap"}],"pageTitle":"KeyboardLayoutMap - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/KeyboardLayoutMap"}