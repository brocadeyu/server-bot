{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"FileSystemFileHandle","mdn_url":"/en-US/docs/Web/API/FileSystemFileHandle","locale":"en-US","native":"English (US)","browserCompat":["api.FileSystemFileHandle"],"baseline":{"baseline":"low","baseline_low_date":"2023-03-27","support":{"chrome":"108","chrome_android":"109","edge":"108","firefox":"111","firefox_android":"111","safari":"16.4","safari_ios":"16.4"}},"sidebarHTML":"<ol><li class=\"section\"><a href=\"/en-US/docs/Web/API/File_System_API\">File System API</a></li><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/FileSystemFileHandle\" aria-current=\"page\"><code>FileSystemFileHandle</code></a></em></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/FileSystemFileHandle/createSyncAccessHandle\"><code>createSyncAccessHandle()</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemFileHandle/createWritable\"><code>createWritable()</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemFileHandle/getFile\"><code>getFile()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance</summary><ol><li><a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for File System API</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransferItem/getAsFileSystemHandle\"><code>DataTransferItem.getAsFileSystemHandle()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle\"><code>FileSystemSyncAccessHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a></li><li><a href=\"/en-US/docs/Web/API/StorageManager/getDirectory\"><code>StorageManager.getDirectory()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/showDirectoryPicker\"><code>Window.showDirectoryPicker()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/Window/showOpenFilePicker\"><code>Window.showOpenFilePicker()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/Window/showSaveFilePicker\"><code>Window.showSaveFilePicker()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard note\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>\n<p>The <strong><code>FileSystemFileHandle</code></strong> interface of the <a href=\"/en-US/docs/Web/API/File_System_API\" title=\"File System API\">File System API</a> represents a handle to a file system entry. The interface is accessed through the <a href=\"/en-US/docs/Web/API/Window/showOpenFilePicker\"><code>window.showOpenFilePicker()</code></a> method.</p>\n<p>Note that read and write operations depend on file-access permissions that do not persist after a page refresh if no other tabs for that origin remain open. The <a href=\"/en-US/docs/Web/API/FileSystemHandle/queryPermission\" title=\"queryPermission\"><code>queryPermission</code></a> method of the <a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a> interface can be used to verify permission state before accessing a file.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" href=\"/en-US/docs/Web/API/FileSystemHandle\">\n    <rect x=\"0\" y=\"0\" width=\"128\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"64\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      FileSystemHandle\n    </text>\n  </a>\n  <line x1=\"128\" y1=\"14\" x2=\"158\" y2=\"14\" stroke=\"#D4DDE4\"></line>\n  <polyline points=\"128,14 138,9 138,19 128,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" href=\"/en-US/docs/Web/API/FileSystemFileHandle\" aria-current=\"page\">\n    <rect x=\"158\" y=\"0\" width=\"160\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"238\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      FileSystemFileHandle\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p><em>Inherits properties from its parent, <a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a>.</em></p>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<p><em>Inherits methods from its parent, <a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a>.</em></p>\n<dl>\n  <dt id=\"getfile\"><a href=\"/en-US/docs/Web/API/FileSystemFileHandle/getFile\" title=\"getFile()\"><code>getFile()</code></a></dt>\n  <dd>\n    <p>\n      Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves to a <a href=\"/en-US/docs/Web/API/File\"><code>File</code></a> object\n      representing the state on disk of the entry represented by the handle.\n    </p>\n  </dd>\n  <dt id=\"createsyncaccesshandle\"><a href=\"/en-US/docs/Web/API/FileSystemFileHandle/createSyncAccessHandle\" title=\"createSyncAccessHandle()\"><code>createSyncAccessHandle()</code></a></dt>\n  <dd>\n    <p>\n      Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves to a <a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle\"><code>FileSystemSyncAccessHandle</code></a> object\n      that can be used to synchronously read from and write to a file. The synchronous nature of this method brings performance advantages,\n      but it is only usable inside dedicated <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a>.\n    </p>\n  </dd>\n  <dt id=\"createwritable\"><a href=\"/en-US/docs/Web/API/FileSystemFileHandle/createWritable\" title=\"createWritable()\"><code>createWritable()</code></a></dt>\n  <dd>\n    <p>\n      Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves to a newly created <a href=\"/en-US/docs/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a>\n      object that can be used to write to a file.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"reading_a_file","title":"Reading a File","isH3":true,"content":"<p>The following asynchronous function presents a file picker and once a file is chosen, uses the <code>getFile()</code> method to retrieve the contents.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>async function getTheFile() {\n  const pickerOpts = {\n    types: [\n      {\n        description: \"Images\",\n        accept: {\n          \"image/*\": [\".png\", \".gif\", \".jpeg\", \".jpg\"],\n        },\n      },\n    ],\n    excludeAcceptAllOption: true,\n    multiple: false,\n  };\n\n  // open file picker\n  const [fileHandle] = await window.showOpenFilePicker(pickerOpts);\n  // get file contents\n  const fileData = await fileHandle.getFile();\n  return fileData;\n}\n</code></pre></div>"}},{"type":"prose","value":{"id":"writing_a_file","title":"Writing a File","isH3":true,"content":"<p>The following asynchronous function writes the given contents to the file handle, and thus to disk.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>async function writeFile(fileHandle, contents) {\n  // Create a FileSystemWritableFileStream to write to.\n  const writable = await fileHandle.createWritable();\n\n  // Write the contents of the file to the stream.\n  await writable.write(contents);\n\n  // Close the file and write the contents to disk.\n  await writable.close();\n}\n</code></pre></div>"}},{"type":"prose","value":{"id":"synchronously_reading_and_writing_a_file","title":"Synchronously reading and writing a file","isH3":true,"content":"<p>The following asynchronous event handler function is contained inside a Web Worker. On receiving a message from the main thread it:</p>\n<ul>\n  <li>Creates a synchronous file access handle.</li>\n  <li>Gets the size of the file and creates an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> to contain it.</li>\n  <li>Reads the file contents into the buffer.</li>\n  <li>Encodes the message and writes it to the end of the file.</li>\n  <li>Persists the changes to disk and closes the access handle.</li>\n</ul>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>onmessage = async (e) =&gt; {\n  // Retrieve message sent to work from main script\n  const message = e.data;\n\n  // Get handle to draft file\n  const root = await navigator.storage.getDirectory();\n  const draftHandle = await root.getFileHandle(\"draft.txt\", { create: true });\n  // Get sync access handle\n  const accessHandle = await draftHandle.createSyncAccessHandle();\n\n  // Get size of the file.\n  const fileSize = accessHandle.getSize();\n  // Read file content to a buffer.\n  const buffer = new DataView(new ArrayBuffer(fileSize));\n  const readBuffer = accessHandle.read(buffer, { at: 0 });\n\n  // Write the message to the end of the file.\n  const encoder = new TextEncoder();\n  const encodedMessage = encoder.encode(message);\n  const writeBuffer = accessHandle.write(encodedMessage, { at: readBuffer });\n\n  // Persist changes to disk.\n  accessHandle.flush();\n\n  // Always close FileSystemSyncAccessHandle if done.\n  accessHandle.close();\n};\n</code></pre></div>\n<div class=\"notecard note\">\n  <p><strong>Note:</strong> In earlier versions of the spec, <a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/close\" title=\"close()\"><code>close()</code></a>, <a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/flush\" title=\"flush()\"><code>flush()</code></a>, <a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/getSize\" title=\"getSize()\"><code>getSize()</code></a>, and <a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/truncate\" title=\"truncate()\"><code>truncate()</code></a> were wrongly specified as asynchronous methods, and older versions of some browsers implement them in this way. However, all current browsers that support these methods implement them as synchronous methods.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fs.spec.whatwg.org/#api-filesystemfilehandle","title":"File System Standard"}],"query":"api.FileSystemFileHandle"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.FileSystemFileHandle"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/File_System_API\">File System API</a></li>\n  <li><a href=\"https://developer.chrome.com/docs/capabilities/web-apis/file-system-access\" class=\"external\" target=\"_blank\">The File System Access API: simplifying access to local files</a></li>\n</ul>"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The FileSystemFileHandle interface of the File System API represents a handle to a file system entry. The interface is accessed through the window.showOpenFilePicker() method.","popularity":0.0062,"modified":"2020-12-12T13:17:03.977Z","other_translations":[],"pageType":"web-api-interface","source":{"folder":"en-us/web/api/filesystemfilehandle","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/filesystemfilehandle/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"FileSystemFileHandle","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/FileSystemFileHandle","title":"FileSystemFileHandle"}],"pageTitle":"FileSystemFileHandle - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/FileSystemFileHandle"}