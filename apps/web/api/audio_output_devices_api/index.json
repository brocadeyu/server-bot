{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"bad_bcd_queries":[{"id":"bad_bcd_queries1","explanation":"No BCD data for query: http.headers.Permissions-Policy.speaker-selection","suggestion":null}]},"title":"Audio Output Devices API","mdn_url":"/en-US/docs/Web/API/Audio_Output_Devices_API","locale":"en-US","native":"English (US)","browserCompat":["api.MediaDevices.selectAudioOutput","api.HTMLMediaElement.setSinkId","api.HTMLMediaElement.sinkId","http.headers.Permissions-Policy.speaker-selection"],"sidebarHTML":"<ol><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/Audio_Output_Devices_API\" aria-current=\"page\">Audio Output Devices API</a></em></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLMediaElement/sinkId\"><code>HTMLMediaElement.sinkId</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/selectAudioOutput\"><code>MediaDevices.selectAudioOutput</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMediaElement/setSinkId\"><code>HTMLMediaElement.setSinkId</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong>Audio Output Devices API</strong> allows web applications to prompt users about what output device should be used for audio playback.</p>"}},{"type":"prose","value":{"id":"concepts_and_usage","title":"Concepts and usage","isH3":false,"content":"<p>\n  Operating systems commonly allow users to specify that audio should be played from speakers, a Bluetooth headset, or some other audio output device.\n  This API allows applications to provide this same functionality from within a web page.\n</p>\n<p>Even if allowed by a permission policy, access to a particular audio output device still requires explicit user permission, as the user may be in a location where playing audio through some output devices is not appropriate.</p>\n<p>\n  The API provides the <a href=\"/en-US/docs/Web/API/MediaDevices/selectAudioOutput\"><code>MediaDevices.selectAudioOutput()</code></a> method that allows users to select their desired audio output from those that are allowed by the <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy/speaker-selection\"><code>speaker-selection</code></a> directive of the <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy\"><code>Permissions-Policy</code></a> HTTP header for the document.\n  The selected device then has user permission, allowing it to be enumerated with <a href=\"/en-US/docs/Web/API/MediaDevices/enumerateDevices\"><code>MediaDevices.enumerateDevices()</code></a> and set as the audio output device using <a href=\"/en-US/docs/Web/API/HTMLMediaElement/setSinkId\"><code>HTMLMediaElement.setSinkId()</code></a>.\n</p>\n<p>\n  Audio devices may arbitrarily connect and disconnect.\n  Applications that wish to react to this kind of change can listen to the <a href=\"/en-US/docs/Web/API/MediaDevices/devicechange_event\" title=\"devicechange\"><code>devicechange</code></a> event and use <a href=\"/en-US/docs/Web/API/MediaDevices/enumerateDevices\" title=\"enumerateDevices()\"><code>enumerateDevices()</code></a> to determine if <code>sinkId</code> is present in the returned devices.\n  This might trigger, for example, pausing or unpausing playback.\n</p>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":""}},{"type":"prose","value":{"id":"extensions_to_other_interfaces","title":"Extensions to other interfaces","isH3":true,"content":"<p>The Audio Output Devices API extends the following APIs, adding the listed features:</p>\n<h4 id=\"mediadevices\">MediaDevices</h4>\n<dl>\n  <dt id=\"mediadevices.selectaudiooutput\"><a href=\"/en-US/docs/Web/API/MediaDevices/selectAudioOutput\"><code>MediaDevices.selectAudioOutput()</code></a></dt>\n  <dd>\n    <p>\n      This method prompts the user to select a specific audio output device, for example a speaker or headset.\n      Selecting a device grants user permission to use that device and returns information about the device, including its ID.\n    </p>\n  </dd>\n</dl>\n<h4 id=\"htmlmediaelement\">HTMLMediaElement</h4>\n<dl>\n  <dt id=\"htmlmediaelement.setsinkid\"><a href=\"/en-US/docs/Web/API/HTMLMediaElement/setSinkId\"><code>HTMLMediaElement.setSinkId()</code></a></dt>\n  <dd>\n    <p>This method sets the ID of the audio device to use for output, which will be used if permitted.</p>\n  </dd>\n  <dt id=\"htmlmediaelement.sinkid\"><a href=\"/en-US/docs/Web/API/HTMLMediaElement/sinkId\"><code>HTMLMediaElement.sinkId</code></a></dt>\n  <dd>\n    <p>This property returns the unique ID of the audio device being used for output, or an empty string if the default user agent device is being used.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"security_requirements","title":"Security requirements","isH3":false,"content":"<p>Access to the API is subject to the following constraints:</p>\n<ul>\n  <li>\n    <p>All methods and properties may only be called in a <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure context</a>.</p>\n  </li>\n  <li>\n    <p><a href=\"/en-US/docs/Web/API/MediaDevices/selectAudioOutput\"><code>MediaDevices.selectAudioOutput()</code></a> grants user permission for a selected device to be used as the audio output sink:</p>\n    <ul>\n      <li>Access may be gated by the <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy/speaker-selection\"><code>speaker-selection</code></a> HTTP <a href=\"/en-US/docs/Web/HTTP/Permissions_Policy\">Permission Policy</a>.</li>\n      <li>\n        <a href=\"/en-US/docs/Web/Security/User_activation\">Transient user activation</a> is required.\n        The user has to interact with the page or a UI element for the method to be called.\n      </li>\n    </ul>\n  </li>\n  <li>\n    <p><a href=\"/en-US/docs/Web/API/HTMLMediaElement/setSinkId\"><code>HTMLMediaElement.setSinkId()</code></a> sets a permitted ID as the audio output:</p>\n    <ul>\n      <li>Access may be gated by the <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy/speaker-selection\"><code>speaker-selection</code></a> HTTP <a href=\"/en-US/docs/Web/HTTP/Permissions_Policy\">Permission Policy</a>.</li>\n      <li>User permission is required to set a non-default device ID.\n        <ul>\n          <li>This can come from selection in the prompt launched by <code>MediaDevices.selectAudioOutput()</code></li>\n          <li>User permission to set the output device is also implicitly granted if the user has already granted permission to use a media input device in the same group with <a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a>.</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul><!-- The line below is \"true\" but this is not implemented in any browser --><!-- The permission status can be queried using the [Permissions API](/en-US/docs/Web/API/Permissions_API) method [`navigator.permissions.query()`](/en-US/docs/Web/API/Permissions/query), passing a permission descriptor with the `speaker-selection` permission. -->"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Here's an example of using <code>selectAudioOutput()</code>, within a function that is triggered by a button click, and then setting the selected device as the audio output.</p>\n<p>\n  The code first checks if <code>selectAudioOutput()</code> is supported, and if it is, uses it to select an output and return a <a href=\"/en-US/docs/Web/API/MediaDeviceInfo/deviceId\">device ID</a>.\n  We then play some audio using the default output, and then call <code>setSinkId()</code> in order to switch to the selected output device.\n</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>document.querySelector(\"#myButton\").addEventListener(\"click\", async () =&gt; {\n  if (!navigator.mediaDevices.selectAudioOutput) {\n    console.log(\"selectAudioOutput() not supported or not in secure context.\");\n    return;\n  }\n\n  // Display prompt to select device\n  const audioDevice = await navigator.mediaDevices.selectAudioOutput();\n\n  // Create an audio element and start playing audio on the default device\n  const audio = document.createElement(\"audio\");\n  audio.src = \"https://example.com/audio.mp3\";\n  audio.play();\n\n  // Change the sink to the selected audio output device.\n  audio.setSinkId(audioDevice.deviceId);\n});\n</code></pre></div>\n<p>Note that if you log the output details, they might look something like this:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>console.log(\n  `${audioDevice.kind}: ${audioDevice.label} id = ${audioDevice.deviceId}`,\n);\n// audiooutput: Realtek Digital Output (Realtek(R) Audio) id = 0wE6fURSZ20H0N2NbxqgowQJLWbwo+5ablCVVJwRM3k=\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/mediacapture-output/","title":"Audio Output Devices API"}],"query":"api.MediaDevices.selectAudioOutput,api.HTMLMediaElement.setSinkId,api.HTMLMediaElement.sinkId,http.headers.Permissions-Policy.speaker-selection"}},{"type":"prose","value":{"id":"browser_compatibility","title":"Browser compatibility","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"api.MediaDevices.selectAudioOutput","id":"api.MediaDevices.selectAudioOutput","isH3":true,"query":"api.MediaDevices.selectAudioOutput"}},{"type":"browser_compatibility","value":{"title":"api.HTMLMediaElement.setSinkId","id":"api.HTMLMediaElement.setSinkId","isH3":true,"query":"api.HTMLMediaElement.setSinkId"}},{"type":"browser_compatibility","value":{"title":"api.HTMLMediaElement.sinkId","id":"api.HTMLMediaElement.sinkId","isH3":true,"query":"api.HTMLMediaElement.sinkId"}},{"type":"browser_compatibility","value":{"title":"http.headers.Permissions-Policy.speaker-selection","id":"http.headers.Permissions-Policy.speaker-selection","isH3":true,"query":"http.headers.Permissions-Policy.speaker-selection"}}],"toc":[{"text":"Concepts and usage","id":"concepts_and_usage"},{"text":"Interfaces","id":"interfaces"},{"text":"Security requirements","id":"security_requirements"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The Audio Output Devices API allows web applications to prompt users about what output device should be used for audio playback.","popularity":0.0045,"modified":null,"other_translations":[],"pageType":"web-api-overview","source":{"folder":"en-us/web/api/audio_output_devices_api","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/audio_output_devices_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"Audio Output Devices API","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Audio_Output_Devices_API","title":"Audio Output Devices API"}],"pageTitle":"Audio Output Devices API - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/Audio_Output_Devices_API"}