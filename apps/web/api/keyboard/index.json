{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Keyboard","mdn_url":"/en-US/docs/Web/API/Keyboard","locale":"en-US","native":"English (US)","browserCompat":["api.Keyboard"],"baseline":{"baseline":false,"support":{"chrome":"68","chrome_android":"68","edge":"79"}},"sidebarHTML":"<ol><li class=\"section\"><a href=\"/en-US/docs/Web/API/Keyboard_API\">Keyboard API</a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/Keyboard\" aria-current=\"page\"><code>Keyboard</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Keyboard/getLayoutMap\"><code>getLayoutMap()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/Keyboard/lock\"><code>lock()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/Keyboard/unlock\"><code>unlock()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Keyboard API</summary><ol><li><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/Navigator/keyboard\"><code>Navigator.keyboard</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div><div class=\"notecard secure\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>Keyboard</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Keyboard_API\">Keyboard API</a> provides functions that retrieve keyboard layout maps and toggle capturing of key presses from the physical keyboard.</p>\n<p>A list of valid code values is found in the <a href=\"https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\" class=\"external\" target=\"_blank\">UI Events KeyboardEvent code Values</a> spec.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" href=\"/en-US/docs/Web/API/Keyboard\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"75\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"155.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      Keyboard\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p><em>Also inherits properties from its parent interface, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<p><em>Also inherits methods from its parent interface, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"keyboard.getlayoutmap\"><a href=\"/en-US/docs/Web/API/Keyboard/getLayoutMap\"><code>Keyboard.getLayoutMap()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an instance of <a href=\"/en-US/docs/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a> which is a map-like object with functions for retrieving the strings associated with specific physical keys.</p>\n  </dd>\n  <dt id=\"keyboard.lock\"><a href=\"/en-US/docs/Web/API/Keyboard/lock\"><code>Keyboard.lock()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves after enabling the capture of keypresses for any or all of the keys on the physical keyboard.</p>\n  </dd>\n  <dt id=\"keyboard.unlock\"><a href=\"/en-US/docs/Web/API/Keyboard/unlock\"><code>Keyboard.unlock()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Unlocks all keys captured by the <code>lock()</code> method and returns synchronously.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":""}},{"type":"prose","value":{"id":"keyboard_mapping","title":"Keyboard mapping","isH3":true,"content":"<p>The following example demonstrates how to get the location- or layout-specific string associated with the key that corresponds to the 'W' key on an English QWERTY keyboard.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>if (navigator.keyboard) {\n  const keyboard = navigator.keyboard;\n  keyboard.getLayoutMap().then((keyboardLayoutMap) =&gt; {\n    const upKey = keyboardLayoutMap.get(\"KeyW\");\n    window.alert(`Press ${upKey} to move up.`);\n  });\n} else {\n  // Do something else.\n}\n</code></pre></div>"}},{"type":"prose","value":{"id":"keyboard_locking","title":"Keyboard locking","isH3":true,"content":"<p>The following example captures the <kbd>W</kbd>, <kbd>A</kbd>, <kbd>S</kbd>, and <kbd>D</kbd> keys, call <code>lock()</code> with a list that contains the key code attribute value for each of these keys:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>navigator.keyboard.lock([\"KeyW\", \"KeyA\", \"KeyS\", \"KeyD\"]);\n</code></pre></div>\n<p>This captures these keys regardless of which modifiers are used with the key press. Assuming a standard United States QWERTY layout, registering <code>KeyW</code> ensures that <kbd>W</kbd>, <kbd>Shift+W</kbd>, <kbd>Control+W</kbd>, <kbd>Control+Shift+W</kbd>, and all other key modifier combinations with <kbd>W</kbd> are sent to the app. The same applies to for <code>KeyA</code>, <code>KeyS</code>, and <code>KeyD</code>.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/keyboard-map/#keyboard-interface","title":"Keyboard Map"},{"bcdSpecificationURL":"https://wicg.github.io/keyboard-lock/#keyboard-interface","title":"Keyboard Lock"}],"query":"api.Keyboard"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Keyboard"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The Keyboard interface of the Keyboard API provides functions that retrieve keyboard layout maps and toggle capturing of key presses from the physical keyboard.","popularity":0.0015,"modified":"2020-10-15T22:08:45.287Z","other_translations":[],"pageType":"web-api-interface","source":{"folder":"en-us/web/api/keyboard","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/keyboard/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"Keyboard","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Keyboard","title":"Keyboard"}],"pageTitle":"Keyboard - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/Keyboard"}