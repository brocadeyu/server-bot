{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Invoker Commands API","mdn_url":"/en-US/docs/Web/API/Invoker_Commands_API","locale":"en-US","native":"English (US)","browserCompat":["api.CommandEvent","api.HTMLButtonElement.commandForElement","api.HTMLButtonElement.command"],"sidebarHTML":"<ol><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/Invoker_Commands_API\" aria-current=\"page\">Invoker Commands API</a></em></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/CommandEvent\"><code>CommandEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLButtonElement/commandForElement\"><code>HTMLButtonElement.commandForElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLButtonElement/command\"><code>HTMLButtonElement.command</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLElement/command_event\"><code>HTMLElement</code>: <code>command</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong>Invoker Commands API</strong> provides a way to declaratively assign behaviors to buttons, allowing control of interactive elements when the button is enacted (clicked or invoked via a keypress, such as the spacebar or return key).</p>"}},{"type":"prose","value":{"id":"concepts_and_usage","title":"Concepts and usage","isH3":false,"content":"<p>A common pattern on the web is to have <a href=\"/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> elements control various aspects of the page, such as opening and closing <a href=\"/en-US/docs/Web/API/Popover_API\" title=\"popovers\">popovers</a> or <a href=\"/en-US/docs/Web/HTML/Element/dialog\"><code>&lt;dialog&gt;</code></a> elements, formatting text, and more.</p>\n<p>Historically creating these kinds of controls has required JavaScript event listeners added to the button which can then call the APIs on the element they control. The <a href=\"/en-US/docs/Web/API/HTMLButtonElement/commandForElement\" title=\"commandForElement\"><code>commandForElement</code></a> and <a href=\"/en-US/docs/Web/API/HTMLButtonElement/command\" title=\"command\"><code>command</code></a> properties provide a way to do this declaratively for a limited set of actions. This can be advantageous for built-in commands as the user does not have to wait for JavaScript to download and execute to make these buttons interactive.</p>"}},{"type":"prose","value":{"id":"html_attributes","title":"HTML attributes","isH3":false,"content":"<dl>\n  <dt id=\"commandfor\"><a href=\"/en-US/docs/Web/HTML/Element/button#commandfor\"><code>commandfor</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Turns a <a href=\"/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> element into a button, controlling the given interactive element; takes the ID of the element to control as its value.</p>\n  </dd>\n  <dt id=\"command\"><a href=\"/en-US/docs/Web/HTML/Element/button#command\"><code>command</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Specifies the action to be performed on an element being controlled by a control <code>&lt;button&gt;</code>, specified via the <code>commandfor</code> attribute.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<dl>\n  <dt id=\"commandevent\"><a href=\"/en-US/docs/Web/API/CommandEvent\"><code>CommandEvent</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Represents an event notifying the user that a command has been issued. It is the event object for the <a href=\"/en-US/docs/Web/API/HTMLElement/command_event\" title=\"command\"><code>command</code></a> event. The event fires on element referenced by <a href=\"/en-US/docs/Web/API/HTMLButtonElement/commandForElement\" title=\"commandForElement\"><code>commandForElement</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"extensions_to_other_interfaces","title":"Extensions to other interfaces","isH3":false,"content":""}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":true,"content":"<dl>\n  <dt id=\"htmlbuttonelement.commandforelement\"><a href=\"/en-US/docs/Web/API/HTMLButtonElement/commandForElement\"><code>HTMLButtonElement.commandForElement</code></a></dt>\n  <dd>\n    <p>Gets and sets the element being controlled by the button. The JavaScript equivalent of the <a href=\"/en-US/docs/Web/HTML/Element/button#commandfor\"><code>commandfor</code></a> HTML attribute.</p>\n  </dd>\n  <dt id=\"htmlbuttonelement.command\"><a href=\"/en-US/docs/Web/API/HTMLButtonElement/command\"><code>HTMLButtonElement.command</code></a></dt>\n  <dd>\n    <p>Gets and sets the action to be performed on the element being controlled by the button. Reflects the value of the <a href=\"/en-US/docs/Web/HTML/Element/button#command\"><code>command</code></a> HTML attribute.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":true,"content":"<dl>\n  <dt id=\"command_2\"><a href=\"/en-US/docs/Web/API/HTMLElement/command_event\" title=\"command\"><code>command</code></a> event</dt>\n  <dd>\n    <p>Fired on the element referenced by the button.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"creating_declarative_popovers","title":"Creating declarative popovers","isH3":true,"content":"<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">html</span></div><pre class=\"brush: html notranslate\"><code>&lt;button commandfor=\"mypopover\" command=\"toggle-popover\"&gt;\n  Toggle the popover\n&lt;/button&gt;\n&lt;div id=\"mypopover\" popover&gt;\n  &lt;button commandfor=\"mypopover\" command=\"hide-popover\"&gt;Close&lt;/button&gt;\n  Popover content\n&lt;/div&gt;\n</code></pre></div>"}},{"type":"prose","value":{"id":"creating_declarative_dialogs","title":"Creating declarative dialogs","isH3":true,"content":"<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">html</span></div><pre class=\"brush: html notranslate\"><code>&lt;button commandfor=\"mydialog\" command=\"show-modal\"&gt;Show modal dialog&lt;/button&gt;\n&lt;dialog id=\"mydialog\"&gt;\n  &lt;button commandfor=\"mydialog\" command=\"close\"&gt;Close&lt;/button&gt;\n  Dialog Content\n&lt;/dialog&gt;\n</code></pre></div>"}},{"type":"prose","value":{"id":"creating_custom_commands","title":"Creating custom commands","isH3":true,"content":"<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">html</span></div><pre class=\"brush: html notranslate\"><code>&lt;button commandfor=\"my-img\" command=\"--rotate-left\"&gt;Rotate left&lt;/button&gt;\n&lt;button commandfor=\"my-img\" command=\"--rotate-right\"&gt;Rotate right&lt;/button&gt;\n&lt;img id=\"my-img\" src=\"photo.jpg\" alt=\"[add appropriate alt text here]\" /&gt;\n</code></pre></div>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>const myImg = document.getElementById(\"my-img\");\n\nmyImg.addEventListener(\"command\", (event) =&gt; {\n  if (event.command == \"--rotate-left\") {\n    myImg.style.rotate = \"-90deg\";\n  } else if (event.command == \"--rotate-right\") {\n    myImg.style.rotate = \"90deg\";\n  }\n});\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[],"query":"api.CommandEvent,api.HTMLButtonElement.commandForElement,api.HTMLButtonElement.command"}},{"type":"prose","value":{"id":"browser_compatibility","title":"Browser compatibility","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"api.CommandEvent","id":"api.CommandEvent","isH3":true,"query":"api.CommandEvent"}},{"type":"browser_compatibility","value":{"title":"api.HTMLButtonElement.commandForElement","id":"api.HTMLButtonElement.commandForElement","isH3":true,"query":"api.HTMLButtonElement.commandForElement"}},{"type":"browser_compatibility","value":{"title":"api.HTMLButtonElement.command","id":"api.HTMLButtonElement.command","isH3":true,"query":"api.HTMLButtonElement.command"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/HTMLButtonElement/command\" title=\"command\"><code>command</code></a> property</li>\n  <li><a href=\"/en-US/docs/Web/API/HTMLButtonElement/commandForElement\" title=\"commandForElement\"><code>commandForElement</code></a> property</li>\n  <li><a href=\"/en-US/docs/Web/API/CommandEvent\" title=\"CommandEvent\"><code>CommandEvent</code></a> interface</li>\n</ul>"}}],"toc":[{"text":"Concepts and usage","id":"concepts_and_usage"},{"text":"HTML attributes","id":"html_attributes"},{"text":"Interfaces","id":"interfaces"},{"text":"Extensions to other interfaces","id":"extensions_to_other_interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Invoker Commands API provides a way to declaratively assign behaviors to buttons, allowing control of interactive elements when the button is enacted (clicked or invoked via a keypress, such as the spacebar or return key).","popularity":0.0016,"modified":null,"other_translations":[],"pageType":"web-api-overview","source":{"folder":"en-us/web/api/invoker_commands_api","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/invoker_commands_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"Invoker Commands API","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Invoker_Commands_API","title":"Invoker Commands API"}],"pageTitle":"Invoker Commands API - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/Invoker_Commands_API"}