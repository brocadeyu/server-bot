{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaSourceHandle","mdn_url":"/en-US/docs/Web/API/MediaSourceHandle","locale":"en-US","native":"English (US)","browserCompat":["api.MediaSourceHandle"],"sidebarHTML":"<ol><li class=\"section\"><a href=\"/en-US/docs/Web/API/Media_Source_Extensions_API\">Media Source Extensions API</a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/MediaSourceHandle\" aria-current=\"page\"><code>MediaSourceHandle</code></a></em></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Media Source Extensions</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioTrack/sourceBuffer\"><code>AudioTrack.sourceBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMediaElement/buffered\"><code>HTMLMediaElement.buffered</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMediaElement/seekable\"><code>HTMLMediaElement.seekable</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMediaElement/srcObject\"><code>HTMLMediaElement.srcObject</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality\"><code>HTMLVideoElement.getVideoPlaybackQuality()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li><li><a href=\"/en-US/docs/Web/API/TextTrack/sourceBuffer\"><code>TextTrack.sourceBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoTrack/sourceBuffer\"><code>VideoTrack.sourceBuffer</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope\">Dedicated Web Workers</a>.</p>\n</div>\n<p>The <strong><code>MediaSourceHandle</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Media_Source_Extensions_API\" title=\"Media Source Extensions API\">Media Source Extensions API</a> is a proxy for a <a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a> that can be transferred from a dedicated worker back to the main thread and attached to a media element via its <a href=\"/en-US/docs/Web/API/HTMLMediaElement/srcObject\"><code>HTMLMediaElement.srcObject</code></a> property. <code>MediaSource</code> objects are not transferable because they are event targets, hence the need for <code>MediaSourceHandle</code>s.</p>\n<p>It can be accessed via the <a href=\"/en-US/docs/Web/API/MediaSource/handle\"><code>MediaSource.handle</code></a> property.</p>\n<p>Each <code>MediaSource</code> object created inside a dedicated worker has its own distinct <code>MediaSourceHandle</code>. The <code>MediaSource.handle</code> getter will always return the <code>MediaSourceHandle</code> instance specific to the associated dedicated worker <code>MediaSource</code> instance. If the handle has already been transferred to the main thread using <a href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope/postMessage\" title=\"postMessage()\"><code>postMessage()</code></a>, the handle instance in the worker is technically detached and can't be transferred again.</p>\n<p><code>MediaSourceHandle</code> is a <a href=\"/en-US/docs/Web/API/Web_Workers_API/Transferable_objects\">transferable object</a>.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The <a href=\"/en-US/docs/Web/API/MediaSource/handle\" title=\"handle\"><code>handle</code></a> property can be accessed inside a dedicated worker and the resulting <code>MediaSourceHandle</code> object is then transferred over to the thread that created the worker (in this case the main thread) via a <a href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope/postMessage\" title=\"postMessage()\"><code>postMessage()</code></a> call:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>// Inside dedicated worker\nlet mediaSource = new MediaSource();\nlet handle = mediaSource.handle;\n// Transfer the handle to the context that created the worker\npostMessage({ arg: handle }, [handle]);\n\nmediaSource.addEventListener(\"sourceopen\", () =&gt; {\n  // Await sourceopen on MediaSource before creating SourceBuffers\n  // and populating them with fetched media — MediaSource won't\n  // accept creation of SourceBuffers until it is attached to the\n  // HTMLMediaElement and its readyState is \"open\"\n});\n</code></pre></div>\n<p>Over in the main thread, we receive the handle via a <a href=\"/en-US/docs/Web/API/Worker/message_event\" title=\"message\"><code>message</code></a> event handler, attach it to a <a href=\"/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> via its <a href=\"/en-US/docs/Web/API/HTMLMediaElement/srcObject\"><code>HTMLMediaElement.srcObject</code></a> property, and <a href=\"/en-US/docs/Web/API/HTMLMediaElement/play\" title=\"play\"><code>play</code></a> the video:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>worker.addEventListener(\"message\", (msg) =&gt; {\n  let mediaSourceHandle = msg.data.arg;\n  video.srcObject = mediaSourceHandle;\n  video.play();\n});\n</code></pre></div>\n<div class=\"notecard note\">\n  <p><strong>Note:</strong> <code>MediaSourceHandle</code>s cannot be successfully transferred into or via a shared worker or service worker.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/media-source/#mediasourcehandle","title":"Media Source Extensions™"}],"query":"api.MediaSourceHandle"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaSourceHandle"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://wolenetz.github.io/mse-in-workers-demo/mse-in-workers-demo.html\" class=\"external\" target=\"_blank\">MSE-in-Workers Demo by Matt Wolenetz</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Media_Source_Extensions_API\" title=\"Media Source Extensions API\">Media Source Extensions API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></li>\n</ul>"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The MediaSourceHandle interface of the Media Source Extensions API is a proxy for a MediaSource that can be transferred from a dedicated worker back to the main thread and attached to a media element via its HTMLMediaElement.srcObject property. MediaSource objects are not transferable because they are event targets, hence the need for MediaSourceHandles.","popularity":0.0007,"modified":null,"other_translations":[],"pageType":"web-api-interface","source":{"folder":"en-us/web/api/mediasourcehandle","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediasourcehandle/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"MediaSourceHandle","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaSourceHandle","title":"MediaSourceHandle"}],"pageTitle":"MediaSourceHandle - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/MediaSourceHandle"}