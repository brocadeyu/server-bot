{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Clipboard API","mdn_url":"/en-US/docs/Web/API/Clipboard_API","locale":"en-US","native":"English (US)","browserCompat":["api.Clipboard","api.ClipboardEvent","api.ClipboardItem"],"sidebarHTML":"<ol><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/Clipboard_API\" aria-current=\"page\">Clipboard API</a></em></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/Clipboard\"><code>Clipboard</code></a></li><li><a href=\"/en-US/docs/Web/API/ClipboardEvent\"><code>ClipboardEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/ClipboardItem\"><code>ClipboardItem</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/clipboard\"><code>Navigator.clipboard</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/Element/copy_event\"><code>Element</code>: <code>copy</code></a></li><li><a href=\"/en-US/docs/Web/API/Element/cut_event\"><code>Element</code>: <code>cut</code></a></li><li><a href=\"/en-US/docs/Web/API/Element/paste_event\"><code>Element</code>: <code>paste</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong>Clipboard API</strong> provides the ability to respond to clipboard commands (cut, copy, and paste), as well as to asynchronously read from and write to the system clipboard.</p>\n<div class=\"notecard note\">\n  <p><strong>Note:</strong> Use this API in preference to the deprecated <a href=\"/en-US/docs/Web/API/Document/execCommand\"><code>document.execCommand()</code></a> method for accessing the clipboard.</p>\n</div>\n<div class=\"notecard note\">\n  <p><strong>Note:</strong> This API is <em>not available</em> in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a> (not exposed via <a href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a>).</p>\n</div>"}},{"type":"prose","value":{"id":"concepts_and_usage","title":"Concepts and usage","isH3":false,"content":"<p>\n  The <em>system clipboard</em> is a data buffer belonging to the operating system hosting the browser, which is used for short-term data storage and/or data transfers between documents or applications.\n  It is usually implemented as an anonymous, temporary <a href=\"https://en.wikipedia.org/wiki/Data_buffer\" class=\"external\" target=\"_blank\">data buffer</a>, sometimes called the <em>paste buffer</em>, that can be accessed from most or all programs within the environment via defined programming interfaces.\n</p>\n<p>The Clipboard API allows users to programmatically read and write text and other kinds of data to and from the system clipboard in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a>, provided the user has met the criteria outlined in the <a href=\"#security_considerations\">Security considerations</a>.</p>\n<p>\n  Events are fired as the result of <a href=\"/en-US/docs/Web/API/Element/cut_event\" title=\"cut\"><code>cut</code></a>, <a href=\"/en-US/docs/Web/API/Element/copy_event\" title=\"copy\"><code>copy</code></a>, and <a href=\"/en-US/docs/Web/API/Element/paste_event\" title=\"paste\"><code>paste</code></a> operations modifying the clipboard.\n  The events have a default action, for example the <code>copy</code> action copies the current selection to the system clipboard by default.\n  The default action can be overridden by the event handler â€” see each of the events for more information.\n</p>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<dl>\n  <dt id=\"clipboard\"><a href=\"/en-US/docs/Web/API/Clipboard\"><code>Clipboard</code></a> <span class=\"badge inline secure\" title=\"This feature is available only in secure contexts (HTTPS)\">Secure context</span></dt>\n  <dd>\n    <p>\n      Provides an interface for reading and writing text and data to or from the system clipboard.\n      The specification refers to this as the 'Async Clipboard API'.\n    </p>\n  </dd>\n  <dt id=\"clipboardevent\"><a href=\"/en-US/docs/Web/API/ClipboardEvent\"><code>ClipboardEvent</code></a></dt>\n  <dd>\n    <p>\n      Represents events providing information related to modification of the clipboard, that is <a href=\"/en-US/docs/Web/API/Element/cut_event\" title=\"cut\"><code>cut</code></a>, <a href=\"/en-US/docs/Web/API/Element/copy_event\" title=\"copy\"><code>copy</code></a>, and <a href=\"/en-US/docs/Web/API/Element/paste_event\" title=\"paste\"><code>paste</code></a> events.\n      The specification refers to this as the 'Clipboard Event API'.\n    </p>\n  </dd>\n  <dt id=\"clipboarditem\"><a href=\"/en-US/docs/Web/API/ClipboardItem\"><code>ClipboardItem</code></a> <span class=\"badge inline secure\" title=\"This feature is available only in secure contexts (HTTPS)\">Secure context</span></dt>\n  <dd>\n    <p>Represents a single item format, used when reading or writing data.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"extensions_to_other_interfaces","title":"Extensions to other interfaces","isH3":true,"content":"<p>The Clipboard API extends the following APIs, adding the listed features.</p>\n<dl>\n  <dt id=\"navigator.clipboard\"><a href=\"/en-US/docs/Web/API/Navigator/clipboard\"><code>Navigator.clipboard</code></a> <span class=\"badge inline readonly\" title=\"This value may not be changed.\">Read only </span> <span class=\"badge inline secure\" title=\"This feature is available only in secure contexts (HTTPS)\">Secure context</span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/Clipboard\"><code>Clipboard</code></a> object that provides read and write access to the system clipboard.</p>\n  </dd>\n  <dt id=\"element\"><a href=\"#element\"><code>Element</code></a> <a href=\"/en-US/docs/Web/API/Element/copy_event\"><code>copy</code></a> event</dt>\n  <dd>\n    <p>An event fired whenever the user initiates a copy action.</p>\n  </dd>\n  <dt id=\"element_2\"><a href=\"#element_2\"><code>Element</code></a> <a href=\"/en-US/docs/Web/API/Element/cut_event\"><code>cut</code></a> event</dt>\n  <dd>\n    <p>An event fired whenever the user initiates a cut action.</p>\n  </dd>\n  <dt id=\"element_3\"><a href=\"#element_3\"><code>Element</code></a> <a href=\"/en-US/docs/Web/API/Element/paste_event\"><code>paste</code></a> event</dt>\n  <dd>\n    <p>An event fired whenever the user initiates a paste action.</p>\n  </dd>\n</dl><!-- Note `Window: clipboardchange` event is in spec but not implemented -->"}},{"type":"prose","value":{"id":"security_considerations","title":"Security considerations","isH3":false,"content":"<p>The Clipboard API allows users to programmatically read and write text and other kinds of data to and from the system clipboard in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a>.</p>\n<p>\n  The specification requires that a user has recently interacted with the page in order to read from the clipboard (<a href=\"/en-US/docs/Web/Security/User_activation\">transient user activation</a> is required).\n  If the read operation is caused by user interaction with a browser or OS \"paste element\" (such as a context menu), the browser is expected to prompt the user for acknowledgement.\n  For writing to the clipboard the specification expects that the page has been granted the <a href=\"/en-US/docs/Web/API/Permissions_API\">Permissions API</a> <code>clipboard-write</code> permission, and the browser may also require <a href=\"/en-US/docs/Web/Security/User_activation\">transient user activation</a>.\n  Browsers may place additional restrictions over use of the methods to access the clipboard.\n</p>\n<p>\n  Browser implementations have diverged from the specification.\n  The differences are captured in the <a href=\"#browser_compatibility\">Browser compatibility</a> section and the current state is summarized below:\n</p>\n<p>Chromium browsers:</p>\n<ul>\n  <li>\n    Reading requires the <a href=\"/en-US/docs/Web/API/Permissions_API\">Permissions API</a> <code>clipboard-read</code> permission be granted.\n    Transient activation is not required.\n  </li>\n  <li>\n    Writing requires either the <code>clipboard-read</code> permission or transient activation.\n    If the permission is granted, it persists, and further transient activation is not required.\n  </li>\n  <li>The HTTP <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy\">Permissions-Policy</a> permissions <code>clipboard-read</code> and <code>clipboard-write</code> must be allowed for <a href=\"/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> elements that access the clipboard.</li>\n  <li>No persistent paste-prompt is displayed when a read operation is caused by a browser or OS \"paste element\".</li>\n</ul>\n<p>Firefox &amp; Safari:</p>\n<ul>\n  <li>Reading and writing require transient activation.</li>\n  <li>The paste-prompt is suppressed if reading same-origin clipboard content, but not cross-origin content.</li>\n  <li>The <code>clipboard-read</code> and <code>clipboard-write</code> permissions are not supported (and not planned to be supported) by Firefox or Safari.</li>\n</ul>\n<p>Firefox <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Interact_with_the_clipboard\">Web Extensions</a>:</p>\n<ul>\n  <li>\n    Reading text is only available for extensions with the Web Extension <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/permissions#clipboardread\"><code>clipboardRead</code></a> permission.\n    With this permission the extension does not require transient activation or a paste prompt.\n  </li>\n  <li>\n    Writing text is available in secure context and with transient activation.\n    With the Web Extension <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/permissions#clipboardwrite\"><code>clipboardWrite</code></a> permission transient activation is not required.\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"accessing_the_clipboard","title":"Accessing the clipboard","isH3":true,"content":"<p>The system clipboard is accessed through the <a href=\"/en-US/docs/Web/API/Navigator/clipboard\"><code>Navigator.clipboard</code></a> global.</p>\n<p>\n  This snippet fetches the text from the clipboard and appends it to the first element found with the class <code>editor</code>.\n  Since <a href=\"/en-US/docs/Web/API/Clipboard/readText\" title=\"readText()\"><code>readText()</code></a> (and <a href=\"/en-US/docs/Web/API/Clipboard/read\" title=\"read()\"><code>read()</code></a>, for that matter) returns an empty string if the clipboard isn't text, this code is safe.\n</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>navigator.clipboard\n  .readText()\n  .then(\n    (clipText) =&gt; (document.querySelector(\".editor\").innerText += clipText),\n  );\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/clipboard-apis/#clipboard-interface","title":"Clipboard API and events"},{"bcdSpecificationURL":"https://w3c.github.io/clipboard-apis/#clipboard-event-interfaces","title":"Clipboard API and events"},{"bcdSpecificationURL":"https://w3c.github.io/clipboard-apis/#clipboarditem","title":"Clipboard API and events"}],"query":"api.Clipboard,api.ClipboardEvent,api.ClipboardItem"}},{"type":"prose","value":{"id":"browser_compatibility","title":"Browser compatibility","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"api.Clipboard","id":"api.Clipboard","isH3":true,"query":"api.Clipboard"}},{"type":"browser_compatibility","value":{"title":"api.ClipboardEvent","id":"api.ClipboardEvent","isH3":true,"query":"api.ClipboardEvent"}},{"type":"browser_compatibility","value":{"title":"api.ClipboardItem","id":"api.ClipboardItem","isH3":true,"query":"api.ClipboardItem"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://web.dev/articles/async-clipboard\" class=\"external\" target=\"_blank\">Image support for Async Clipboard article</a></li>\n</ul>"}}],"toc":[{"text":"Concepts and usage","id":"concepts_and_usage"},{"text":"Interfaces","id":"interfaces"},{"text":"Security considerations","id":"security_considerations"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Clipboard API provides the ability to respond to clipboard commands (cut, copy, and paste), as well as to asynchronously read from and write to the system clipboard.","popularity":0.0325,"modified":"2020-12-01T15:12:12.492Z","other_translations":[],"pageType":"web-api-overview","source":{"folder":"en-us/web/api/clipboard_api","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/clipboard_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"Clipboard API","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Clipboard_API","title":"Clipboard API"}],"pageTitle":"Clipboard API - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/Clipboard_API"}