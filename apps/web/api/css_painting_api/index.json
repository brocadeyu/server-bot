{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/PaintRenderingContext2D does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/PaintRenderingContext2D does not exist\n    at Object.recordNonFatalError (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:90:23)\n    at Object.smartLink (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/api/web.js:130:29)\n    at eval (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/yjb/Project/content/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/yjb/Project/content/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/yjb/Project/content/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/yjb/Project/content/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/templates.js:94:40)\n    at render (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:192:56)","offset":9,"line":26,"column":7,"macroName":"domxref","sourceContext":"  |     <p>The global execution context of the paint worklet.</p>\n  |   </dd>\n> |   <dt>{{domxref('PaintRenderingContext2D')}}</dt>\n          ^\n  |   <dd>\n  |     <p>Implements a subset of the <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a> API. It has an output bitmap that is the size of the object it is rendering to.</p>","fatal":false,"macroSource":"{{domxref('PaintRenderingContext2D')}}","filepath":"/Users/yjb/Project/content/files/en-us/web/api/css_painting_api/index.md"},{"id":"macro1","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/PaintSize does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/PaintSize does not exist\n    at Object.recordNonFatalError (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:90:23)\n    at Object.smartLink (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/api/web.js:130:29)\n    at eval (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/yjb/Project/content/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/yjb/Project/content/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/yjb/Project/content/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/yjb/Project/content/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/templates.js:94:40)\n    at render (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:192:56)","offset":9,"line":30,"column":7,"macroName":"domxref","sourceContext":"  |     <p>Implements a subset of the <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a> API. It has an output bitmap that is the size of the object it is rendering to.</p>\n  |   </dd>\n> |   <dt>{{domxref('PaintSize')}}</dt>\n          ^\n  |   <dd>\n  |     <p>Returns the read-only values of the output bitmap's width and height.</p>","fatal":false,"macroSource":"{{domxref('PaintSize')}}","filepath":"/Users/yjb/Project/content/files/en-us/web/api/css_painting_api/index.md"}]},"title":"CSS Painting API","mdn_url":"/en-US/docs/Web/API/CSS_Painting_API","locale":"en-US","native":"English (US)","browserCompat":["api.PaintWorkletGlobalScope"],"baseline":{"baseline":false,"support":{"chrome":"65","chrome_android":"65","edge":"79"}},"sidebarHTML":"<ol><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/CSS_Painting_API\" aria-current=\"page\">CSS Painting API</a></em></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/API/CSS_Painting_API/Guide\">Using the CSS Painting API</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/PaintWorkletGlobalScope\"><code>PaintWorkletGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/PaintRenderingContext2D\"><code>PaintRenderingContext2D</code></a></li><li><a href=\"/en-US/docs/Web/API/PaintSize\"><code>PaintSize</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/CSS/paintWorklet_static\"><code>CSS.paintWorklet_static</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The CSS Painting API — part of the <a href=\"/en-US/docs/Web/API/Houdini_APIs\">CSS Houdini</a> umbrella of APIs — allows developers to write JavaScript functions that can draw directly into an element's background, border, or content.</p>"}},{"type":"prose","value":{"id":"concepts_and_usage","title":"Concepts and usage","isH3":false,"content":"<p>Essentially, the CSS Painting API contains functionality allowing developers to create custom values for <a href=\"/en-US/docs/Web/CSS/image/paint\"><code>paint()</code></a>, a CSS <a href=\"/en-US/docs/Web/CSS/image\"><code>&lt;image&gt;</code></a> function. You can then apply these values to properties like <a href=\"/en-US/docs/Web/CSS/background-image\"><code>background-image</code></a> to set complex custom backgrounds on an element.</p>\n<p>For example:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">css</span></div><pre class=\"brush: css notranslate\"><code>aside {\n  background-image: paint(myPaintedImage);\n}\n</code></pre></div>\n<p>The API defines a <a href=\"/en-US/docs/Web/API/Worklet\"><code>worklet</code></a> that can be used to programmatically generate an image that responds to computed style changes. To find out more about how this is used, consult <a href=\"/en-US/docs/Web/API/CSS_Painting_API/Guide\">Using the CSS Painting API</a>.</p>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<dl>\n  <dt id=\"paintworkletglobalscope\"><a href=\"/en-US/docs/Web/API/PaintWorkletGlobalScope\"><code>PaintWorkletGlobalScope</code></a></dt>\n  <dd>\n    <p>The global execution context of the paint worklet.</p>\n  </dd>\n  <dt id=\"paintrenderingcontext2d\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref('PaintRenderingContext2D')}}\"><code>PaintRenderingContext2D</code></a></dt>\n  <dd>\n    <p>Implements a subset of the <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a> API. It has an output bitmap that is the size of the object it is rendering to.</p>\n  </dd>\n  <dt id=\"paintsize\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref('PaintSize')}}\"><code>PaintSize</code></a></dt>\n  <dd>\n    <p>Returns the read-only values of the output bitmap's width and height.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  The following example creates a list of items with a background image that rotates between three different colors and three widths.\n  In <a href=\"#browser_compatibility\">a supporting browser</a> you will see something like the image below.\n</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/CSS_Painting_API/Guide/boxbg.png\" alt=\"The width and color of the background image changes based on the custom properties\" width=\"739\" height=\"255\" loading=\"lazy\">\n</p>\n<p>To achieve this we'll define two custom CSS properties, <code>--boxColor</code> and <code>--widthSubtractor</code>.</p>"}},{"type":"prose","value":{"id":"the_paint_worklet","title":"The paint worklet","isH3":true,"content":"<p>\n  The worklet is an external JavaScript file (in this case we've called it <code>boxbg.js</code>) which defines a paint <a href=\"/en-US/docs/Web/API/Worklet\"><code>worklet</code></a>.\n  Using the worklet, we can access CSS properties (and custom properties) of elements:\n</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>registerPaint(\n  \"boxbg\",\n  class {\n    static get contextOptions() {\n      return { alpha: true };\n    }\n    /*\n      Retrieve any custom properties (or regular properties,\n      such as 'height') defined for the element, and return\n      them as an array.\n    */\n    static get inputProperties() {\n      return [\"--boxColor\", \"--widthSubtractor\"];\n    }\n\n    paint(ctx, size, props) {\n      /*\n        ctx -&gt; drawing context\n        size -&gt; paintSize: width and height\n        props -&gt; properties: get() method\n      */\n      ctx.fillStyle = props.get(\"--boxColor\");\n      ctx.fillRect(\n        0,\n        size.height / 3,\n        size.width * 0.4 - props.get(\"--widthSubtractor\"),\n        size.height * 0.6,\n      );\n    }\n  },\n);\n</code></pre></div>\n<p>We used the <code>inputProperties()</code> method in the <code>registerPaint()</code> class to get the values of two custom properties set on an element that has <code>boxbg</code> applied to it and then used those within our <code>paint()</code> function. The <code>inputProperties()</code> method can return all properties affecting the element, not just custom properties.</p>"}},{"type":"prose","value":{"id":"using_the_paint_worklet","title":"Using the paint worklet","isH3":true,"content":"<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">html</span></div><pre class=\"brush: html live-sample___example-boxbg notranslate\"><code>&lt;ul&gt;\n  &lt;li&gt;item 1&lt;/li&gt;\n  &lt;li&gt;item 2&lt;/li&gt;\n  &lt;li&gt;item 3&lt;/li&gt;\n  &lt;li&gt;item 4&lt;/li&gt;\n  &lt;li&gt;item 5&lt;/li&gt;\n  &lt;li&gt;item 6&lt;/li&gt;\n  &lt;li&gt;item 7&lt;/li&gt;\n  &lt;li&gt;item 8&lt;/li&gt;\n  &lt;li&gt;item 9&lt;/li&gt;\n  &lt;li&gt;item 10&lt;/li&gt;\n  &lt;li&gt;item N&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre></div>\n<h4 id=\"css\">CSS</h4>\n<p>In our CSS, we define the <code>--boxColor</code> and <code>--widthSubtractor</code> custom properties.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">css</span></div><pre class=\"brush: css live-sample___example-boxbg notranslate\"><code>body {\n  font: 1.2em / 1.2 sans-serif;\n}\nli {\n  background-image: paint(boxbg);\n  --boxColor: hsl(55 90% 60%);\n}\n\nli:nth-of-type(3n) {\n  --boxColor: hsl(155 90% 60%);\n  --widthSubtractor: 20;\n}\n\nli:nth-of-type(3n + 1) {\n  --boxColor: hsl(255 90% 60%);\n  --widthSubtractor: 40;\n}\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<p>\n  The setup and logic of the paint worklet is in the external script.\n  To register the worklet, we need to call <a href=\"/en-US/docs/Web/API/Worklet/addModule\"><code>addModule()</code></a> from our main script:\n</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js live-sample___example-boxbg notranslate\"><code>CSS.paintWorklet.addModule(\n  \"https://mdn.github.io/houdini-examples/cssPaint/intro/worklets/boxbg.js\",\n);\n</code></pre></div>\n<p>In this example, the worklet is hosted at <code>https://mdn.github.io/</code>, but your worklet may be a relative resource like so:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>CSS.paintWorklet.addModule(\"boxbg.js\");\n</code></pre></div>\n<h4 id=\"result\">Result</h4>\n<p>While you can't play with the worklet's script, you can alter the custom property values in DevTools to change the colors and width of the background image.</p><div class=\"code-example\"><div class=\"example-header\"></div><iframe class=\"sample-code-frame\" title=\"example-boxbg sample\" id=\"frame_example-boxbg\" height=\"300px\" src=\"about:blank\" data-live-path=\"/en-US/docs/Web/API/CSS_Painting_API\" data-live-id=\"example-boxbg\" sandbox=\"allow-same-origin allow-scripts\" loading=\"lazy\"></iframe></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://drafts.css-houdini.org/css-paint-api/#paintworkletglobalscope","title":"CSS Painting API Level 1"}],"query":"api.PaintWorkletGlobalScope"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PaintWorkletGlobalScope"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/CSS_Painting_API/Guide\">Using the CSS Painting API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/CSS_Typed_OM_API\">CSS Typed Object Model API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Houdini_APIs\">Houdini APIs</a></li>\n</ul>"}}],"toc":[{"text":"Concepts and usage","id":"concepts_and_usage"},{"text":"Interfaces","id":"interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The CSS Painting API — part of the CSS Houdini umbrella of APIs — allows developers to write JavaScript functions that can draw directly into an element's background, border, or content.","popularity":0.0041,"modified":"2019-09-06T01:57:12.763Z","other_translations":[],"pageType":"web-api-overview","source":{"folder":"en-us/web/api/css_painting_api","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/css_painting_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"CSS Painting API","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CSS_Painting_API","title":"CSS Painting API"}],"pageTitle":"CSS Painting API - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/CSS_Painting_API"}