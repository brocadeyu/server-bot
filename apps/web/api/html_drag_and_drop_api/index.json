{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"HTML Drag and Drop API","mdn_url":"/en-US/docs/Web/API/HTML_Drag_and_Drop_API","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API\" aria-current=\"page\">HTML Drag and Drop API</a></em></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop\">File drag and drop</a></li><li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations\">Drag operations</a></li><li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">Recommended Drag Types</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a></li><li><a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLElement/drag_event\"><code>HTMLElement</code>: <code>drag</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\"><code>HTMLElement</code>: <code>dragend</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\"><code>HTMLElement</code>: <code>dragenter</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/dragleave_event\"><code>HTMLElement</code>: <code>dragleave</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\"><code>HTMLElement</code>: <code>dragover</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\"><code>HTMLElement</code>: <code>dragstart</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\"><code>HTMLElement</code>: <code>drop</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>HTML Drag and Drop</strong> interfaces enable applications to use drag-and-drop features in browsers.</p>\n<p>The user may select <em>draggable</em> elements with a mouse, drag those elements to a <em>droppable</em> element, and drop them by releasing the mouse button. A translucent representation of the <em>draggable</em> elements follows the pointer during the drag operation.</p>\n<p>You can customize which elements can become <em>draggable</em>, the type of feedback the <em>draggable</em> elements produce, and the <em>droppable</em> elements.</p>\n<p>This overview of HTML Drag and Drop includes a description of the interfaces, basic steps to add drag-and-drop support to an application, and an interoperability summary of the interfaces.</p>"}},{"type":"prose","value":{"id":"concepts_and_usage","title":"Concepts and usage","isH3":false,"content":""}},{"type":"prose","value":{"id":"drag_events","title":"Drag Events","isH3":true,"content":"<p>HTML drag-and-drop uses the <a href=\"/en-US/docs/Web/API/Event\">DOM event model</a> and <em><a href=\"/en-US/docs/Web/API/DragEvent\">drag events</a></em> inherited from <a href=\"/en-US/docs/Web/API/MouseEvent\">mouse events</a>. A typical <em>drag operation</em> begins when a user selects a <em>draggable</em> element, continues when the user drags the element to a <em>droppable</em> element, and then ends when the user releases the dragged element.</p>\n<p>During drag operations, several event types are fired, and some events might fire many times, such as the <a href=\"/en-US/docs/Web/API/HTMLElement/drag_event\" title=\"drag\"><code>drag</code></a> and <a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"dragover\"><code>dragover</code></a> events.</p>\n<p>Each <a href=\"/en-US/docs/Web/API/DragEvent#event_types\">drag event type</a> has an associated event handler:</p>\n<figure class=\"table-container\"><table>\n  <thead>\n    <tr>\n      <th>Event</th>\n      <th>Fires when...</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/API/HTMLElement/drag_event\" title=\"drag\"><code>drag</code></a></td>\n      <td>...a <em>dragged item</em> (element or text selection) is dragged.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"dragend\"><code>dragend</code></a></td>\n      <td>...a drag operation ends (such as releasing a mouse button or hitting the Esc key; see <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\">Finishing a Drag</a>.)</td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"dragenter\"><code>dragenter</code></a></td>\n      <td>...a dragged item enters a valid drop target. (See <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\">Specifying Drop Targets</a>.)</td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/API/HTMLElement/dragleave_event\" title=\"dragleave\"><code>dragleave</code></a></td>\n      <td>...a dragged item leaves a valid drop target.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"dragover\"><code>dragover</code></a></td>\n      <td>...a dragged item is being dragged over a valid drop target, every few hundred milliseconds.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"dragstart\"><code>dragstart</code></a></td>\n      <td>...the user starts dragging an item. (See <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#starting_a_drag_operation\">Starting a Drag Operation</a>.)</td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"drop\"><code>drop</code></a></td>\n      <td>...an item is dropped on a valid drop target. (See <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#performing_a_drop\">Performing a Drop</a>.)</td>\n    </tr>\n  </tbody>\n</table></figure>\n<div class=\"notecard note\">\n  <p><strong>Note:</strong> Neither <code>dragstart</code> nor <code>dragend</code> events are fired when dragging a file into the browser from the OS.</p>\n</div>"}},{"type":"prose","value":{"id":"the_basics","title":"The basics","isH3":true,"content":"<p>This section is a summary of the basic steps to add drag-and-drop functionality to an application.</p>\n<h4 id=\"identify_what_is_draggable\">Identify what is draggable</h4>\n<p>Making an element <em>draggable</em> requires adding the <a href=\"/en-US/docs/Web/HTML/Global_attributes/draggable\"><code>draggable</code></a> attribute and the <a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"dragstart\"><code>dragstart</code></a> event handler, as shown in the following code sample:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">html</span></div><pre class=\"brush: html notranslate\"><code>&lt;script&gt;\n  function dragstartHandler(ev) {\n    // Add the target element's id to the data transfer object\n    ev.dataTransfer.setData(\"text/plain\", ev.target.id);\n  }\n\n  window.addEventListener(\"DOMContentLoaded\", () =&gt; {\n    // Get the element by id\n    const element = document.getElementById(\"p1\");\n    // Add the ondragstart event listener\n    element.addEventListener(\"dragstart\", dragstartHandler);\n  });\n&lt;/script&gt;\n\n&lt;p id=\"p1\" draggable=\"true\"&gt;This element is draggable.&lt;/p&gt;\n</code></pre></div>\n<p>For more information, see:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Web/HTML/Global_attributes/draggable\">Draggable attribute reference</a></li>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#the_draggable_attribute\">Drag operations guide</a></li>\n</ul>\n<h4 id=\"define_the_drags_data\">Define the drag's data</h4>\n<p>The application is free to include any number of data items in a drag operation. Each data item is a string of a particular <code>type</code> â€” typically a MIME type such as <code>text/html</code>.</p>\n<p>Each <a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a> has a <a href=\"/en-US/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a> property that <em>holds</em> the event's data. This property (which is a <a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> object) also has methods to <em>manage</em> drag data. The <a href=\"/en-US/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a> method is used to add an item to the drag data, as shown in the following example.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>function dragstartHandler(ev) {\n  // Add different types of drag data\n  ev.dataTransfer.setData(\"text/plain\", ev.target.innerText);\n  ev.dataTransfer.setData(\"text/html\", ev.target.outerHTML);\n  ev.dataTransfer.setData(\n    \"text/uri-list\",\n    ev.target.ownerDocument.location.href,\n  );\n}\n</code></pre></div>\n<ul>\n  <li>For a list of common data types used in drag-and-drop (such as text, HTML, links, and files), see <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">Recommended Drag Types</a>.</li>\n  <li>For more information about drag data, see <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#drag_data\">Drag Data</a>.</li>\n</ul>\n<h4 id=\"define_the_drag_image\">Define the drag image</h4>\n<p>By default, the browser supplies an image that appears beside the pointer during a drag operation. However, an application may define a custom image with the <a href=\"/en-US/docs/Web/API/DataTransfer/setDragImage\" title=\"setDragImage()\"><code>setDragImage()</code></a> method, as shown in the following example.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>// Create an image and then use it for the drag image.\n// NOTE: change \"example.gif\" to a real image URL or the image\n// will not be created and the default drag image will be used.\nlet img = new Image();\nimg.src = \"example.gif\";\nfunction dragstartHandler(ev) {\n  ev.dataTransfer.setDragImage(img, 10, 10);\n}\n</code></pre></div>\n<p>Learn more about drag feedback images in:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#setting_the_drag_feedback_image\">Setting the Drag Feedback Image</a></li>\n</ul>\n<h4 id=\"define_the_drop_effect\">Define the drop effect</h4>\n<p>The <a href=\"/en-US/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> property is used to control the feedback the user is given during a drag-and-drop operation. It typically affects which cursor the browser displays while dragging. For example, when the user hovers over a drop target, the browser's cursor may indicate the type of operation that will occur.</p>\n<p>Three effects may be defined:</p>\n<ol>\n  <li><strong><code>copy</code></strong> indicates that the dragged data will be copied from its present location to the drop location.</li>\n  <li><strong><code>move</code></strong> indicates that the dragged data will be moved from its present location to the drop location.</li>\n  <li><strong><code>link</code></strong> indicates that some form of relationship or connection will be created between the source and drop locations.</li>\n</ol>\n<p>During the drag operation, drag effects may be modified to indicate that certain effects are allowed at certain locations.</p>\n<p>The following example shows how to use this property.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>function dragstartHandler(ev) {\n  ev.dataTransfer.dropEffect = \"copy\";\n}\n</code></pre></div>\n<p>For more details, see:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#drag_effects\">Drag Effects</a></li>\n</ul>\n<h4 id=\"define_a_drop_zone\">Define a drop zone</h4>\n<p>By default, the browser prevents anything from happening when dropping something onto most HTML elements. To change that behavior so that an element becomes a <em>drop zone</em> or is <em>droppable</em>, the element must listen to both <a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"dragover\"><code>dragover</code></a> and <a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"drop\"><code>drop</code></a> events.</p>\n<p>The following example shows how to use those attributes, and includes basic event handlers for each attribute.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">html</span></div><pre class=\"brush: html notranslate\"><code>&lt;script&gt;\n  function dragoverHandler(ev) {\n    ev.preventDefault();\n    ev.dataTransfer.dropEffect = \"move\";\n  }\n  function dropHandler(ev) {\n    ev.preventDefault();\n    // Get the id of the target and add the moved element to the target's DOM\n    const data = ev.dataTransfer.getData(\"text/plain\");\n    ev.target.appendChild(document.getElementById(data));\n  }\n&lt;/script&gt;\n\n&lt;p id=\"target\" ondrop=\"dropHandler(event)\" ondragover=\"dragoverHandler(event)\"&gt;\n  Drop Zone\n&lt;/p&gt;\n</code></pre></div>\n<p>Note that each handler calls <a href=\"/en-US/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> to prevent additional event processing for this event (such as <a href=\"/en-US/docs/Web/API/Touch_events\">touch events</a> or <a href=\"/en-US/docs/Web/API/Pointer_events\">pointer events</a>).</p>\n<p>For more information, see:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\">Specifying Drop Targets</a></li>\n</ul>\n<h4 id=\"handle_the_drop_effect\">Handle the drop effect</h4>\n<p>The handler for the <a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"drop\"><code>drop</code></a> event is free to process the drag data in an application-specific way.</p>\n<p>Typically, an application uses the <a href=\"/en-US/docs/Web/API/DataTransfer/getData\" title=\"getData()\"><code>getData()</code></a> method to retrieve drag items and then process them accordingly. Additionally, application semantics may differ depending on the value of the <a href=\"/en-US/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> and/or the state of modifier keys.</p>\n<p>The following example shows a drop handler getting the source element's <code>id</code> from the drag data, and then using the <code>id</code> to move the source element to the drop element:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">html</span></div><pre class=\"brush: html notranslate\"><code>&lt;script&gt;\n  function dragstartHandler(ev) {\n    // Add the target element's id to the data transfer object\n    ev.dataTransfer.setData(\"application/my-app\", ev.target.id);\n    ev.dataTransfer.effectAllowed = \"move\";\n  }\n  function dragoverHandler(ev) {\n    ev.preventDefault();\n    ev.dataTransfer.dropEffect = \"move\";\n  }\n  function dropHandler(ev) {\n    ev.preventDefault();\n    // Get the id of the target and add the moved element to the target's DOM\n    const data = ev.dataTransfer.getData(\"application/my-app\");\n    ev.target.appendChild(document.getElementById(data));\n  }\n&lt;/script&gt;\n\n&lt;p id=\"p1\" draggable=\"true\" ondragstart=\"dragstartHandler(event)\"&gt;\n  This element is draggable.\n&lt;/p&gt;\n&lt;div\n  id=\"target\"\n  ondrop=\"dropHandler(event)\"\n  ondragover=\"dragoverHandler(event)\"&gt;\n  Drop Zone\n&lt;/div&gt;\n</code></pre></div>\n<p>For more information, see:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#performing_a_drop\">Performing a Drop</a></li>\n</ul>\n<h4 id=\"drag_end\">Drag end</h4>\n<p>At the end of a drag operation, the <a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"dragend\"><code>dragend</code></a> event fires at the <em>source</em> element â€” the element that was the target of the drag start.</p>\n<p>This event fires regardless of whether the drag completed or was canceled. The <a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"dragend\"><code>dragend</code></a> event handler can check the value of the <a href=\"/en-US/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> property to determine if the drag operation succeeded or not.</p>\n<p>For more information about handling the end of a drag operation, see:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\">Finishing a Drag</a></li>\n</ul>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<p>The HTML Drag and Drop interfaces are <a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a>, <a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a>, <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> and <a href=\"/en-US/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a>.</p>\n<p>The <a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a> interface has a constructor and one <a href=\"/en-US/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a> property, which is a <a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> object.</p>\n<p><a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> objects include the drag event's state, such as the type of drag being done (like <code>copy</code> or <code>move</code>), the drag's data (one or more items), and the MIME type of each <em>drag item</em>. <a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> objects also have methods to add or remove items to the drag's data.</p>\n<p>The <a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a> and <a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> interfaces should be the only ones needed to add HTML Drag and Drop capabilities to an application.</p>\n<p>Each <a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> object contains an <a href=\"/en-US/docs/Web/API/DataTransfer/items\" title=\"items\"><code>items</code></a> property, which is a <a href=\"/en-US/docs/Web/API/DataTransferItemList\" title=\"list\"><code>list</code></a> of <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> objects. A <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> object represents a single <em>drag item</em>, each with a <a href=\"/en-US/docs/Web/API/DataTransferItem/kind\" title=\"kind\"><code>kind</code></a> property (either <code>string</code> or <code>file</code>) and a <a href=\"/en-US/docs/Web/API/DataTransferItem/type\" title=\"type\"><code>type</code></a> property for the data item's MIME type. The <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> object also has methods to get the drag item's data.</p>\n<p>The <a href=\"/en-US/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a> object is a list of <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> objects. The list object has methods to add a drag item to the list, remove a drag item from the list, and clear the list of all drag items.</p>\n<p>A key difference between the <a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> and <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> interfaces is that the former uses the synchronous <a href=\"/en-US/docs/Web/API/DataTransfer/getData\" title=\"getData()\"><code>getData()</code></a> method to access a drag item's data, but the latter instead uses the asynchronous <a href=\"/en-US/docs/Web/API/DataTransferItem/getAsString\" title=\"getAsString()\"><code>getAsString()</code></a> method.</p>\n<div class=\"notecard note\">\n  <p><strong>Note:</strong> <a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a> and <a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> are broadly supported on desktop browsers. However, the <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> and <a href=\"/en-US/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a> interfaces have limited browser support. See <a href=\"#interoperability\">Interoperability</a> for more information about drag-and-drop interoperability.</p>\n</div>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<ul>\n  <li><a href=\"https://mdn.github.io/dom-examples/drag-and-drop/copy-move-DataTransfer.html\" class=\"external\" target=\"_blank\">Copying and moving elements with the <code>DataTransfer</code> interface</a></li>\n  <li><a href=\"https://mdn.github.io/dom-examples/drag-and-drop/copy-move-DataTransferItemList.html\" class=\"external\" target=\"_blank\">Copying and moving elements with the <code>DataTransferListItem</code> interface</a></li>\n  <li>Dragging and dropping files (Firefox only): <a href=\"https://jsfiddle.net/9C2EF/\" class=\"external\" target=\"_blank\">https://jsfiddle.net/9C2EF/</a></li>\n  <li>Dragging and dropping files (All browsers): <a href=\"https://jsbin.com/hiqasek/edit?html,js,output\" class=\"external\" target=\"_blank\">https://jsbin.com/hiqasek/</a></li>\n  <li>A parking project using the Drag and Drop API: <a href=\"https://park.glitch.me/\" class=\"external\" target=\"_blank\">https://park.glitch.me/</a> (You can edit <a href=\"https://glitch.com/edit/#!/park\" class=\"external\" target=\"_blank\">here</a>)</li>\n</ul>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/dnd.html","title":"HTML Standard"}],"query":"undefined"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations\">Drag Operations</a></li>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">Recommended Drag Types</a></li>\n  <li><a href=\"https://html.spec.whatwg.org/multipage/interaction.html#dnd\" class=\"external\" target=\"_blank\">HTML Living Standard: Drag and Drop</a></li>\n  <li><a href=\"https://caniuse.com/#search=draganddrop\" class=\"external\" target=\"_blank\">Drag and Drop interoperability data from CanIUse</a></li>\n</ul>"}}],"toc":[{"text":"Concepts and usage","id":"concepts_and_usage"},{"text":"Interfaces","id":"interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"See also","id":"see_also"}],"summary":"HTML Drag and Drop interfaces enable applications to use drag-and-drop features in browsers.","popularity":0.0556,"modified":"2020-06-22T16:46:51.443Z","other_translations":[],"pageType":"web-api-overview","source":{"folder":"en-us/web/api/html_drag_and_drop_api","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/html_drag_and_drop_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"HTML Drag and Drop API","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/HTML_Drag_and_Drop_API","title":"HTML Drag and Drop API"}],"pageTitle":"HTML Drag and Drop API - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/HTML_Drag_and_Drop_API"}