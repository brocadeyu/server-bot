{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"NodeList","mdn_url":"/en-US/docs/Web/API/NodeList","locale":"en-US","native":"English (US)","browserCompat":["api.NodeList"],"baseline":{"baseline":"high","baseline_high_date":"2018-01-29","baseline_low_date":"2015-07-29","support":{"chrome":"1","chrome_android":"18","edge":"12","firefox":"1","firefox_android":"4","safari":"1","safari_ios":"1"}},"sidebarHTML":"<ol><li class=\"section\"><a href=\"/en-US/docs/Web/API/Document_Object_Model\">Document Object Model</a></li><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/NodeList\" aria-current=\"page\"><code>NodeList</code></a></em></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/NodeList/length\"><code>length</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/NodeList/entries\"><code>entries()</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeList/forEach\"><code>forEach()</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeList/item\"><code>item()</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeList/keys\"><code>keys()</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeList/values\"><code>values()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for DOM</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/en-US/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/en-US/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/en-US/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationRecord\"><code>MutationRecord</code></a></li><li><a href=\"/en-US/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/en-US/docs/Web/API/Range\"><code>Range</code></a></li><li><a href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>NodeList</code></strong> objects are collections of <a href=\"/en-US/docs/Web/API/Node\">nodes</a>, usually returned by properties such as <a href=\"/en-US/docs/Web/API/Node/childNodes\"><code>Node.childNodes</code></a> and methods such as <a href=\"/en-US/docs/Web/API/Document/querySelectorAll\"><code>document.querySelectorAll()</code></a>.</p>\n<p>This interface was an <a href=\"https://stackoverflow.com/questions/74630989/why-use-domstringlist-rather-than-an-array/74641156#74641156\" class=\"external\" target=\"_blank\">attempt to create an unmodifiable list</a> and only continues to be supported to not break code that's already using it. Modern APIs represent list structures using types based on JavaScript <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">arrays</a>, thus making many array methods available, and at the same time imposing additional semantics on their usage (such as making their items read-only).</p>\n<p>These historical reasons do not mean that you as a developer should avoid <code>NodeList</code>. You don't create <code>NodeList</code> objects yourself, but you get them from APIs such as <a href=\"/en-US/docs/Web/API/Document/querySelectorAll\"><code>Document.querySelectorAll()</code></a>, and these APIs are not deprecated. However, be careful of the semantic differences from a real array.</p>\n<p>Although <code>NodeList</code> is not an <code>Array</code>, it is possible to iterate over it with <code>forEach()</code>. It can also be converted to a real <code>Array</code> using <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a>.</p>"}},{"type":"prose","value":{"id":"live_vs._static_nodelists","title":"Live vs. Static NodeLists","isH3":false,"content":"<p>Although they are both considered <code>NodeList</code> objects, there are 2 varieties of NodeList: <em>live</em> and <em>static</em>.</p>"}},{"type":"prose","value":{"id":"live_nodelists","title":"Live NodeLists","isH3":true,"content":"<p>In some cases, the <code>NodeList</code> is <em>live</em>, which means that changes in the DOM automatically update the collection.</p>\n<p>For example, <a href=\"/en-US/docs/Web/API/Node/childNodes\"><code>Node.childNodes</code></a> is live:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>const parent = document.getElementById(\"parent\");\nlet childNodes = parent.childNodes;\nconsole.log(childNodes.length); // let's assume \"2\"\nparent.appendChild(document.createElement(\"div\"));\nconsole.log(childNodes.length); // outputs \"3\"\n</code></pre></div>"}},{"type":"prose","value":{"id":"static_nodelists","title":"Static NodeLists","isH3":true,"content":"<p>In other cases, the <code>NodeList</code> is <em>static,</em> where any changes in the DOM do not affect the content of the collection. The ubiquitous <a href=\"/en-US/docs/Web/API/Document/querySelectorAll\"><code>document.querySelectorAll()</code></a> method returns a <em>static</em> <code>NodeList</code>.</p>\n<p>It's good to keep this distinction in mind when you choose how to iterate over the items in the <code>NodeList</code>, and whether you should cache the list's <code>length</code>.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"nodelist.length\"><a href=\"/en-US/docs/Web/API/NodeList/length\"><code>NodeList.length</code></a> <span class=\"badge inline readonly\" title=\"This value may not be changed.\">Read only </span></dt>\n  <dd>\n    <p>The number of nodes in the <code>NodeList</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"nodelist.item\"><a href=\"/en-US/docs/Web/API/NodeList/item\"><code>NodeList.item()</code></a></dt>\n  <dd>\n    <p>Returns an item in the list by its index, or <code>null</code> if the index is out-of-bounds.</p>\n    <p>An alternative to accessing <code>nodeList[i]</code> (which instead returns <code>undefined</code> when <code>i</code> is out-of-bounds). This is mostly useful for non-JavaScript DOM implementations.</p>\n  </dd>\n  <dt id=\"nodelist.entries\"><a href=\"/en-US/docs/Web/API/NodeList/entries\"><code>NodeList.entries()</code></a></dt>\n  <dd>\n    <p>Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>, allowing code to go through all key/value pairs contained in the collection. (In this case, the keys are integers starting from <code>0</code> and the values are nodes.)</p>\n  </dd>\n  <dt id=\"nodelist.foreach\"><a href=\"/en-US/docs/Web/API/NodeList/forEach\"><code>NodeList.forEach()</code></a></dt>\n  <dd>\n    <p>Executes a provided function once per <code>NodeList</code> element, passing the element as an argument to the function.</p>\n  </dd>\n  <dt id=\"nodelist.keys\"><a href=\"/en-US/docs/Web/API/NodeList/keys\"><code>NodeList.keys()</code></a></dt>\n  <dd>\n    <p>Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>, allowing code to go through all the keys of the key/value pairs contained in the collection. (In this case, the keys are integers starting from <code>0</code>.)</p>\n  </dd>\n  <dt id=\"nodelist.values\"><a href=\"/en-US/docs/Web/API/NodeList/values\"><code>NodeList.values()</code></a></dt>\n  <dd>\n    <p>Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing code to go through all values (nodes) of the key/value pairs contained in the collection.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>It's possible to loop over the items in a <code>NodeList</code> using a <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for\">for</a> loop:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>for (let i = 0; i &lt; myNodeList.length; i++) {\n  let item = myNodeList[i];\n}\n</code></pre></div>\n<p><strong>Don't use <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a> to enumerate the items in <code>NodeList</code>s</strong>, since they will <em>also</em> enumerate its <code>length</code> and <code>item</code> properties and cause errors if your script assumes it only has to deal with <a href=\"/en-US/docs/Web/API/Element\"><code>element</code></a> objects. Also, <code>for...in</code> is not guaranteed to visit the properties in any particular order.</p>\n<p><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a> loops loop over <code>NodeList</code> objects correctly:</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>const list = document.querySelectorAll(\"input[type=checkbox]\");\nfor (const checkbox of list) {\n  checkbox.checked = true;\n}\n</code></pre></div>\n<p>Browsers also support the iterator method (<a href=\"/en-US/docs/Web/API/NodeList/forEach\" title=\"forEach()\"><code>forEach()</code></a>) as well as <a href=\"/en-US/docs/Web/API/NodeList/entries\" title=\"entries()\"><code>entries()</code></a>, <a href=\"/en-US/docs/Web/API/NodeList/values\" title=\"values()\"><code>values()</code></a>, and <a href=\"/en-US/docs/Web/API/NodeList/keys\" title=\"keys()\"><code>keys()</code></a>.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#interface-nodelist","title":"DOM Standard"}],"query":"api.NodeList"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.NodeList"}}],"toc":[{"text":"Live vs. Static NodeLists","id":"live_vs._static_nodelists"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().","popularity":0.0287,"modified":"2020-12-09T09:22:32.745Z","other_translations":[],"pageType":"web-api-interface","source":{"folder":"en-us/web/api/nodelist","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/nodelist/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"NodeList","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/NodeList","title":"NodeList"}],"pageTitle":"NodeList - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/NodeList"}