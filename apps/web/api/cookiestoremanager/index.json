{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CookieStoreManager","mdn_url":"/en-US/docs/Web/API/CookieStoreManager","locale":"en-US","native":"English (US)","browserCompat":["api.CookieStoreManager"],"baseline":{"baseline":false,"support":{"chrome":"87","chrome_android":"87","edge":"87"}},"sidebarHTML":"<ol><li class=\"section\"><a href=\"/en-US/docs/Web/API/Cookie_Store_API\">Cookie Store API</a></li><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/CookieStoreManager\" aria-current=\"page\"><code>CookieStoreManager</code></a></em></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/CookieStoreManager/getSubscriptions\"><code>getSubscriptions()</code></a></li><li><a href=\"/en-US/docs/Web/API/CookieStoreManager/subscribe\"><code>subscribe()</code></a></li><li><a href=\"/en-US/docs/Web/API/CookieStoreManager/unsubscribe\"><code>unsubscribe()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Cookie Store API</summary><ol><li><a href=\"/en-US/docs/Web/API/CookieChangeEvent\"><code>CookieChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/CookieStore\"><code>CookieStore</code></a></li><li><a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent\"><code>ExtendableCookieChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/cookieStore\"><code>ServiceWorkerGlobalScope.cookieStore</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration/cookies\"><code>ServiceWorkerRegistration.cookies</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/Window/cookieStore\"><code>Window.cookieStore</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard note\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Service_Worker_API\">Service Workers</a>.</p>\n</div>\n<p>The <strong><code>CookieStoreManager</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Cookie_Store_API\">Cookie Store API</a> allows service workers to subscribe to cookie change events. Call <a href=\"/en-US/docs/Web/API/CookieStoreManager/subscribe\" title=\"subscribe()\"><code>subscribe()</code></a> on a particular service worker registration to receive change events.</p>\n<p>A <code>CookieStoreManager</code> has an associated <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a>. Each service worker registration has a cookie change subscription list, which is a list of cookie change subscriptions each containing a name and URL. The methods in this interface allow the service worker to add and remove subscriptions from this list, and to get a list of all subscriptions.</p>\n<p>To get a <code>CookieStoreManager</code>, call <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration/cookies\"><code>ServiceWorkerRegistration.cookies</code></a>.</p>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"cookiestoremanager.getsubscriptions\"><a href=\"/en-US/docs/Web/API/CookieStoreManager/getSubscriptions\"><code>CookieStoreManager.getSubscriptions()</code></a></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves to a list of the cookie change subscriptions for this service worker registration.</p>\n  </dd>\n  <dt id=\"cookiestoremanager.subscribe\"><a href=\"/en-US/docs/Web/API/CookieStoreManager/subscribe\"><code>CookieStoreManager.subscribe()</code></a></dt>\n  <dd>\n    <p>Subscribes to changes to cookies. It returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves when the subscription is successful.</p>\n  </dd>\n  <dt id=\"cookiestoremanager.unsubscribe\"><a href=\"/en-US/docs/Web/API/CookieStoreManager/unsubscribe\"><code>CookieStoreManager.unsubscribe()</code></a></dt>\n  <dd>\n    <p>Unsubscribes the registered service worker from changes to cookies. It returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves when the operation is successful.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In this example, the <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> represented by <code>registration</code> is subscribing to change events on the cookie named <code>\"cookie1\"</code> with a scope of <code>\"/path1\"</code>.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>const subscriptions = [{ name: \"cookie1\", url: `/path1` }];\nawait registration.cookies.subscribe(subscriptions);\n</code></pre></div>\n<p>If the <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> has subscribed to any cookies, then <a href=\"/en-US/docs/Web/API/CookieStoreManager/getSubscriptions\" title=\"getSubscriptions()\"><code>getSubscriptions()</code></a> will return a list of cookies represented by objects in the same format as used for the original subscription.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>const subscriptions = await self.registration.cookies.getSubscriptions();\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/cookie-store/#cookiestoremanager","title":"Cookie Store API"}],"query":"api.CookieStoreManager"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CookieStoreManager"}}],"toc":[{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The CookieStoreManager interface of the Cookie Store API allows service workers to subscribe to cookie change events. Call subscribe() on a particular service worker registration to receive change events.","popularity":0.0007,"modified":null,"other_translations":[],"pageType":"web-api-interface","source":{"folder":"en-us/web/api/cookiestoremanager","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/cookiestoremanager/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"CookieStoreManager","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CookieStoreManager","title":"CookieStoreManager"}],"pageTitle":"CookieStoreManager - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/CookieStoreManager"}