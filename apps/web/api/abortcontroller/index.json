{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"AbortController","mdn_url":"/en-US/docs/Web/API/AbortController","locale":"en-US","native":"English (US)","browserCompat":["api.AbortController"],"baseline":{"baseline":"high","baseline_high_date":"2021-09-25","baseline_low_date":"2019-03-25","support":{"chrome":"66","chrome_android":"66","edge":"16","firefox":"57","firefox_android":"57","safari":"12.1","safari_ios":"12.2"}},"sidebarHTML":"<ol><li class=\"section\"><a href=\"/en-US/docs/Web/API/Document_Object_Model\">Document Object Model</a></li><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/AbortController\" aria-current=\"page\"><code>AbortController</code></a></em></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortController/AbortController\"><code>AbortController()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortController/signal\"><code>signal</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortController/abort\"><code>abort()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for DOM</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/en-US/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/en-US/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/en-US/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationRecord\"><code>MutationRecord</code></a></li><li><a href=\"/en-US/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/en-US/docs/Web/API/Range\"><code>Range</code></a></li><li><a href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>\n<p>The <strong><code>AbortController</code></strong> interface represents a controller object that allows you to abort one or more Web requests as and when desired.</p>\n<p>You can create a new <code>AbortController</code> object using the <a href=\"/en-US/docs/Web/API/AbortController/AbortController\" title=\"AbortController()\"><code>AbortController()</code></a> constructor. Communicating with an asynchronous operation is done using an <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> object.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"abortcontroller\"><a href=\"/en-US/docs/Web/API/AbortController/AbortController\" title=\"AbortController()\"><code>AbortController()</code></a></dt>\n  <dd>\n    <p>Creates a new <code>AbortController</code> object instance.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"abortcontroller.signal\"><a href=\"/en-US/docs/Web/API/AbortController/signal\"><code>AbortController.signal</code></a> <span class=\"badge inline readonly\" title=\"This value may not be changed.\">Read only </span></dt>\n  <dd>\n    <p>Returns an <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> object instance, which can be used to communicate with, or to abort, an asynchronous operation.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"abortcontroller.abort\"><a href=\"/en-US/docs/Web/API/AbortController/abort\"><code>AbortController.abort()</code></a></dt>\n  <dd>\n    <p>Aborts an asynchronous operation before it has completed. This is able to abort <a href=\"/en-US/docs/Web/API/Window/fetch\">fetch requests</a>, consumption of any response bodies, and streams.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"notecard note\">\n  <p><strong>Note:</strong> There are additional examples in the <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> reference.</p>\n</div>\n<p>In the following snippet, we aim to download a video using the <a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a>.</p>\n<p>We first create a controller using the <a href=\"/en-US/docs/Web/API/AbortController/AbortController\" title=\"AbortController()\"><code>AbortController()</code></a> constructor, then grab a reference to its associated <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> object using the <a href=\"/en-US/docs/Web/API/AbortController/signal\"><code>AbortController.signal</code></a> property.</p>\n<p>When the <a href=\"/en-US/docs/Web/API/Window/fetch\">fetch request</a> is initiated, we pass in the <code>AbortSignal</code> as an option inside the request's options object (the <code>{signal}</code> below). This associates the signal and controller with the fetch request and allows us to abort it by calling <a href=\"/en-US/docs/Web/API/AbortController/abort\"><code>AbortController.abort()</code></a>, as seen below in the second event listener.</p>\n<p>When <code>abort()</code> is called, the <code>fetch()</code> promise rejects with a <code>DOMException</code> named <code>AbortError</code>.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>let controller;\nconst url = \"video.mp4\";\n\nconst downloadBtn = document.querySelector(\".download\");\nconst abortBtn = document.querySelector(\".abort\");\n\ndownloadBtn.addEventListener(\"click\", fetchVideo);\n\nabortBtn.addEventListener(\"click\", () =&gt; {\n  if (controller) {\n    controller.abort();\n    console.log(\"Download aborted\");\n  }\n});\n\nasync function fetchVideo() {\n  controller = new AbortController();\n  const signal = controller.signal;\n\n  try {\n    const response = await fetch(url, { signal });\n    console.log(\"Download complete\", response);\n    // process response further\n  } catch (err) {\n    console.error(`Download error: ${err.message}`);\n  }\n}\n</code></pre></div>\n<p>If the request is aborted after the <code>fetch()</code> call has been fulfilled but before the response body has been read, then attempting to read the response body will reject with an <code>AbortError</code> exception.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>async function get() {\n  const controller = new AbortController();\n  const request = new Request(\"https://example.org/get\", {\n    signal: controller.signal,\n  });\n\n  const response = await fetch(request);\n  controller.abort();\n  // The next line will throw `AbortError`\n  const text = await response.text();\n  console.log(text);\n}\n</code></pre></div>\n<p>You can find a <a href=\"https://github.com/mdn/dom-examples/tree/main/abort-api\" class=\"external\" target=\"_blank\">full working example on GitHub</a>; you can also see it <a href=\"https://mdn.github.io/dom-examples/abort-api/\" class=\"external\" target=\"_blank\">running live</a>.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#interface-abortcontroller","title":"DOM Standard"}],"query":"api.AbortController"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.AbortController"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a></li>\n  <li><a href=\"https://developer.chrome.com/blog/abortable-fetch/\" class=\"external\" target=\"_blank\">Abortable Fetch</a> by Jake Archibald</li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The AbortController interface represents a controller object that allows you to abort one or more Web requests as and when desired.","popularity":0.0499,"modified":"2020-10-29T06:21:51.797Z","other_translations":[],"pageType":"web-api-interface","source":{"folder":"en-us/web/api/abortcontroller","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/abortcontroller/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"AbortController","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/AbortController","title":"AbortController"}],"pageTitle":"AbortController - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/AbortController"}