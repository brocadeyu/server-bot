{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"DataTransferItemList","mdn_url":"/en-US/docs/Web/API/DataTransferItemList","locale":"en-US","native":"English (US)","browserCompat":["api.DataTransferItemList"],"baseline":{"baseline":"high","baseline_high_date":"2018-01-29","baseline_low_date":"2015-07-29","support":{"chrome":"3","chrome_android":"18","edge":"12","firefox":"3.5","firefox_android":"4","safari":"4","safari_ios":"3.2"}},"sidebarHTML":"<ol><li class=\"section\"><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API\">HTML Drag and Drop API</a></li><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/DataTransferItemList\" aria-current=\"page\"><code>DataTransferItemList</code></a></em></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransferItemList/length\"><code>length</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransferItemList/add\"><code>add()</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransferItemList/clear\"><code>clear()</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransferItemList/remove\"><code>remove()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for HTML Drag and Drop API</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a></li><li><a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>DataTransferItemList</code></strong> object is a list of <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> objects representing items being dragged. During a <em>drag operation</em>, each <a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a> has a <a href=\"/en-US/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a> property and that property is a <code>DataTransferItemList</code>.</p>\n<p>The individual items can be accessed using the <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Property_accessors#bracket_notation\">bracket notation</a> <code>[]</code>.</p>\n<p><code>DataTransferItemList</code> was primarily designed for the <a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API\">HTML Drag and Drop API</a>, and is still specified in the HTML drag-and-drop section, but it is now also used by other APIs, such as <a href=\"/en-US/docs/Web/API/ClipboardEvent/clipboardData\"><code>ClipboardEvent.clipboardData</code></a> and <a href=\"/en-US/docs/Web/API/InputEvent/dataTransfer\"><code>InputEvent.dataTransfer</code></a>. Documentation of <code>DataTransferItemList</code> will primarily discuss its usage in drag-and-drop operations, and you should refer to the other APIs' documentation for usage of <code>DataTransferItemList</code> in those contexts.</p>\n<p>This interface has no constructor.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"datatransferitemlist.length\"><a href=\"/en-US/docs/Web/API/DataTransferItemList/length\"><code>DataTransferItemList.length</code></a> <span class=\"badge inline readonly\" title=\"This value may not be changed.\">Read only </span></dt>\n  <dd>\n    <p>An <code>unsigned long</code> that is the number of drag items in the list.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"datatransferitemlist.add\"><a href=\"/en-US/docs/Web/API/DataTransferItemList/add\"><code>DataTransferItemList.add()</code></a></dt>\n  <dd>\n    <p>Adds an item (either a <a href=\"/en-US/docs/Web/API/File\"><code>File</code></a> object or a string) to the drag item list and returns a <a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> object for the new item.</p>\n  </dd>\n  <dt id=\"datatransferitemlist.remove\"><a href=\"/en-US/docs/Web/API/DataTransferItemList/remove\"><code>DataTransferItemList.remove()</code></a></dt>\n  <dd>\n    <p>Removes the drag item from the list at the given index.</p>\n  </dd>\n  <dt id=\"datatransferitemlist.clear\"><a href=\"/en-US/docs/Web/API/DataTransferItemList/clear\"><code>DataTransferItemList.clear()</code></a></dt>\n  <dd>\n    <p>Removes all of the drag items from the list.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>This example shows how to use drag and drop.</p>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>function dragstartHandler(ev) {\n  console.log(\"dragStart\");\n\n  // Add this element's id to the drag payload so the drop handler will\n  // know which element to add to its tree\n  const dataList = ev.dataTransfer.items;\n  dataList.add(ev.target.id, \"text/plain\");\n\n  // Add some other items to the drag payload\n  dataList.add(\"&lt;p&gt;Paragraph…&lt;/p&gt;\", \"text/html\");\n  dataList.add(\"http://www.example.org\", \"text/uri-list\");\n}\n\nfunction dropHandler(ev) {\n  console.log(\"Drop\");\n  ev.preventDefault();\n\n  // Loop through the dropped items and log their data\n  for (const item of ev.dataTransfer.items) {\n    if (item.kind === \"string\" &amp;&amp; item.type.match(/^text\\/plain/)) {\n      // This item is the target node\n      item.getAsString((s) =&gt; {\n        ev.target.appendChild(document.getElementById(s));\n      });\n    } else if (item.kind === \"string\" &amp;&amp; item.type.match(/^text\\/html/)) {\n      // Drag data item is HTML\n      item.getAsString((s) =&gt; {\n        console.log(`… Drop: HTML = ${s}`);\n      });\n    } else if (item.kind === \"string\" &amp;&amp; item.type.match(/^text\\/uri-list/)) {\n      // Drag data item is URI\n      item.getAsString((s) =&gt; {\n        console.log(`… Drop: URI = ${s}`);\n      });\n    }\n  }\n}\n\nfunction dragoverHandler(ev) {\n  console.log(\"dragOver\");\n  ev.preventDefault();\n\n  // Set the dropEffect to move\n  ev.dataTransfer.dropEffect = \"move\";\n}\n\nfunction dragendHandler(ev) {\n  console.log(\"dragEnd\");\n  const dataList = ev.dataTransfer.items;\n\n  // Clear any remaining drag data\n  dataList.clear();\n}\n</code></pre></div>"}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">html</span></div><pre class=\"brush: html notranslate\"><code>&lt;div&gt;\n  &lt;p\n    id=\"source\"\n    ondragstart=\"dragstartHandler(event);\"\n    ondragend=\"dragendHandler(event);\"\n    draggable=\"true\"&gt;\n    Select this element, drag it to the Drop Zone and then release the selection\n    to move the element.\n  &lt;/p&gt;\n&lt;/div&gt;\n&lt;div\n  id=\"target\"\n  ondrop=\"dropHandler(event);\"\n  ondragover=\"dragoverHandler(event);\"&gt;\n  Drop Zone\n&lt;/div&gt;\n</code></pre></div>"}},{"type":"prose","value":{"id":"css","title":"CSS","isH3":true,"content":"<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">css</span></div><pre class=\"brush: css notranslate\"><code>div {\n  margin: 0em;\n  padding: 2em;\n}\n\n#source {\n  color: blue;\n  border: 1px solid black;\n}\n\n#target {\n  border: 1px solid black;\n}\n</code></pre></div>"}},{"type":"prose","value":{"id":"result","title":"Result","isH3":true,"content":"<div class=\"code-example\"><div class=\"example-header\"></div><iframe class=\"sample-code-frame\" title=\"Example sample\" id=\"frame_example\" width=\"35%\" height=\"250px\" src=\"about:blank\" data-live-path=\"/en-US/docs/Web/API/DataTransferItemList\" data-live-id=\"example\" sandbox=\"allow-same-origin allow-scripts\" loading=\"lazy\"></iframe></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/dnd.html#the-datatransferitemlist-interface","title":"HTML Standard"}],"query":"api.DataTransferItemList"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.DataTransferItemList"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The DataTransferItemList object is a list of DataTransferItem objects representing items being dragged. During a drag operation, each DragEvent has a dataTransfer property and that property is a DataTransferItemList.","popularity":0.0024,"modified":"2020-10-15T21:40:12.835Z","other_translations":[],"pageType":"web-api-interface","source":{"folder":"en-us/web/api/datatransferitemlist","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/datatransferitemlist/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"DataTransferItemList","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/DataTransferItemList","title":"DataTransferItemList"}],"pageTitle":"DataTransferItemList - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/DataTransferItemList"}