{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ExtendableCookieChangeEvent","mdn_url":"/en-US/docs/Web/API/ExtendableCookieChangeEvent","locale":"en-US","native":"English (US)","browserCompat":["api.ExtendableCookieChangeEvent"],"baseline":{"baseline":false,"support":{"chrome":"87","chrome_android":"87","edge":"87"}},"sidebarHTML":"<ol><li class=\"section\"><a href=\"/en-US/docs/Web/API/Cookie_Store_API\">Cookie Store API</a></li><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent\" aria-current=\"page\"><code>ExtendableCookieChangeEvent</code></a></em></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent/ExtendableCookieChangeEvent\"><code>ExtendableCookieChangeEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent/changed\"><code>changed</code></a></li><li><a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent/deleted\"><code>deleted</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance</summary><ol><li><a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Cookie Store API</summary><ol><li><a href=\"/en-US/docs/Web/API/CookieChangeEvent\"><code>CookieChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/CookieStore\"><code>CookieStore</code></a></li><li><a href=\"/en-US/docs/Web/API/CookieStoreManager\"><code>CookieStoreManager</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/cookieStore\"><code>ServiceWorkerGlobalScope.cookieStore</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration/cookies\"><code>ServiceWorkerRegistration.cookies</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/Window/cookieStore\"><code>Window.cookieStore</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard note\">\n  <p><strong>Note:</strong> This feature is only available in <a href=\"/en-US/docs/Web/API/Service_Worker_API\">Service Workers</a>.</p>\n</div>\n<p>The <strong><code>ExtendableCookieChangeEvent</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Cookie_Store_API\">Cookie Store API</a> is the event type passed to <a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/cookiechange_event\" title=\"cookiechange\"><code>cookiechange</code></a> event fired at the <a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> when any cookie changes occur which match the service worker's cookie change subscription list. A cookie change event consists of a cookie and a type. (either \"changed\" or \"deleted\")</p>\n<p>Cookie changes that cause the <code>ExtendableCookieChangeEvent</code> to be dispatched are:</p>\n<ul>\n  <li>A cookie is newly created and not immediately removed. In this case <code>type</code> is \"changed\".</li>\n  <li>A cookie is newly created and immediately removed. In this case <code>type</code> is \"deleted\"</li>\n  <li>A cookie is removed. In this case <code>type</code> is \"deleted\".</li>\n</ul>\n<div class=\"notecard note\">\n  <p><strong>Note:</strong> A cookie that is replaced due to the insertion of another cookie with the same name, domain, and path, is ignored and does not trigger a change event.</p>\n</div><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" href=\"/en-US/docs/Web/API/Event\">\n    <rect x=\"0\" y=\"0\" width=\"75\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"37.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      Event\n    </text>\n  </a>\n  <line x1=\"75\" y1=\"14\" x2=\"105\" y2=\"14\" stroke=\"#D4DDE4\"></line>\n  <polyline points=\"75,14 85,9 85,19 75,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" href=\"/en-US/docs/Web/API/ExtendableEvent\">\n    <rect x=\"105\" y=\"0\" width=\"120\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"165\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      ExtendableEvent\n    </text>\n  </a>\n  <line x1=\"225\" y1=\"14\" x2=\"255\" y2=\"14\" stroke=\"#D4DDE4\"></line>\n  <polyline points=\"225,14 235,9 235,19 225,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent\" aria-current=\"page\">\n    <rect x=\"255\" y=\"0\" width=\"216\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"363\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      ExtendableCookieChangeEvent\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"extendablecookiechangeevent\"><a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent/ExtendableCookieChangeEvent\" title=\"ExtendableCookieChangeEvent()\"><code>ExtendableCookieChangeEvent()</code></a></dt>\n  <dd>\n    <p>Creates a new <code>ExtendableCookieChangeEvent</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p><em>This interface also inherits properties from <a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a>.</em></p>\n<dl>\n  <dt id=\"extendablecookiechangeevent.changed\"><a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent/changed\"><code>ExtendableCookieChangeEvent.changed</code></a> <span class=\"badge inline readonly\" title=\"This value may not be changed.\">Read only </span></dt>\n  <dd>\n    <p>Returns an array containing the changed cookies.</p>\n  </dd>\n  <dt id=\"extendablecookiechangeevent.deleted\"><a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent/deleted\"><code>ExtendableCookieChangeEvent.deleted</code></a> <span class=\"badge inline readonly\" title=\"This value may not be changed.\">Read only </span></dt>\n  <dd>\n    <p>Returns an array containing the deleted cookies.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<p><em>This interface also inherits methods from <a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a>.</em></p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In the below example, we use <a href=\"/en-US/docs/Web/API/CookieStoreManager/getSubscriptions\"><code>CookieStoreManager.getSubscriptions()</code></a> to get a list of existing subscriptions. (In service workers, a subscription is required in order to listen for events.) We unsubscribe from existing subscriptions using <a href=\"/en-US/docs/Web/API/CookieStoreManager/unsubscribe\"><code>CookieStoreManager.unsubscribe()</code></a>, then subscribe to the cookie with a name of 'COOKIE_NAME' using <a href=\"/en-US/docs/Web/API/CookieStoreManager/subscribe\"><code>CookieStoreManager.subscribe()</code></a>. If that cookie is changed, the event listener logs the event to the console. This will be an <code>ExtendableCookieChangeEvent</code> object, with the <a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent/changed\" title=\"changed\"><code>changed</code></a> or <a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent/deleted\" title=\"deleted\"><code>deleted</code></a> property containing the modified cookie.</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>self.addEventListener(\"activate\", (event) =&gt; {\n  event.waitUntil(async () =&gt; {\n    const subscriptions = await self.registration.cookies.getSubscriptions();\n\n    await self.registration.cookies.unsubscribe(subscriptions);\n\n    await self.registration.cookies.subscribe([\n      {\n        name: \"COOKIE_NAME\",\n      },\n    ]);\n  });\n});\n\nself.addEventListener(\"cookiechange\", (event) =&gt; {\n  console.log(event);\n});\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/cookie-store/#ExtendableCookieChangeEvent","title":"Cookie Store API"}],"query":"api.ExtendableCookieChangeEvent"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ExtendableCookieChangeEvent"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The ExtendableCookieChangeEvent interface of the Cookie Store API is the event type passed to cookiechange event fired at the ServiceWorkerGlobalScope when any cookie changes occur which match the service worker's cookie change subscription list. A cookie change event consists of a cookie and a type. (either \"changed\" or \"deleted\")","popularity":0,"modified":null,"other_translations":[],"pageType":"web-api-interface","source":{"folder":"en-us/web/api/extendablecookiechangeevent","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/extendablecookiechangeevent/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"ExtendableCookieChangeEvent","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ExtendableCookieChangeEvent","title":"ExtendableCookieChangeEvent"}],"pageTitle":"ExtendableCookieChangeEvent - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/ExtendableCookieChangeEvent"}