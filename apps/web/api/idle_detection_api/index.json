{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Idle Detection API","mdn_url":"/en-US/docs/Web/API/Idle_Detection_API","locale":"en-US","native":"English (US)","browserCompat":["api.IdleDetector"],"baseline":{"baseline":false,"support":{"chrome":"94","chrome_android":"94","edge":"114"}},"sidebarHTML":"<ol><li class=\"section\"><em><a href=\"/en-US/docs/Web/API/Idle_Detection_API\" aria-current=\"page\">Idle Detection API</a></em></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/IdleDetector\"><code>IdleDetector</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div><div class=\"notecard note\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope\">Dedicated Web Workers</a>.</p>\n</div>\n<p>The Idle Detection API provides a means to detect the user's idle status, active, idle, and locked, specifically, and to be notified of changes to idle status without polling from a script.</p>"}},{"type":"prose","value":{"id":"concepts_and_usage","title":"Concepts and Usage","isH3":false,"content":"<p>Native applications and browser extensions use idle detection base user experiences on when a user is interacting with a device. For example, chat applications can show other users of an application whether someone is available. Other applications might choose to show notifications only when a user is interacting with the app. A web application could use this API for similar use cases. Additionally, a progressive web app could use idle detection to trigger a service worker update when the app isn't being used.</p>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<dl>\n  <dt id=\"idledetector\"><a href=\"/en-US/docs/Web/API/IdleDetector\"><code>IdleDetector</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Provides methods and events for detecting user activity on a device or screen.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  The following example shows creating a detector and logging changes to the\n  user's idle state. A button is used to get the necessary user activation before\n  requesting permission.\n</p>\n<div class=\"code-example\"><div class=\"example-header\"><span class=\"language-name\">js</span></div><pre class=\"brush: js notranslate\"><code>const controller = new AbortController();\nconst signal = controller.signal;\n\nstartButton.addEventListener(\"click\", async () =&gt; {\n  if ((await IdleDetector.requestPermission()) !== \"granted\") {\n    console.error(\"Idle detection permission denied.\");\n    return;\n  }\n\n  try {\n    const idleDetector = new IdleDetector();\n    idleDetector.addEventListener(\"change\", () =&gt; {\n      const userState = idleDetector.userState;\n      const screenState = idleDetector.screenState;\n      console.log(`Idle change: ${userState}, ${screenState}.`);\n    });\n\n    await idleDetector.start({\n      threshold: 60_000,\n      signal,\n    });\n    console.log(\"IdleDetector is active.\");\n  } catch (err) {\n    // Deal with initialization errors like permission denied,\n    // running outside of top-level frame, etc.\n    console.error(err.name, err.message);\n  }\n});\n\nstopButton.addEventListener(\"click\", () =&gt; {\n  controller.abort();\n  console.log(\"IdleDetector is stopped.\");\n});\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/idle-detection/#api-idledetector","title":"Idle Detection API"}],"query":"api.IdleDetector"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IdleDetector"}}],"toc":[{"text":"Concepts and Usage","id":"concepts_and_usage"},{"text":"Interfaces","id":"interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The Idle Detection API provides a means to detect the user's idle status, active, idle, and locked, specifically, and to be notified of changes to idle status without polling from a script.","popularity":0.0049,"modified":null,"other_translations":[],"pageType":"web-api-overview","source":{"folder":"en-us/web/api/idle_detection_api","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/idle_detection_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"Idle Detection API","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Idle_Detection_API","title":"Idle Detection API"}],"pageTitle":"Idle Detection API - Web APIs | MDN","noIndexing":false},"url":"/en-US/docs/Web/API/Idle_Detection_API"}