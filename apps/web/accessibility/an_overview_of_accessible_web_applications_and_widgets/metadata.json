{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/","name":"MacroWrongXRefError","error":{},"errorStack":"Error: Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/\n    at Object.recordNonFatalError (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:90:23)\n    at Object.smartLink (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/api/web.js:95:37)\n    at renderSubsection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":119:24)\n    at renderSection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":142:21)\n    at async renderSidebar (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":152:15)\n    at async eval (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":160:16)","offset":6,"line":7,"column":1,"macroName":"AccessibilitySidebar","sourceContext":"> | {{AccessibilitySidebar}}\n    ^\n  | <p>Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces. Sliders, menu bars, file list views, and more can be built with a combination of JavaScript, CSS, and HTML. Since the HTML4 specification doesn't provide built-in tags that semantically describe these kinds of widgets, developers typically resort to using generic elements such as {{HTMLElement('div')}} and {{HTMLElement('span')}}. While this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.</p>\n  | <h2>The problem</h2>","fatal":false,"macroSource":"{{AccessibilitySidebar}}","filepath":"/Users/yjb/Project/content/files/en-us/web/accessibility/an_overview_of_accessible_web_applications_and_widgets/index.md"},{"id":"macro1","fixable":false,"suggestion":null,"explanation":"Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/What_is_accessibility","name":"MacroWrongXRefError","error":{},"errorStack":"Error: Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/What_is_accessibility\n    at Object.recordNonFatalError (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:90:23)\n    at Object.smartLink (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/api/web.js:95:37)\n    at renderSubsection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":119:24)\n    at renderSection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":142:21)\n    at async renderSidebar (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":152:15)\n    at async eval (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":160:16)","offset":6,"line":7,"column":1,"macroName":"AccessibilitySidebar","sourceContext":"> | {{AccessibilitySidebar}}\n    ^\n  | <p>Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces. Sliders, menu bars, file list views, and more can be built with a combination of JavaScript, CSS, and HTML. Since the HTML4 specification doesn't provide built-in tags that semantically describe these kinds of widgets, developers typically resort to using generic elements such as {{HTMLElement('div')}} and {{HTMLElement('span')}}. While this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.</p>\n  | <h2>The problem</h2>","fatal":false,"macroSource":"{{AccessibilitySidebar}}","filepath":"/Users/yjb/Project/content/files/en-us/web/accessibility/an_overview_of_accessible_web_applications_and_widgets/index.md"},{"id":"macro2","fixable":false,"suggestion":null,"explanation":"Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/HTML","name":"MacroWrongXRefError","error":{},"errorStack":"Error: Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/HTML\n    at Object.recordNonFatalError (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:90:23)\n    at Object.smartLink (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/api/web.js:95:37)\n    at renderSubsection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":119:24)\n    at renderSection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":142:21)\n    at async renderSidebar (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":152:15)\n    at async eval (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":160:16)","offset":6,"line":7,"column":1,"macroName":"AccessibilitySidebar","sourceContext":"> | {{AccessibilitySidebar}}\n    ^\n  | <p>Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces. Sliders, menu bars, file list views, and more can be built with a combination of JavaScript, CSS, and HTML. Since the HTML4 specification doesn't provide built-in tags that semantically describe these kinds of widgets, developers typically resort to using generic elements such as {{HTMLElement('div')}} and {{HTMLElement('span')}}. While this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.</p>\n  | <h2>The problem</h2>","fatal":false,"macroSource":"{{AccessibilitySidebar}}","filepath":"/Users/yjb/Project/content/files/en-us/web/accessibility/an_overview_of_accessible_web_applications_and_widgets/index.md"},{"id":"macro3","fixable":false,"suggestion":null,"explanation":"Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/CSS_and_JavaScript","name":"MacroWrongXRefError","error":{},"errorStack":"Error: Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/CSS_and_JavaScript\n    at Object.recordNonFatalError (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:90:23)\n    at Object.smartLink (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/api/web.js:95:37)\n    at renderSubsection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":119:24)\n    at renderSection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":142:21)\n    at async renderSidebar (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":152:15)\n    at async eval (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":160:16)","offset":6,"line":7,"column":1,"macroName":"AccessibilitySidebar","sourceContext":"> | {{AccessibilitySidebar}}\n    ^\n  | <p>Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces. Sliders, menu bars, file list views, and more can be built with a combination of JavaScript, CSS, and HTML. Since the HTML4 specification doesn't provide built-in tags that semantically describe these kinds of widgets, developers typically resort to using generic elements such as {{HTMLElement('div')}} and {{HTMLElement('span')}}. While this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.</p>\n  | <h2>The problem</h2>","fatal":false,"macroSource":"{{AccessibilitySidebar}}","filepath":"/Users/yjb/Project/content/files/en-us/web/accessibility/an_overview_of_accessible_web_applications_and_widgets/index.md"},{"id":"macro4","fixable":false,"suggestion":null,"explanation":"Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/WAI-ARIA_basics","name":"MacroWrongXRefError","error":{},"errorStack":"Error: Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/WAI-ARIA_basics\n    at Object.recordNonFatalError (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:90:23)\n    at Object.smartLink (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/api/web.js:95:37)\n    at renderSubsection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":119:24)\n    at renderSection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":142:21)\n    at async renderSidebar (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":152:15)\n    at async eval (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":160:16)","offset":6,"line":7,"column":1,"macroName":"AccessibilitySidebar","sourceContext":"> | {{AccessibilitySidebar}}\n    ^\n  | <p>Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces. Sliders, menu bars, file list views, and more can be built with a combination of JavaScript, CSS, and HTML. Since the HTML4 specification doesn't provide built-in tags that semantically describe these kinds of widgets, developers typically resort to using generic elements such as {{HTMLElement('div')}} and {{HTMLElement('span')}}. While this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.</p>\n  | <h2>The problem</h2>","fatal":false,"macroSource":"{{AccessibilitySidebar}}","filepath":"/Users/yjb/Project/content/files/en-us/web/accessibility/an_overview_of_accessible_web_applications_and_widgets/index.md"},{"id":"macro5","fixable":false,"suggestion":null,"explanation":"Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/Multimedia","name":"MacroWrongXRefError","error":{},"errorStack":"Error: Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/Multimedia\n    at Object.recordNonFatalError (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:90:23)\n    at Object.smartLink (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/api/web.js:95:37)\n    at renderSubsection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":119:24)\n    at renderSection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":142:21)\n    at async renderSidebar (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":152:15)\n    at async eval (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":160:16)","offset":6,"line":7,"column":1,"macroName":"AccessibilitySidebar","sourceContext":"> | {{AccessibilitySidebar}}\n    ^\n  | <p>Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces. Sliders, menu bars, file list views, and more can be built with a combination of JavaScript, CSS, and HTML. Since the HTML4 specification doesn't provide built-in tags that semantically describe these kinds of widgets, developers typically resort to using generic elements such as {{HTMLElement('div')}} and {{HTMLElement('span')}}. While this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.</p>\n  | <h2>The problem</h2>","fatal":false,"macroSource":"{{AccessibilitySidebar}}","filepath":"/Users/yjb/Project/content/files/en-us/web/accessibility/an_overview_of_accessible_web_applications_and_widgets/index.md"},{"id":"macro6","fixable":false,"suggestion":null,"explanation":"Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/Mobile","name":"MacroWrongXRefError","error":{},"errorStack":"Error: Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/Mobile\n    at Object.recordNonFatalError (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:90:23)\n    at Object.smartLink (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/api/web.js:95:37)\n    at renderSubsection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":119:24)\n    at renderSection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":142:21)\n    at async renderSidebar (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":152:15)\n    at async eval (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":160:16)","offset":6,"line":7,"column":1,"macroName":"AccessibilitySidebar","sourceContext":"> | {{AccessibilitySidebar}}\n    ^\n  | <p>Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces. Sliders, menu bars, file list views, and more can be built with a combination of JavaScript, CSS, and HTML. Since the HTML4 specification doesn't provide built-in tags that semantically describe these kinds of widgets, developers typically resort to using generic elements such as {{HTMLElement('div')}} and {{HTMLElement('span')}}. While this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.</p>\n  | <h2>The problem</h2>","fatal":false,"macroSource":"{{AccessibilitySidebar}}","filepath":"/Users/yjb/Project/content/files/en-us/web/accessibility/an_overview_of_accessible_web_applications_and_widgets/index.md"},{"id":"macro7","fixable":false,"suggestion":null,"explanation":"Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/Accessibility_troubleshooting","name":"MacroWrongXRefError","error":{},"errorStack":"Error: Wrong xref macro used (consider changing which macro you use). Error processing path /en-US/docs/Learn/Accessibility/Accessibility_troubleshooting\n    at Object.recordNonFatalError (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/render.js:90:23)\n    at Object.smartLink (file:///Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/src/api/web.js:95:37)\n    at renderSubsection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":119:24)\n    at renderSection (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":142:21)\n    at async renderSidebar (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":152:15)\n    at async eval (\"/Users/yjb/Project/content/node_modules/@mdn/yari/kumascript/macros/AccessibilitySidebar.ejs\":160:16)","offset":6,"line":7,"column":1,"macroName":"AccessibilitySidebar","sourceContext":"> | {{AccessibilitySidebar}}\n    ^\n  | <p>Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces. Sliders, menu bars, file list views, and more can be built with a combination of JavaScript, CSS, and HTML. Since the HTML4 specification doesn't provide built-in tags that semantically describe these kinds of widgets, developers typically resort to using generic elements such as {{HTMLElement('div')}} and {{HTMLElement('span')}}. While this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.</p>\n  | <h2>The problem</h2>","fatal":false,"macroSource":"{{AccessibilitySidebar}}","filepath":"/Users/yjb/Project/content/files/en-us/web/accessibility/an_overview_of_accessible_web_applications_and_widgets/index.md"}]},"title":"An overview of accessible web applications and widgets","mdn_url":"/en-US/docs/Web/Accessibility/An_overview_of_accessible_web_applications_and_widgets","locale":"en-US","native":"English (US)","summary":"Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces. Sliders, menu bars, file list views, and more can be built with a combination of JavaScript, CSS, and HTML. Since the HTML4 specification doesn't provide built-in tags that semantically describe these kinds of widgets, developers typically resort to using generic elements such as <div> and <span>. While this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.","popularity":0.0016,"modified":"2019-06-19T20:00:17.673Z","other_translations":[],"pageType":"guide","source":{"folder":"en-us/web/accessibility/an_overview_of_accessible_web_applications_and_widgets","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/accessibility/an_overview_of_accessible_web_applications_and_widgets/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"An overview of accessible web applications and widgets","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/Accessibility","title":"Accessibility"},{"uri":"/en-US/docs/Web/Accessibility/An_overview_of_accessible_web_applications_and_widgets","title":"An overview of accessible web applications and widgets"}],"pageTitle":"An overview of accessible web applications and widgets - Accessibility | MDN","noIndexing":false,"hash":"a7d81f030e2af62c431ca1478ee27495bea4f1f85fd78fc296db29abf6f01b12"}