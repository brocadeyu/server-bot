import{_ as f,a as v,b}from"./chunks/FunctionInfo.vue_vue_type_script_setup_true_lang.CqAlsCcT.js";import{_ as B}from"./chunks/DemoContainer.vue_vue_type_script_setup_true_lang.B3GoC75D.js";import{_ as m}from"./chunks/BooleanDisplay.vue_vue_type_script_setup_true_lang.owu95yBy.js";import{v as _,C as E,E as C,r as c,g as u,U as D,o,c as d,b as k,d as n,u as A,f as x,a as i,t as g,F as w,e as y,w as F}from"./chunks/vue.CliZxonC.js";import"./chunks/configurable.C7TV9RQd.js";import"./chunks/utils.B5e_uQLX.js";function $(h,t){const s=_();return E(()=>{s.value=h()},{...t,flush:"sync"}),C(s)}const r=c(0),T=u({__name:"EagerDemo",emits:["update"],setup(h,{emit:t}){const s=t;D(()=>s("update"));const l=$(()=>r.value>5);return(a,e)=>{const p=m;return o(),d("div",null,[e[0]||(e[0]=k(" Is over 5: ")),n(p,{value:A(l)},null,8,["value"])])}}}),q=u({__name:"LazyDemo",emits:["update"],setup(h,{emit:t}){const s=t;D(()=>s("update"));const l=x(()=>r.value>5);return(a,e)=>{const p=m;return o(),d("div",null,[e[0]||(e[0]=k(" Is over 5: ")),n(p,{value:l.value},null,8,["value"])])}}}),P={grid:"","grid-cols-2":""},V={"font-mono":""},O={"font-mono":""},I={"mt-4":"","font-mono":""},R=u({__name:"demo",setup(h){const t=c(0),s=c(0);return(l,a)=>(o(),d(w,null,[i("div",P,[i("div",null,[a[4]||(a[4]=i("span",{"text-primary":"","font-bold":""},"Lazy Computed",-1)),i("div",V,[n(q,{onUpdate:a[0]||(a[0]=e=>t.value++)}),i("div",null," Renders: "+g(t.value),1)])]),i("div",null,[a[5]||(a[5]=i("span",{"text-primary":"","font-bold":""},"Eager Computed",-1)),i("div",O,[n(T,{onUpdate:a[1]||(a[1]=e=>s.value++)}),i("div",null,"Renders: "+g(s.value),1)])])]),i("div",I," Count: "+g(A(r)),1),i("button",{secondary:"",onClick:a[2]||(a[2]=e=>r.value--)}," Decrement "),i("button",{onClick:a[3]||(a[3]=e=>r.value++)}," Increment ")],64))}}),J=JSON.parse('{"title":"computedEager","description":"","frontmatter":{"category":"Reactivity","alias":"eagerComputed"},"headers":[],"relativePath":"shared/computedEager/index.md","filePath":"shared/computedEager/index.md"}'),U={name:"shared/computedEager/index.md"},G=Object.assign(U,{setup(h){return(t,s)=>{const l=f,a=B,e=v,p=b;return o(),d("div",null,[s[1]||(s[1]=i("h1",{id:"computedeager",tabindex:"-1"},[k("computedEager "),i("a",{class:"header-anchor",href:"#computedeager","aria-label":'Permalink to "computedEager"'},"â€‹")],-1)),n(l,{fn:"computedEager"}),s[2]||(s[2]=y('<p>Eager computed without lazy evaluation.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>NoteðŸ’¡: If you are using Vue 3.4+, you can use <code>computed</code> right away. In Vue 3.4+, if the computed new value does not change, <code>computed</code>, <code>effect</code>, <code>watch</code>, <code>watchEffect</code>, <code>render</code> dependencies will not be triggered. See: <a href="https://github.com/vuejs/core/pull/5912" target="_blank" rel="noreferrer">https://github.com/vuejs/core/pull/5912</a></p></div><p>Learn more at <a href="https://dev.to/linusborg/vue-when-a-computed-property-can-be-the-wrong-tool-195j" target="_blank" rel="noreferrer">Vue: When a computed property can be the wrong tool</a>.</p><ul><li>Use <code>computed()</code> when you have a complex calculation going on, which can actually profit from caching and lazy evaluation and should only be (re-)calculated if really necessary.</li><li>Use <code>computedEager()</code> when you have a simple operation, with a rarely changing return value â€“ often a boolean.</li></ul><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-label="Permalink to &quot;Demo&quot;">â€‹</a></h2>',5)),n(a,null,{default:F(()=>[s[0]||(s[0]=i("p",{class:"demo-source-link"},[i("a",{href:"https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/demo.vue",target:"_blank"},"source")],-1)),n(R)]),_:1}),s[3]||(s[3]=y(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">â€‹</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> computedEager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">@vueuse/core</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> todos</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ref</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([])</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> hasOpenTodos</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> computedEager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> !!</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">todos</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">length</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">hasOpenTodos</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // false</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">toTodos</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Learn Vue</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> })</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">hasOpenTodos</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // true</span></span></code></pre></div><h2 id="type-declarations" tabindex="-1">Type Declarations <a class="header-anchor" href="#type-declarations" aria-label="Permalink to &quot;Type Declarations&quot;">â€‹</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * Note: If you are using Vue 3.4+, you can straight use computed instead.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * Because in Vue 3.4+, if computed new value does not change,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * computed, effect, watch, watchEffect, render dependencies will not be triggered.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * refer: https://github.com/vuejs/core/pull/5912</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">param</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> fn</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> effect function</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">param</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> options</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> WatchOptionsBase</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">returns</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> readonly ref</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> */</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> declare</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> computedEager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  fn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: () =&gt; </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  options</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">WatchOptionsBase</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">):</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Readonly</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">Ref</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;&gt;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> computedEager</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> as</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> eagerComputed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span></span></code></pre></div><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">â€‹</a></h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/index.ts" target="_blank" rel="noreferrer">Source</a> â€¢ <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/demo.vue" target="_blank" rel="noreferrer">Demo</a> â€¢ <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/index.md" target="_blank" rel="noreferrer">Docs</a></p><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">â€‹</a></h2>`,7)),n(e,{fn:"computedEager"}),s[4]||(s[4]=i("h2",{id:"changelog",tabindex:"-1"},[k("Changelog "),i("a",{class:"header-anchor",href:"#changelog","aria-label":'Permalink to "Changelog"'},"â€‹")],-1)),n(p,{fn:"computedEager"})])}}});export{J as __pageData,G as default};
